{"version":3,"sources":["store/actions.ts","store/index.tsx","util/address.ts","assets/images/metamask.png","components/Image.component.tsx","components/Wallet.component.tsx","hooks/Balance.ts","network/NETWORK_CONSTS.ts","components/SignIn.component.tsx","network/auth.ts","components/Drawer.component.tsx","components/StatusBar.component.tsx","components/Title.component.tsx","network/api.ts","hooks/Product.hook.ts","pages/categories/index.tsx","util/tags.ts","pages/categories/new-category.tsx","pages/categories/category-panel.tsx","hooks/Category.hook.ts","pages/products/index.tsx","hooks/Contract.hook.ts","contracts/index.ts","pages/products/new-product.tsx","hooks/ProductContract.hook.ts","pages/products/product-panel.tsx","hooks/Order.hook.ts","pages/orders/order.list.tsx","pages/orders/index.tsx","pages/orders/new-order.tsx","pages/orders/order-panel.tsx","pages/archives/index.tsx","pages/collections/index.tsx","network/socket.ts","pages/lobby/index.tsx","pages/users/user.list.tsx","pages/users/index.tsx","hooks/User.hook.ts","components/NetworkLog.component.tsx","pages/users/user-panel.page.tsx","hooks/Log.hook.ts","pages/contracts/index.tsx","pages/contracts/new-contract.tsx","pages/contracts/candy.tsx","pages/contracts/new-candy.tsx","pages/contracts/quadratic-loot/quadratic-loot.tsx","pages/contracts/quadratic-loot/new-quadratic-loot.tsx","pages/http-logs/index.tsx","assets/images/marker.png","pages/godview/index.tsx","pages/router.tsx","pages/index.tsx","theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ACTIONS","initialState","chain_id","profile","JSON","parse","localStorage","getItem","stringify","name","user_id","address","token","wallet","wallets","provider","drawerOpen","GitcoinContext","React","createContext","gitcoinReducer","state","action","type","payload","setItem","ethers","providers","Web3Provider","window","ethereum","Error","GitcoinProvider","children","useReducer","dispatch","Provider","value","minimizeAddress","addr","_k","len","length","substr","Image","src","alt","props","WalletComponent","useContext","balance","useState","setbalance","useMemo","a","Number","getBalance","b","parseFloat","toString","toFixed","useGetBalance","onMetamaskConnect","e","preventDefault","request","method","params","eth_accounts","useEffect","requestSwitchNetwork","chainId","style","display","flexDirection","className","flex","justifyContent","alignItems","margin","border","padding","backgroundColor","onClick","width","fontWeight","MetamaskIcon","height","SERVER","console","log","GetBaseUrl","i","GetUrl","SignIncomponent","err","setErr","loading","setLoading","login","setLogin","handleAccountsChanged","accounts","myweb3","Web3","currentProvider","handleChainChanged","parseInt","_stup","then","catch","error","on","eth","net","getId","removeListener","Box","background","component","flexGrow","overflow","Container","maxWidth","marginTop","Paper","noValidate","autoComplete","Chip","variant","size","label","onDelete","borderColor","color","textAlign","fontSize","FormControl","TextField","required","id","placeholder","onChange","target","Button","disabled","isAddress","trim","axios","get","res","data","success","nonce","personal","sign","signedMessage","post","Login","result","msg","message","code","CircularProgress","SignIn","useStyles","makeStyles","theme","createStyles","drawer","position","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","boxSizing","open","overflowX","leavingScreen","spacing","breakpoints","up","DrawerComponent","useTheme","styles","router","useHistory","Drawer","Toolbar","top","palette","primary","light","Typography","noWrap","path","push","IconButton","Divider","List","LobbyListItems","ListSubheader","inset","ListItem","button","ListItemIcon","ListItemText","MainListItems","navigate","SecondaryListItems","ContractListItems","appBar","zIndex","marginLeft","StatusBarComponent","title","newBtn","AppBar","paddingRight","edge","aria-label","marginRight","removeItem","replace","Title","gutterBottom","textShadow","GetQuadraticLootContracts","url","headers","Authorization","GetTokenContracts","GetProductContracts","GetUsers","GetUserById","GetHttpLogs","GetUniqueLogsByIp","GetProducts","GetProductById","pid","GetProductCategories","GetCategoryById","cid","GetOrders","item","user","GetOrderById","oid","useGetProductCategories","productcat","setproductcat","setloading","seterr","keyword","CategoryContent","setKeyword","perPage","page","setPage","els","map","c","category","category_id","autoFocus","inputProps","slice","divider","Pagination","marginBottom","showFirstButton","showLastButton","count","Math","ceil","boundaryCount","siblingCount","defaultPage","event","shape","CategoryCard","Avatar","avatar","objectFit","colors","lineHeight","description","tags","join","red","green","blue","cyan","pink","constTags","Alert","elevation","initState","NewCategoryPage","snackbarOpen","setSnackbarOpen","newCat","setNewCat","hidden","InputLabel","Select","labelId","MenuItem","multiple","input","Input","renderValue","selected","flexWrap","Checkbox","checked","indexOf","Snackbar","autoHideDuration","onClose","severity","CategoryPanelPage","trigger","setTrigger","useParams","product","setproduct","useGetCategoryById","setValue","Tabs","newValue","Tab","a11yProps","index","onTrigger","CategoryTabContent","minHeight","Link","paddingLeft","TabPanel","other","role","aria-labelledby","borderRadius","MyChip","ProductContent","products","setproducts","useGetProducts","product_id","ProductCard","uid","contract","useGetTokenContracts","chain","contracts","setcontracts","useGetProductContracts","getProductContractMeta","metadata","require","getQuadtraicLootMeta","NewProductPage","newProduct","setNewProduct","categories","setcontract","Contract","abi","methods","getAllProducts","call","useGetProductContractItems","items","utils","parseBytes32String","ProductPanelPage","useGetProductById","ProductTabContent","OrderTabContent","activeProducts","orders","setorders","useGetOrdersByProduct","Table","TableHead","TableRow","TableCell","TableBody","account","ActivityTabContent","OrderListComponent","rowsPerPage","setRowsPerPage","order","order_id","align","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onPageChange","newPage","onRowsPerPageChange","ActionsComponent","TablePaginationActions","OrderCard","cursor","dark","typeColors","statusColors","status","borderLeft","scope","created_at","Date","toLocaleString","paid","pending","blueGrey","cancelled","Full","indigo","BitByBit","FirstPage","KeyboardArrowLeft","KeyboardArrowRight","max","LastPage","OrderContent","useGetOrders","NewOrderPage","newOrder","setNewOrder","OrderPanelPage","setorder","useGetOrderById","onStatusChange","UpdateOrderStatus","ArchiveContent","archive","archive_id","ArchiveCard","CollectionContent","mainManager","mainSocket","collection","collection_id","CollectionCard","Disconnect","close","useSubToMembers","members","setmembers","GetLobby","obj","findIndex","m","splice","tryRemove","off","UserContent","users","icon","UserCard","borderBottom","UserListComponent","badge","setusers","useGetUsers","NetworkLogComponent","logs","HttpLogCard","route","ip","geolocation","setuser","useGetUserById","UserTabContent","borderTop","UserBadgeComponent","onBadgeChange","UpdateUserBadge","isActive","UserStatusComponent","UpdateUserStatus","badgeColors","Pleb","Steward","orange","VIP","Admin","deepPurple","Banned","Suspended","Verified","BadgeComponent","StatusComponent","ActiveOrderTabContent","useGetOrdersByUser","LogTabContent","setlogs","useGetHttpLogs","ActionTabContent","ContractContent","productContracts","productCount","initNewItemState","quantity","coefficient","NewContractContent","newContract","setNewContract","newItem","setNewItem","csvModalVisible","setcsvModalVisible","tokenContracts","onNewProductContract","onDeploy","candyContract","options","formatBytes32String","Promise","resolve","reject","factory","ContractFactory","bytecode","object","getSigner","deploy","deployed","deployTransaction","BigNumber","from","gasLimit","toNumber","gasPrice","alignSelf","A400","A200","startIcon","borderRight","onFinishedImporting","rows","CsvImporter","onImportingViaCsv","onDataChange","onCompletedParsing","totalRows","setTotalRows","Modal","aria-describedby","chunkSize","assumeNoHeaders","restartable","onStart","file","fields","columns","skipHeaders","processChunk","startIndex","prev","onComplete","preview","columnFields","CandyContractContent","NewCandyContractContent","onNewCandyContract","QuadraticLootContractContent","useGetQuadraticLootContracts","qlootContracts","NewQuadraticLootContractContent","onNewQuadraticContract","useGetAllHttpLogs","useGetUniqueIpLogs","ips","geolocations","filter","geo","ipsForGeo","markers","geoMeta","MapContainer","center","zoom","TileLayer","LeafletIcon","L","Icon","iconUrl","MarkerIcon","iconSize","Point","iconAnchor","MyMarker","Marker","Popup","RouterWrapper","exact","LobbyPage","NewCategoryContent","NewProductContent","UserPanelPage","HttpLogContent","GodViewPage","to","Pages","setup","connected","setstatus","setid","Manager","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","socket","auth","useGetSocket","sx","CssBaseline","createTheme","main","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdee2aeb.chunk.js","sourcesContent":["const ACTIONS = {\r\n    TOGGLE_DRAWER: 'TOGGLE_DRAWER',\r\n    SET_WALLETS: 'SET_WALLETS',\r\n    SETUP: 'SETUP',\r\n    SET_TOKEN: 'SET_TOKEN',\r\n    SET_PROFILE: 'SET_PROFILE',\r\n    SET_CHAIN_ID: 'SET_CHAIN_ID',\r\n    SET_PROVIDER: 'SET_PROVIDER',\r\n};\r\nexport {ACTIONS};\r\n","import {ethers} from 'ethers';\r\nimport React from 'react';\r\nimport {getNetworkName} from '../util/network';\r\nimport {ACTIONS} from './actions';\r\ndeclare const window: any;\r\ntype Action = {type: string; payload?: any};\r\ntype Dispatch = (action: Action) => void;\r\n\r\ntype State = {\r\n    chain_id: string;\r\n    profile: {name: string; user_id: string; address: string};\r\n    token: string;\r\n    wallet: number;\r\n    provider: any;\r\n    wallets: string[];\r\n    drawerOpen: boolean;\r\n};\r\ntype GitcoinProviderProps = {children: React.ReactNode};\r\n\r\nconst initialState: State = {\r\n    chain_id: '42',\r\n    profile: JSON.parse(\r\n        localStorage.getItem('profile') ||\r\n            JSON.stringify({\r\n                name: '',\r\n                user_id: '',\r\n                address: '',\r\n            })\r\n    ),\r\n    token: localStorage.getItem('token') || '',\r\n    wallet: 0,\r\n    wallets: [],\r\n    provider: null,\r\n    drawerOpen: false,\r\n};\r\n\r\nconst GitcoinContext = React.createContext<{state: State; dispatch: Dispatch}>(\r\n    initialState as any\r\n);\r\n\r\nconst gitcoinReducer = (state: State, action: Action): State => {\r\n    // console.log(action);\r\n\r\n    switch (action.type) {\r\n        case ACTIONS.TOGGLE_DRAWER: {\r\n            return {\r\n                ...state,\r\n                drawerOpen: !state.drawerOpen,\r\n            };\r\n        }\r\n\r\n        case ACTIONS.SET_WALLETS: {\r\n            return {\r\n                ...state,\r\n                wallets: [...action.payload],\r\n            };\r\n        }\r\n\r\n        case ACTIONS.SETUP: {\r\n            localStorage.setItem(\r\n                'profile',\r\n                JSON.stringify(action.payload.profile)\r\n            );\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                profile: action.payload.profile,\r\n            };\r\n        }\r\n        case ACTIONS.SET_TOKEN: {\r\n            return {\r\n                ...state,\r\n                token: action.payload,\r\n            };\r\n        }\r\n        case ACTIONS.SET_PROFILE: {\r\n            return {...state, profile: action.payload};\r\n        }\r\n        case ACTIONS.SET_CHAIN_ID: {\r\n            return {\r\n                ...state,\r\n                chain_id: action.payload,\r\n                provider: new ethers.providers.Web3Provider(\r\n                    window.ethereum,\r\n                    'any'\r\n                ),\r\n            };\r\n        }\r\n        case ACTIONS.SET_PROVIDER: {\r\n            return {\r\n                ...state,\r\n                provider: action.payload,\r\n            };\r\n        }\r\n\r\n        default: {\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n        }\r\n    }\r\n};\r\n\r\nconst GitcoinProvider = ({children}: GitcoinProviderProps) => {\r\n    const [state, dispatch] = React.useReducer(gitcoinReducer, initialState);\r\n\r\n    return (\r\n        <GitcoinContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </GitcoinContext.Provider>\r\n    );\r\n};\r\nexport {GitcoinContext, GitcoinProvider};\r\n","const minimizeAddress = (addr: string, _k: number = 4): string => {\r\n    let len = addr.length;\r\n    return addr.substr(0, _k + 2) + '...' + addr.substr(len - _k, len);\r\n};\r\n\r\nexport {minimizeAddress};\r\n","export default __webpack_public_path__ + \"static/media/metamask.311a962c.png\";","import React from 'react';\r\nconst Image = ({src, alt, ...props}: any) => {\r\n    return <img {...props} src={src} alt={alt} />;\r\n};\r\n\r\nexport {Image};\r\n","import {useGetBalance} from '../hooks/Balance';\r\nimport {minimizeAddress} from '../util/address';\r\nimport {getNetworkName} from '../util/network';\r\nimport MetamaskIcon from '../assets/images/metamask.png';\r\nimport {GitcoinContext} from '../store';\r\nimport {Image} from './Image.component';\r\nimport React from 'react';\r\n\r\nconst WalletComponent = ({}) => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const wallets = state.wallets;\r\n    const balance = useGetBalance(wallets[0], state.provider);\r\n    const onMetamaskConnect = async (e) => {\r\n        e.preventDefault();\r\n        //@ts-ignore\r\n        const permissions = await window.ethereum.request({\r\n            method: 'wallet_requestPermissions',\r\n            params: [\r\n                {\r\n                    eth_accounts: {},\r\n                },\r\n            ],\r\n        });\r\n    };\r\n    React.useEffect(() => {\r\n        requestSwitchNetwork();\r\n    }, []);\r\n    const requestSwitchNetwork = async () => {\r\n        await window.ethereum.request({\r\n            method: 'wallet_switchEthereumChain',\r\n            params: [{chainId: '0x' + (42).toString(16)}],\r\n        });\r\n    };\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n            }}\r\n            className=\"f\"\r\n        >\r\n            <div\r\n                style={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                {state.wallets[0] ? (\r\n                    <div\r\n                        style={{\r\n                            margin: 0,\r\n                            border: '2px solid white',\r\n                            padding: 0,\r\n                            backgroundColor: 'transparent',\r\n                        }}\r\n                        onClick={onMetamaskConnect}\r\n                    >\r\n                        <div className=\"signin-address\">\r\n                            <p> {minimizeAddress(state.wallets[0])}</p>\r\n                            <span>\r\n                                {state.wallets[0] ? `${balance} Ξ` : null}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        style={{\r\n                            padding: 0,\r\n                            border: '2px solid white',\r\n                            backgroundColor: 'transparent',\r\n                            width: '100%',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            fontWeight: 'bold',\r\n                            margin: '1rem 0',\r\n                        }}\r\n                        onClick={onMetamaskConnect}\r\n                        className=\"btn\"\r\n                    >\r\n                        {'CONNECT'}{' '}\r\n                        <Image\r\n                            alt=\"wallet\"\r\n                            src={MetamaskIcon}\r\n                            height=\"32\"\r\n                            width=\"32\"\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                {/* <div\r\n                    style={{\r\n                        fontSize: '0.75rem',\r\n                    }}\r\n                >\r\n                    <p style={{margin: '0 1rem'}}>\r\n                        {getNetworkName(state.chain_id)}\r\n                    </p>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WalletComponent;\r\n","import {BaseProvider} from '@ethersproject/providers';\r\n\r\nimport React from 'react';\r\n\r\nconst useGetBalance = (addr: string, provider: BaseProvider) => {\r\n    const [balance, setbalance] = React.useState('');\r\n    React.useMemo(async () => {\r\n        if (addr && provider) {\r\n            try {\r\n                let a = Number(await provider.getBalance(addr)) / 1e18;\r\n                let b = parseFloat(a.toString()).toFixed(2);\r\n                setbalance(b);\r\n            } catch (error) {}\r\n        } else {\r\n            setbalance('');\r\n        }\r\n    }, [addr, provider]);\r\n    return balance;\r\n};\r\n\r\nexport {useGetBalance};\r\n","let SERVER = 'http://176.9.180.134:8081/api/';\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\r\n    SERVER = 'http://localhost:8081/api/';\r\n}\r\nconsole.log('SERVER', SERVER);\r\nconst GetUrl = (i: string) => {\r\n    return SERVER + 'admin/' + i;\r\n};\r\nconst GetBaseUrl = (i: string) => {\r\n    return SERVER + '' + i;\r\n};\r\n\r\nexport default GetUrl;\r\n\r\nexport {SERVER, GetBaseUrl};\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Button, Divider} from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {GitcoinContext} from '../store';\r\nimport WalletComponent from './Wallet.component';\r\nimport Web3 from 'web3';\r\nimport {isAddress} from 'ethers/lib/utils';\r\nimport {GetNonce, Login} from '../network/auth';\r\nimport {Chip} from '@material-ui/core';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport {ACTIONS} from '../store/actions';\r\ndeclare const window: any;\r\nfunction SignIncomponent() {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const [err, setErr] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [login, setLogin] = React.useState({\r\n        address: '',\r\n        name: '',\r\n    });\r\n\r\n    const onGetNonce = () => {\r\n        if (login.address && isAddress(login.address)) {\r\n            if (!login.name || login.name.toString().trim().length < 4) {\r\n                setErr('Nickname must be alteast 4 letters');\r\n                return;\r\n            }\r\n            setErr('');\r\n            setLoading(true);\r\n            GetNonce(login.address)\r\n                .then((res) => {\r\n                    if (res && res.data && res.data.success) {\r\n                        let nonce = res.data.data.nonce;\r\n                        let myweb3: any = new Web3(window.ethereum);\r\n\r\n                        myweb3.eth.personal\r\n                            .sign(nonce, state.wallets[state.wallet])\r\n                            .then((signedMessage) => {\r\n                                Login(\r\n                                    signedMessage,\r\n                                    nonce,\r\n                                    state.wallets[state.wallet],\r\n                                    login.name\r\n                                )\r\n                                    .then((result) => {\r\n                                        const data = result.data;\r\n                                        console.log('data', data);\r\n                                        setLoading(false);\r\n                                        if (data.success) {\r\n                                            setErr('');\r\n                                            dispatch({\r\n                                                type: ACTIONS.SETUP,\r\n                                                payload: {\r\n                                                    token: data.data.token,\r\n                                                    profile: data.data.profile,\r\n                                                },\r\n                                            });\r\n                                        } else {\r\n                                            setErr('Unknow Error');\r\n                                        }\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        setLoading(false);\r\n                                        setErr('Error loging in');\r\n                                        console.log(err);\r\n                                    });\r\n                            })\r\n                            .catch((err) => {\r\n                                setLoading(false);\r\n                                setErr('Error siging data');\r\n                            });\r\n                    } else {\r\n                        setLoading(false);\r\n                        setErr('Unknown err');\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setLoading(false);\r\n                    setErr(\r\n                        err?.msg || err?.message || `Unknown err (${err.code})`\r\n                    );\r\n                });\r\n        } else {\r\n            setErr('Address not selected');\r\n        }\r\n    };\r\n\r\n    const handleAccountsChanged = (accounts: string[]) => {\r\n        dispatch({\r\n            type: 'SET_WALLETS',\r\n            payload: accounts,\r\n        });\r\n        setLogin({...login, address: accounts[0]});\r\n        let myweb3: any = new Web3(window.ethereum);\r\n\r\n        dispatch({\r\n            type: 'SET_PROVIDER',\r\n            payload: myweb3.currentProvider,\r\n        });\r\n    };\r\n\r\n    const handleChainChanged = (chainId: number) => {\r\n        dispatch({\r\n            type: 'SET_CHAIN_ID',\r\n            payload: parseInt(chainId.toString(), 16).toString(),\r\n        });\r\n    };\r\n    const _stup = async () => {\r\n        if (!window.ethereum) {\r\n            return;\r\n        }\r\n        let myweb3: any = new Web3(window.ethereum);\r\n        const accounts = window.ethereum\r\n            .request({\r\n                method: 'eth_accounts',\r\n            })\r\n            .then(handleAccountsChanged)\r\n            .catch((err: any) => console.error(err));\r\n\r\n        window.ethereum.on('accountsChanged', handleAccountsChanged);\r\n\r\n        window.ethereum.on('chainChanged', handleChainChanged);\r\n        dispatch({\r\n            type: 'SET_CHAIN_ID',\r\n            payload: (await myweb3.eth.net.getId()).toString(),\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        let myweb3: any = new Web3(window.ethereum);\r\n        dispatch({\r\n            type: 'SET_PROVIDER',\r\n            payload: myweb3.currentProvider,\r\n        });\r\n        _stup();\r\n\r\n        return () => {\r\n            if (window.ethereum.removeListener) {\r\n                window.ethereum.removeListener(\r\n                    'accountsChanged',\r\n                    handleAccountsChanged\r\n                );\r\n                window.ethereum.removeListener(\r\n                    'chainChanged',\r\n                    handleChainChanged\r\n                );\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Box\r\n            style={{\r\n                display: 'flex',\r\n                width: '100%',\r\n                alignItems: 'center',\r\n                background: 'red',\r\n            }}\r\n        >\r\n            <Box\r\n                component=\"main\"\r\n                style={{\r\n                    backgroundColor: '#babcbf',\r\n                    flexGrow: 1,\r\n                    height: '100vh',\r\n                    overflow: 'auto',\r\n                }}\r\n            >\r\n                <Container\r\n                    maxWidth=\"lg\"\r\n                    style={{\r\n                        marginTop: '15%',\r\n                        width: '100%',\r\n                        justifyContent: 'center',\r\n                        display: 'flex',\r\n                    }}\r\n                >\r\n                    <Paper\r\n                        style={{\r\n                            padding: 16,\r\n                            width: 480,\r\n                        }}\r\n                    >\r\n                        <form\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                            style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            {err ? (\r\n                                <Chip\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label={JSON.stringify(err || '\"\"')}\r\n                                    onDelete={() => setErr('')}\r\n                                    style={{\r\n                                        borderColor: 'crimson',\r\n                                        color: 'crimson', //TODO theme\r\n                                    }}\r\n                                />\r\n                            ) : null}\r\n                            <p style={{textAlign: 'center', fontSize: 24}}>\r\n                                Connect your wallet\r\n                            </p>\r\n                            <div style={{margin: 16}}>\r\n                                <WalletComponent />\r\n                            </div>\r\n\r\n                            <FormControl\r\n                                variant=\"outlined\"\r\n                                style={{\r\n                                    width: '100%',\r\n                                }}\r\n                            >\r\n                                <TextField\r\n                                    size=\"small\"\r\n                                    required\r\n                                    id=\"outlined-required\"\r\n                                    label=\"Nickname\"\r\n                                    placeholder=\"Enter your nickname\"\r\n                                    variant=\"outlined\"\r\n                                    value={login.name}\r\n                                    onChange={(e) =>\r\n                                        setLogin({\r\n                                            ...login,\r\n                                            name: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'center',\r\n                                    margin: '1rem 0',\r\n                                }}\r\n                            >\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    onClick={onGetNonce}\r\n                                    variant=\"contained\"\r\n                                    component=\"label\"\r\n                                    color=\"primary\"\r\n                                >\r\n                                    SignIn\r\n                                    {loading && <CircularProgress size={24} />}\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </Paper>\r\n                </Container>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default function SignIn() {\r\n    return <SignIncomponent />;\r\n}\r\n","import axios from 'axios';\r\nimport {GetBaseUrl} from './NETWORK_CONSTS';\r\n\r\nconst GetNonce = (address: string): Promise<any> => {\r\n    return axios.get(GetBaseUrl('auth/nonce/' + address));\r\n};\r\nconst Login = (\r\n    signedMessage: string,\r\n    nonce: string,\r\n    address: string,\r\n    name: string\r\n): Promise<any> => {\r\n    return axios.post(GetBaseUrl('auth/login'), {\r\n        signedMessage: signedMessage,\r\n        nonce: nonce,\r\n        address: address,\r\n        name: name,\r\n    });\r\n};\r\nexport {GetNonce, Login};\r\n","import Drawer from '@material-ui/core/Drawer';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport PermMediaIcon from '@material-ui/icons/PermMedia';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\r\nimport {GitcoinContext} from '../store';\r\nimport React from 'react';\r\nimport {ACTIONS} from '../store/actions';\r\nimport {useTheme} from '@material-ui/styles';\r\nconst drawerWidth: number = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        drawer: (props: {open?: boolean}) => ({\r\n            '& .MuiDrawer-paper': {\r\n                position: 'relative',\r\n                whiteSpace: 'nowrap',\r\n                width: drawerWidth,\r\n                transition: theme.transitions.create('width', {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.enteringScreen,\r\n                }),\r\n                boxSizing: 'border-box',\r\n                ...(!props.open && {\r\n                    overflowX: 'hidden',\r\n                    transition: theme.transitions.create('width', {\r\n                        easing: theme.transitions.easing.sharp,\r\n                        duration: theme.transitions.duration.leavingScreen,\r\n                    }),\r\n                    width: theme.spacing(7),\r\n                    [theme.breakpoints.up('sm')]: {\r\n                        width: theme.spacing(9),\r\n                    },\r\n                }),\r\n                ///\r\n                height: '100vh',\r\n            },\r\n        }),\r\n    })\r\n);\r\n\r\nconst DrawerComponent = ({}) => {\r\n    const theme = useTheme<Theme>();\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const styles = useStyles({open: state.drawerOpen});\r\n    const router = useHistory();\r\n\r\n    const navigate = (path) => {\r\n        router.push(path);\r\n    };\r\n\r\n    const toggleDrawer = () => {\r\n        dispatch({type: ACTIONS.TOGGLE_DRAWER});\r\n    };\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            open={state.drawerOpen}\r\n            className={styles.drawer}\r\n        >\r\n            <Toolbar\r\n                style={{\r\n                    padding: 8,\r\n                    position: 'sticky',\r\n                    top: 0,\r\n                    backgroundColor: theme.palette.primary.light,\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        component=\"div\"\r\n                        variant=\"h6\"\r\n                        color=\"inherit\"\r\n                        noWrap\r\n                        style={{\r\n                            flexGrow: 1,\r\n                            display: 'flex',\r\n                        }}\r\n                    >\r\n                        <Button color=\"primary\" onClick={() => navigate('/')}>\r\n                            DAOMART\r\n                        </Button>\r\n                    </Typography>\r\n                    <IconButton onClick={toggleDrawer}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </Toolbar>\r\n            <Divider />\r\n            <div style={{width: '100%', position: 'relative'}}>\r\n                <List>\r\n                    <LobbyListItems />\r\n                </List>\r\n                <List>\r\n                    <MainListItems />\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <SecondaryListItems />\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ContractListItems />\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport {DrawerComponent};\r\n\r\nconst LobbyListItems = () => {\r\n    const router = useHistory();\r\n\r\n    const navigate = (path) => {\r\n        router.push(path);\r\n    };\r\n    return (\r\n        <div style={{position: 'relative'}}>\r\n            <ListSubheader inset style={{top: '4rem'}}>\r\n                Shop Management\r\n            </ListSubheader>\r\n            <ListItem button onClick={() => navigate('/')}>\r\n                <ListItemIcon>\r\n                    <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Lobby\" />\r\n            </ListItem>\r\n        </div>\r\n    );\r\n};\r\nconst MainListItems = () => {\r\n    const router = useHistory();\r\n\r\n    const navigate = (path) => {\r\n        router.push(path);\r\n    };\r\n    return (\r\n        <div style={{position: 'relative'}}>\r\n            <ListSubheader inset style={{top: '4rem'}}>\r\n                Shop Management\r\n            </ListSubheader>\r\n            <ListItem button onClick={() => navigate('/categories')}>\r\n                <ListItemIcon>\r\n                    <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Categories\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate('/products')}>\r\n                <ListItemIcon>\r\n                    <StoreIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Products\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate('/orders')}>\r\n                <ListItemIcon>\r\n                    <ShoppingCartIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Orders\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate('/collections')}>\r\n                <ListItemIcon>\r\n                    <CollectionsBookmarkIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Collections\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate('/archives')}>\r\n                <ListItemIcon>\r\n                    <PermMediaIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Archive\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate('/stats')}>\r\n                <ListItemIcon>\r\n                    <BarChartIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Stats\" />\r\n            </ListItem>{' '}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst SecondaryListItems = () => {\r\n    const router = useHistory();\r\n\r\n    const navigate = (path) => {\r\n        router.push(path);\r\n    };\r\n    return (\r\n        <div>\r\n            <ListSubheader inset>User Management</ListSubheader>\r\n            <ListItem button onClick={() => navigate('/users')}>\r\n                <ListItemIcon>\r\n                    <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"All Users\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Admins\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"VIP\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Stewards\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Plebs\" />\r\n            </ListItem>\r\n        </div>\r\n    );\r\n};\r\nconst ContractListItems = () => {\r\n    const router = useHistory();\r\n\r\n    const navigate = (path) => {\r\n        router.push(path);\r\n    };\r\n    return (\r\n        <div>\r\n            <ListSubheader inset>Contracts</ListSubheader>\r\n            <ListItem button onClick={() => navigate('/contracts/product')}>\r\n                <ListItemIcon>\r\n                    <ReceiptIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Product Contracts\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate('/contracts/candy')}>\r\n                <ListItemIcon>\r\n                    <ReceiptIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Candy Contract\" />\r\n            </ListItem>{' '}\r\n            <ListItem\r\n                button\r\n                onClick={() => navigate('/contracts/quadratic-loot')}\r\n            >\r\n                <ListItemIcon>\r\n                    <ReceiptIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"QuadraticLoot Contract\" />\r\n            </ListItem>\r\n            <ListSubheader inset>LOGS</ListSubheader>\r\n            <ListItem button onClick={() => navigate('/http-logs')}>\r\n                <ListItemIcon>\r\n                    <ListAltIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Http Logs\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => navigate('/godview')}>\r\n                <ListItemIcon>\r\n                    <ListAltIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"God View\" />\r\n            </ListItem>\r\n        </div>\r\n    );\r\n};\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport {useHistory} from 'react-router-dom';\r\nimport WalletComponent from './Wallet.component';\r\nimport {GitcoinContext} from '../store';\r\nimport React from 'react';\r\nimport {ACTIONS} from '../store/actions';\r\nimport Web3 from 'web3';\r\ndeclare const window: any;\r\ninterface styleProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst drawerWidth: number = 240;\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        appBar: (props: styleProps) => ({\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            ...(props.open && {\r\n                marginLeft: drawerWidth,\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n                transition: theme.transitions.create(['width', 'margin'], {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.enteringScreen,\r\n                }),\r\n            }),\r\n        }),\r\n    })\r\n);\r\n\r\nconst StatusBarComponent = ({\r\n    title,\r\n    newBtn,\r\n}: {\r\n    title: string;\r\n    newBtn?: string;\r\n}) => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const styles = useStyles({open: state.drawerOpen});\r\n    const router = useHistory();\r\n\r\n    const navigate = (path) => {\r\n        router.push(path);\r\n    };\r\n\r\n    const toggleDrawer = () => {\r\n        dispatch({type: ACTIONS.TOGGLE_DRAWER});\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('profile');\r\n        router.replace('/');\r\n    };\r\n    const handleAccountsChanged = (accounts: string[]) => {\r\n        dispatch({\r\n            type: 'SET_WALLETS',\r\n            payload: accounts,\r\n        });\r\n        let myweb3: any = new Web3(window.ethereum);\r\n\r\n        dispatch({\r\n            type: 'SET_PROVIDER',\r\n            payload: myweb3.currentProvider,\r\n        });\r\n    };\r\n\r\n    const handleChainChanged = (chainId: number) => {\r\n        dispatch({\r\n            type: 'SET_CHAIN_ID',\r\n            //@ts-ignore\r\n            payload: parseInt(chainId, 16).toString(),\r\n        });\r\n    };\r\n    const _stup = async () => {\r\n        if (!window.ethereum) {\r\n            return;\r\n        }\r\n        let myweb3: any = new Web3(window.ethereum);\r\n        const accounts = window.ethereum\r\n            .request({\r\n                method: 'eth_accounts',\r\n            })\r\n            .then(handleAccountsChanged)\r\n            .catch((err: any) => console.error(err));\r\n        //@ts-ignore\r\n        window.ethereum.on('accountsChanged', handleAccountsChanged);\r\n\r\n        window.ethereum.on('chainChanged', handleChainChanged);\r\n\r\n        // let myweb3: any = new Web3(window.ethereum);\r\n\r\n        dispatch({\r\n            type: 'SET_CHAIN_ID',\r\n            payload: (await myweb3.eth.net.getId()).toString(),\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        let myweb3: any = new Web3(window.ethereum);\r\n        dispatch({\r\n            type: 'SET_PROVIDER',\r\n            payload: myweb3.currentProvider,\r\n        });\r\n        _stup();\r\n\r\n        return () => {\r\n            if (window.ethereum.removeListener) {\r\n                window.ethereum.removeListener(\r\n                    'accountsChanged',\r\n                    handleAccountsChanged\r\n                );\r\n                window.ethereum.removeListener(\r\n                    'chainChanged',\r\n                    handleChainChanged\r\n                );\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <AppBar position=\"absolute\" className={styles.appBar}>\r\n            <Toolbar\r\n                style={{\r\n                    paddingRight: '24px', // keep right padding when drawer closed\r\n                }}\r\n            >\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={toggleDrawer}\r\n                    style={{\r\n                        marginRight: '36px',\r\n                        ...(state.drawerOpen && {display: 'none'}),\r\n                    }}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h6\"\r\n                    color=\"inherit\"\r\n                    noWrap\r\n                    style={{\r\n                        flexGrow: 1,\r\n                    }}\r\n                >\r\n                    {title}\r\n\r\n                    {newBtn ? (\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"new\"\r\n                            onClick={() => navigate(newBtn)}\r\n                        >\r\n                            <AddToPhotosIcon />\r\n                        </IconButton>\r\n                    ) : null}\r\n                </Typography>\r\n\r\n                <WalletComponent />\r\n                <IconButton color=\"inherit\" onClick={() => logout()}>\r\n                    <ExitToAppIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport {StatusBarComponent};\r\n","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\nimport {useHistory} from 'react-router-dom';\ninterface TitleProps {\n    children?: React.ReactNode;\n    newBtn?: string;\n}\n\nexport default function Title(props: TitleProps) {\n    const router = useHistory();\n\n    const navigate = (path) => {\n        router.push(path);\n    };\n    return (\n        <Typography\n            component=\"h2\"\n            variant=\"h6\"\n            gutterBottom\n            style={{\n                color: 'white',\n                fontWeight: 'bold',\n                textShadow: '1px 1px 2px black',\n            }}\n        >\n            {props.children}\n            {props.newBtn ? (\n                <IconButton\n                    color=\"primary\"\n                    aria-label=\"new\"\n                    onClick={() => navigate(props.newBtn)}\n                >\n                    <AddToPhotosIcon />\n                </IconButton>\n            ) : null}\n        </Typography>\n    );\n}\n","import GetUrl from './NETWORK_CONSTS';\r\nimport axios from 'axios';\r\n\r\nexport const GetQuadraticLootContracts = (token: string, data) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('contract/quadratic-loot'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\nexport const MakeNewQuadraticLootContract = (token: string, data) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('contract/quadratic-loot/new'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetTokenContracts = (token: string, data) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('contract/token'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\nexport const MakeNewTokenContract = (token: string, data) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('contract/token/new'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\nexport const GetProductContracts = (token: string, data) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('contract/product'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const MakeNewProductContract = (token: string, data) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('contract/product/new'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetUsers = (\r\n    token: string,\r\n    data?: {keyword?: string; address?: string; name?: string; badge?: string}\r\n) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('user/query'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetUserById = (token: string, data?: {uid?: string}) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('user/id'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const UpdateUserBadge = (\r\n    token: string,\r\n    {uid, badge}: {uid: string; badge: string}\r\n) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('user/update-badge'),\r\n        data: {uid, badge},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const UpdateUserStatus = (\r\n    token: string,\r\n    {uid, status}: {uid: string; status: string}\r\n) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('user/update-status'),\r\n        data: {uid, status},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetHttpLogs = (\r\n    token: string,\r\n    data?: {\r\n        keyword?: string;\r\n        address?: string;\r\n        user?: string;\r\n        method?: string;\r\n        route?: string;\r\n    }\r\n) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('logs/http'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetUniqueLogsByIp = (token: string) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('logs/unique-ip'),\r\n\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\nexport const MakeNewProduct = (token: string, data: Product) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('product/new'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetProducts = (token: string) =>\r\n    axios({\r\n        method: 'GET',\r\n        url: GetUrl('product'),\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\nexport const GetProductById = (token: string, pid: any) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('product/pid'),\r\n        data: {pid: pid},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const UpdateProductStatus = (\r\n    token: string,\r\n    pid: string,\r\n    status: string\r\n) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('product/update'),\r\n        data: {pid: pid, status: status},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const MakeNewProductCategory = (token: string, data: ProductCategory) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('category/new'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetProductCategories = (\r\n    token: string,\r\n    data?: CategorySearchParams\r\n) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('category'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetCategoryById = (token: string, cid: any) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('category/cid'),\r\n        data: {cid: cid},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const MakeNewOrder = (token: string, data?: any) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('order/new'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetOrders = (token: string, {item, user}: OrderSearchParams) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('order/query'),\r\n        data: {item: item, user: user},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetOrderById = (token: string, oid: any) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('order/oid'),\r\n        data: {oid: oid},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const UpdateOrderStatus = (token: string, oid: string, status: string) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('order/update'),\r\n        data: {oid: oid, status: status},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n\r\nexport const GetLobby = (token: string) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('user/lobby'),\r\n        data: JSON.stringify({}),\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n","import React from 'react';\r\nimport {GetProducts, GetProductCategories} from '../network/api';\r\nimport {GetProductById} from './../network/api';\r\n\r\nconst useGetProducts = (token: string): [Product[], boolean, any] => {\r\n    const [products, setproducts] = React.useState<Product[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!token) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        setproducts([]);\r\n        GetProducts(token)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setproducts(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setproducts([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setproducts([]);\r\n            });\r\n    }, [token]);\r\n    return [products, loading, err];\r\n};\r\nconst useGetProductCategories = (\r\n    token: string,\r\n    data?: CategorySearchParams\r\n): [ProductCategory[], boolean, any] => {\r\n    const [productcat, setproductcat] = React.useState<ProductCategory[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!token) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        setproductcat([]);\r\n        GetProductCategories(token, data)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setproductcat(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setproductcat([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setproductcat([]);\r\n            });\r\n    }, [token, data?.keyword]);\r\n    return [productcat, loading, err];\r\n};\r\nconst useGetProductById = (\r\n    token: string,\r\n    pid?: string,\r\n    trigger = false\r\n): [Product | null, boolean, any] => {\r\n    const [product, setproduct] = React.useState<Product | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!token || !pid) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        setproduct(null);\r\n        GetProductById(token, pid)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setproduct(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setproduct(null);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setproduct(null);\r\n            });\r\n    }, [token, pid, trigger]);\r\n    return [product, loading, err];\r\n};\r\nexport {useGetProducts, useGetProductCategories, useGetProductById};\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Title from '../../components/Title.component';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useGetProductCategories} from '../../hooks/Product.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport {useTheme} from '@material-ui/core/styles';\r\nimport {green, red, blue, pink, cyan} from '@material-ui/core/colors';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PhotoSizeSelectActualIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nfunction CategoryContent() {\r\n    const theme = useTheme();\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [keyword, setKeyword] = React.useState('');\r\n    const [perPage, setPerPage] = React.useState(5);\r\n    const [page, setPage] = React.useState(1);\r\n    const [categories] = useGetProductCategories(state.token, {\r\n        keyword: keyword,\r\n    });\r\n\r\n    const els = categories.map((c, i) => (\r\n        <CategoryCard key={c.category_id} category={c} i={i} />\r\n    ));\r\n    const onPagiChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        console.log('value', value);\r\n        setPage(value);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title newBtn=\"/categories/new\">Categories</Title>\r\n            <div>\r\n                <form>\r\n                    <FormControl\r\n                        style={{\r\n                            width: '100%',\r\n                            color: theme.palette.primary.light,\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                            id=\"outlined-required\"\r\n                            placeholder=\"Search\"\r\n                            name=\"search\"\r\n                            variant=\"filled\"\r\n                            value={keyword}\r\n                            onChange={(e) => setKeyword(e.target.value)}\r\n                            inputProps={{\r\n                                style: {\r\n                                    backgroundColor:\r\n                                        theme.palette.primary.light,\r\n                                    padding: theme.spacing(2),\r\n                                },\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n            <Paper\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <List\r\n                    aria-label=\"main mailbox folders\"\r\n                    style={{padding: 0, flex: 1}}\r\n                >\r\n                    {els.length ? (\r\n                        els.slice(\r\n                            (page - 1) * perPage,\r\n                            (page - 1) * perPage + perPage\r\n                        )\r\n                    ) : (\r\n                        <ListItem button divider>\r\n                            NO CATEGORIES FOUNDS\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                >\r\n                    <Pagination\r\n                        style={{\r\n                            width: '100%',\r\n                            marginTop: theme.spacing(2),\r\n                            marginBottom: theme.spacing(2),\r\n                            display: 'flex !important',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                        showFirstButton\r\n                        showLastButton\r\n                        count={Math.ceil(els.length / perPage)}\r\n                        variant=\"outlined\"\r\n                        color=\"standard\"\r\n                        boundaryCount={2}\r\n                        siblingCount={2}\r\n                        page={page}\r\n                        defaultPage={1}\r\n                        onChange={onPagiChange}\r\n                        shape=\"rounded\"\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CategoryContent;\r\n\r\nconst CategoryCard = ({category, i}) => {\r\n    const router = useHistory();\r\n\r\n    const navigate = () => {\r\n        router.push(`/categories/${category.category_id}`);\r\n    };\r\n\r\n    return (\r\n        <ListItem\r\n            button\r\n            divider\r\n            onClick={navigate}\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-start',\r\n            }}\r\n        >\r\n            <div style={{width: '7rem'}}>\r\n                <Avatar\r\n                    variant=\"rounded\"\r\n                    alt={'category'}\r\n                    src={category.avatar}\r\n                    style={{\r\n                        width: '7rem',\r\n                        height: '7rem',\r\n                        objectFit: 'contain',\r\n                        backgroundColor: colors[i % colors.length],\r\n                    }}\r\n                >\r\n                    {category.avatar ? null : (\r\n                        <PhotoSizeSelectActualIcon fontSize=\"large\" />\r\n                    )}\r\n                </Avatar>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    marginLeft: 8,\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <Typography variant=\"overline\" style={{lineHeight: '1rem'}}>\r\n                    {category.category_id}\r\n                </Typography>\r\n                <Typography variant=\"caption\">{category.type}</Typography>\r\n                <Typography variant=\"body1\" style={{fontSize: '1.5rem'}}>\r\n                    {category.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {category.description}\r\n                </Typography>{' '}\r\n                <Typography variant=\"subtitle2\">\r\n                    {category.tags.join(' ,')}\r\n                </Typography>\r\n            </div>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nconst colors = [\r\n    red['A100'],\r\n    green['A100'],\r\n    blue['A100'],\r\n    cyan['A100'],\r\n    pink['A100'],\r\n];\r\n","const constTags = ['Retro', 'Futuristic', 'Robot', 'Moonshot'];\r\n\r\nexport {constTags};\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Paper, Divider, Input} from '@material-ui/core';\r\nimport {Button} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Chip} from '@material-ui/core';\r\nimport {constTags} from '../../util/tags';\r\nimport {GitcoinContext} from '../../store';\r\nimport {MakeNewProductCategory} from '../../network/api';\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst initState: ProductCategory = {\r\n    type: '',\r\n    name: '',\r\n    description: '',\r\n    avatar: '',\r\n    tags: [],\r\n};\r\n\r\nfunction NewCategoryPage() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [newCat, setNewCat] = React.useState<ProductCategory>(initState);\r\n\r\n    const onNew = () => {\r\n        setLoading(true);\r\n        MakeNewProductCategory(state.token, newCat)\r\n            .then((result) => {\r\n                setSnackbarOpen(true);\r\n                setLoading(false);\r\n                setNewCat(initState);\r\n                console.log('result', result);\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Paper style={{padding: 16}}>\r\n                <form\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    style={{width: '100%', margin: '1rem 0'}}\r\n                >\r\n                    <div>\r\n                        <div\r\n                            style={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    height: 128,\r\n                                    width: 128,\r\n                                    border: '1px solid grey',\r\n                                }}\r\n                            ></div>\r\n                            <Button variant=\"contained\" component=\"label\">\r\n                                Upload Photo\r\n                                <input type=\"file\" hidden />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Type\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"Type\"\r\n                            placeholder=\"Enter category type\"\r\n                            variant=\"outlined\"\r\n                            value={newCat.type}\r\n                            onChange={(e: any) =>\r\n                                setNewCat({\r\n                                    ...newCat,\r\n                                    type: e.target.value,\r\n                                })\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            <MenuItem value={'Merch'}>Merch</MenuItem>\r\n                            <MenuItem value={'NFT'}>NFT</MenuItem>\r\n                            <MenuItem value={'Kudos'}>Kudos</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Name\"\r\n                            placeholder=\"Enter category name\"\r\n                            variant=\"outlined\"\r\n                            value={newCat.name}\r\n                            onChange={(e) =>\r\n                                setNewCat({\r\n                                    ...newCat,\r\n                                    name: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Description\"\r\n                            placeholder=\"Enter category description\"\r\n                            variant=\"outlined\"\r\n                            value={newCat.description}\r\n                            onChange={(e) =>\r\n                                setNewCat({\r\n                                    ...newCat,\r\n                                    description: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <InputLabel id=\"demo-mutiple-checkbox-label\">\r\n                            Tag\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-mutiple-checkbox-label\"\r\n                            id=\"demo-mutiple-checkbox\"\r\n                            multiple\r\n                            value={newCat.tags}\r\n                            onChange={(e: any) =>\r\n                                setNewCat({\r\n                                    ...newCat,\r\n                                    tags: e.target.value,\r\n                                })\r\n                            }\r\n                            input={<Input />}\r\n                            renderValue={(selected) => (\r\n                                <div\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'flex',\r\n                                        flexWrap: 'wrap',\r\n                                        flexDirection: 'row',\r\n                                    }}\r\n                                >\r\n                                    {(selected as string[]).map((value, i) => (\r\n                                        <Chip key={i} label={value} />\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        >\r\n                            {constTags.map((value, i) => (\r\n                                <MenuItem key={i} value={value}>\r\n                                    <Checkbox\r\n                                        checked={\r\n                                            newCat.tags.indexOf(value) > -1\r\n                                        }\r\n                                    />\r\n                                    <ListItemText primary={value} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'flex-end',\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            disabled={loading}\r\n                            onClick={onNew}\r\n                            variant=\"contained\"\r\n                            component=\"label\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Create\r\n                            {loading && <CircularProgress size={24} />}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSnackbarOpen(false)}\r\n            >\r\n                <Alert\r\n                    onClose={() => setSnackbarOpen(false)}\r\n                    severity=\"success\"\r\n                >\r\n                    New category successfully created!\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NewCategoryPage;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {useGetCategoryById} from '../../hooks/Category.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Title from '../../components/Title.component';\r\nimport {Paper} from '@material-ui/core';\r\nimport {useParams} from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nfunction CategoryPanelPage() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [trigger, setTrigger] = React.useState(false);\r\n\r\n    const {cid} = useParams();\r\n    const [product] = useGetCategoryById(state.token, cid, trigger);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>Category Panel</Title>\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    aria-label=\"simple tabs example\"\r\n                >\r\n                    <Tab label=\"Category Card\" {...a11yProps(0)} />\r\n                    <Tab label=\"Activity\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <CategoryTabContent\r\n                value={value}\r\n                index={0}\r\n                product={product}\r\n                token={state.token}\r\n                onTrigger={() => setTrigger(!trigger)}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CategoryPanelPage;\r\n\r\nconst CategoryTabContent = ({\r\n    value,\r\n    index,\r\n    product,\r\n    token,\r\n    onTrigger,\r\n}: {\r\n    value: number;\r\n    index: number;\r\n    product: ProductCategory | null;\r\n    token: string | null;\r\n    onTrigger: any;\r\n}) => {\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <div style={{padding: 8}}>\r\n                    <Typography variant=\"overline\" component={'h3'}>\r\n                        {product?.category_id}\r\n                    </Typography>\r\n                    <div>\r\n                        <Typography variant=\"body1\" component=\"span\">\r\n                            <Link variant=\"overline\" style={{paddingLeft: 8}}>\r\n                                {`(${product?.name})`}\r\n                            </Link>\r\n                        </Typography>\r\n                    </div>{' '}\r\n                    <div>\r\n                        <MyChip label={product?.type} />\r\n                    </div>\r\n                </div>\r\n                <div style={{padding: 8}}>ACTIONS</div>\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst a11yProps = (index: any) => {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            style={{padding: 0}}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    <Paper\r\n                        style={{\r\n                            borderRadius: 0,\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </Paper>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MyChip = ({label}: {label: string | undefined}) => {\r\n    return label ? (\r\n        <Chip label={label} style={{marginRight: 8}} color=\"secondary\" />\r\n    ) : null;\r\n};\r\n","import React from 'react';\r\nimport {GetCategoryById} from './../network/api';\r\n\r\nconst useGetCategoryById = (\r\n    token: string,\r\n    cid?: string,\r\n    trigger = false\r\n): [ProductCategory | null, boolean, any] => {\r\n    const [product, setproduct] = React.useState<ProductCategory | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!token || !cid) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        setproduct(null);\r\n        GetCategoryById(token, cid)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setproduct(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setproduct(null);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setproduct(null);\r\n            });\r\n    }, [token, cid, trigger]);\r\n    return [product, loading, err];\r\n};\r\nexport {useGetCategoryById};\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useGetProducts} from '../../hooks/Product.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport Title from '../../components/Title.component';\r\nimport {\r\n    Typography,\r\n    Avatar,\r\n    List,\r\n    ListItem,\r\n    FormControl,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport PhotoSizeSelectActualIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useTheme} from '@material-ui/core/styles';\r\nimport {green, red, blue, pink, cyan} from '@material-ui/core/colors';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nfunction ProductContent() {\r\n    const theme = useTheme();\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [keyword, setKeyword] = React.useState('');\r\n    const [perPage, setPerPage] = React.useState(5);\r\n    const [page, setPage] = React.useState(1);\r\n    const [products] = useGetProducts(state.token);\r\n\r\n    const els = products.map((c, i) => (\r\n        <ProductCard key={c.product_id} product={c} i={i} />\r\n    ));\r\n\r\n    const onPagiChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        console.log('value', value);\r\n        setPage(value);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title newBtn=\"/products/new\">Products</Title>\r\n            <div>\r\n                <form>\r\n                    <FormControl\r\n                        style={{\r\n                            width: '100%',\r\n                            color: theme.palette.primary.light,\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                            id=\"outlined-required\"\r\n                            placeholder=\"Search\"\r\n                            name=\"search\"\r\n                            variant=\"filled\"\r\n                            value={keyword}\r\n                            onChange={(e) => setKeyword(e.target.value)}\r\n                            inputProps={{\r\n                                style: {\r\n                                    backgroundColor:\r\n                                        theme.palette.primary.light,\r\n                                    padding: theme.spacing(2),\r\n                                },\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n            <Paper\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <List\r\n                    aria-label=\"main mailbox folders\"\r\n                    style={{padding: 0, flex: 1}}\r\n                >\r\n                    <div>\r\n                        {els.length ? (\r\n                            els.slice(\r\n                                (page - 1) * perPage,\r\n                                (page - 1) * perPage + perPage\r\n                            )\r\n                        ) : (\r\n                            <ListItem button divider>\r\n                                NO PRODUCTS FOUNDS\r\n                            </ListItem>\r\n                        )}\r\n                    </div>\r\n                </List>\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                >\r\n                    <Pagination\r\n                        style={{\r\n                            width: '100%',\r\n                            marginTop: theme.spacing(2),\r\n                            marginBottom: theme.spacing(2),\r\n                            display: 'flex !important',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                        showFirstButton\r\n                        showLastButton\r\n                        count={Math.ceil(els.length / perPage)}\r\n                        variant=\"outlined\"\r\n                        color=\"standard\"\r\n                        boundaryCount={2}\r\n                        siblingCount={2}\r\n                        page={page}\r\n                        defaultPage={1}\r\n                        onChange={onPagiChange}\r\n                        shape=\"rounded\"\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductContent;\r\n\r\nconst ProductCard = ({product, i}) => {\r\n    const router = useHistory();\r\n\r\n    const navigate = (uid) => {\r\n        router.push(`/products/${product.product_id}`);\r\n    };\r\n\r\n    return (\r\n        <ListItem\r\n            button\r\n            divider\r\n            onClick={navigate}\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-start',\r\n            }}\r\n        >\r\n            <div style={{width: '7rem'}}>\r\n                <Avatar\r\n                    variant=\"rounded\"\r\n                    alt={'product'}\r\n                    src={product.avatar}\r\n                    style={{\r\n                        width: '7rem',\r\n                        height: '7rem',\r\n                        objectFit: 'contain',\r\n                        backgroundColor: colors[i % colors.length],\r\n                    }}\r\n                >\r\n                    {product.avatar ? null : (\r\n                        <PhotoSizeSelectActualIcon fontSize=\"large\" />\r\n                    )}\r\n                </Avatar>\r\n            </div>\r\n\r\n            <div style={{marginLeft: 8, height: '100%'}}>\r\n                <Typography variant=\"overline\" style={{lineHeight: '1rem'}}>\r\n                    {product.product_id}\r\n                </Typography>\r\n                <Typography variant=\"caption\">{product.type}</Typography>\r\n                <Typography variant=\"caption\">{product.category}</Typography>\r\n                <Typography variant=\"caption\">{product.contract}</Typography>\r\n                <Typography variant=\"caption\">{product.code}</Typography>\r\n                <Typography variant=\"body1\" style={{fontSize: '1.5rem'}}>\r\n                    {product.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {product.description}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {product.tags.join(' ,')}\r\n                </Typography>\r\n            </div>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nconst colors = [red[300], green[300], blue[300], cyan[300], pink[300]];\r\n","import React from 'react';\r\nimport {\r\n    GetProductContracts,\r\n    GetQuadraticLootContracts,\r\n    GetTokenContracts,\r\n} from '../network/api';\r\n\r\nconst useGetTokenContracts = (\r\n    token: string,\r\n    {\r\n        chain,\r\n    }: {\r\n        chain: string;\r\n    }\r\n): [TokenContract[], boolean, any] => {\r\n    const [contracts, setcontracts] = React.useState<TokenContract[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setcontracts([]);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!chain) {\r\n            return;\r\n        }\r\n        GetTokenContracts(token, {chain: chain})\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setcontracts(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setcontracts([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setcontracts([]);\r\n            });\r\n    }, [token]);\r\n    return [contracts, loading, err];\r\n};\r\n\r\nconst useGetProductContracts = (\r\n    token: string,\r\n    {\r\n        chain,\r\n    }: {\r\n        chain: string;\r\n    }\r\n): [ProductContract[], boolean, any] => {\r\n    const [contracts, setcontracts] = React.useState<ProductContract[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setcontracts([]);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!chain) {\r\n            return;\r\n        }\r\n\r\n        GetProductContracts(token, {chain: chain})\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setcontracts(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setcontracts([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setcontracts([]);\r\n            });\r\n    }, [token]);\r\n    return [contracts, loading, err];\r\n};\r\nconst useGetQuadraticLootContracts = (\r\n    token: string,\r\n    {\r\n        chain,\r\n    }: {\r\n        chain: string;\r\n    }\r\n): [QuadraticLootContract[], boolean, any] => {\r\n    const [contracts, setcontracts] = React.useState<QuadraticLootContract[]>(\r\n        []\r\n    );\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setcontracts([]);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!chain) {\r\n            return;\r\n        }\r\n\r\n        GetQuadraticLootContracts(token, {chain: chain})\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setcontracts(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setcontracts([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setcontracts([]);\r\n            });\r\n    }, [token]);\r\n    return [contracts, loading, err];\r\n};\r\n\r\nexport {\r\n    useGetTokenContracts,\r\n    useGetProductContracts,\r\n    useGetQuadraticLootContracts,\r\n};\r\n","import {BigNumber, ethers} from 'ethers';\r\n\r\ndeclare const window: any;\r\nconst deployProductContract = (\r\n    chainId: any,\r\n    options: any[]\r\n): Promise<string> => {\r\n    console.log(`redeploying contracts on ${chainId}`);\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(\r\n                window.ethereum,\r\n                'any' // getNetworkName(chainId).toLocaleLowerCase()\r\n            );\r\n\r\n            let metadata: any = {};\r\n\r\n            try {\r\n                metadata = require(`./daomart.json`);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            console.log('options', options);\r\n            console.log(`Deploying ${'NEW DAOMART PRODUCT '} : \\n ${options}`);\r\n\r\n            let factory = new ethers.ContractFactory(\r\n                metadata.abi,\r\n                metadata.data.bytecode.object,\r\n                provider.getSigner()\r\n            );\r\n\r\n            const contract = await factory.deploy(...options);\r\n            console.log('Contract Address: ', contract.address);\r\n            await contract.deployed();\r\n            console.log('Contract Deployed: ', contract.deployTransaction);\r\n            if (contract.deployTransaction) {\r\n                console.log(\r\n                    `gas limit ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasLimit\r\n                        ).toNumber() / 1e9\r\n                    } at gas price ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasPrice\r\n                        ).toNumber() / 1e9\r\n                    }`\r\n                );\r\n            }\r\n\r\n            resolve(contract.address);\r\n        } catch (e: any) {\r\n            if (e && e['reason']) {\r\n                reject(e['reason']);\r\n            } else if (e && e['message']) {\r\n                reject(e['message']);\r\n            } else {\r\n                console.log(e);\r\n                reject('ERROR [!]');\r\n            }\r\n        }\r\n    });\r\n};\r\nconst deployCandyContract = (chainId: any): Promise<string> => {\r\n    console.log(`redeploying contracts on ${chainId}`);\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(\r\n                window.ethereum,\r\n                'any' // getNetworkName(chainId).toLocaleLowerCase()\r\n            );\r\n\r\n            let metadata: any = {};\r\n\r\n            try {\r\n                metadata = require(`./candy.json`);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n\r\n            console.log(`Deploying ${'Candy'}`);\r\n\r\n            let factory = new ethers.ContractFactory(\r\n                metadata.abi,\r\n                metadata.data.bytecode.object,\r\n                provider.getSigner()\r\n            );\r\n\r\n            const contract = await factory.deploy('Candy', '🍬');\r\n            console.log('Contract Address: ', contract.address);\r\n            await contract.deployed();\r\n            console.log('Contract Deployed: ', contract.deployTransaction);\r\n            if (contract.deployTransaction) {\r\n                console.log(\r\n                    `gas limit ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasLimit\r\n                        ).toNumber() / 1e9\r\n                    } at gas price ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasPrice\r\n                        ).toNumber() / 1e9\r\n                    }`\r\n                );\r\n            }\r\n\r\n            resolve(contract.address);\r\n        } catch (e: any) {\r\n            if (e && e['reason']) {\r\n                reject(e['reason']);\r\n            } else if (e && e['message']) {\r\n                reject(e['message']);\r\n            } else {\r\n                console.log(e);\r\n                reject('ERROR [!]');\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nconst deployQLootContract = (chainId: any): Promise<string> => {\r\n    console.log(`redeploying QLootContract on ${chainId}`);\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(\r\n                window.ethereum,\r\n                'any' // getNetworkName(chainId).toLocaleLowerCase()\r\n            );\r\n\r\n            let metadata: any = await getQuadtraicLootMeta();\r\n\r\n            console.log(`Deploying ${'QLootContract'}`);\r\n\r\n            let factory = new ethers.ContractFactory(\r\n                metadata.abi,\r\n                metadata.data.bytecode.object,\r\n                provider.getSigner()\r\n            );\r\n\r\n            const contract = await factory.deploy([]);\r\n            console.log('Contract Address: ', contract.address);\r\n            await contract.deployed();\r\n            console.log('Contract Deployed: ', contract.deployTransaction);\r\n            if (contract.deployTransaction) {\r\n                console.log(\r\n                    `gas limit ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasLimit\r\n                        ).toNumber() / 1e9\r\n                    } at gas price ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasPrice\r\n                        ).toNumber() / 1e9\r\n                    }`\r\n                );\r\n            }\r\n\r\n            resolve(contract.address);\r\n        } catch (e: any) {\r\n            if (e && e['reason']) {\r\n                reject(e['reason']);\r\n            } else if (e && e['message']) {\r\n                reject(e['message']);\r\n            } else {\r\n                console.log(e);\r\n                reject('ERROR [!]');\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nconst getProductContractMeta = () => {\r\n    let metadata: any = {};\r\n\r\n    try {\r\n        metadata = require(`./daomart.json`);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return metadata;\r\n};\r\nconst getCandyContractMeta = () => {\r\n    let metadata: any = {};\r\n\r\n    try {\r\n        metadata = require(`./candy.json`);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return metadata;\r\n};\r\nconst getQuadtraicLootMeta = () => {\r\n    let metadata: any = {};\r\n\r\n    try {\r\n        metadata = require(`./qloot.json`);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return metadata;\r\n};\r\nexport {\r\n    deployProductContract,\r\n    deployCandyContract,\r\n    deployQLootContract,\r\n    getProductContractMeta,\r\n    getCandyContractMeta,\r\n};\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Paper, Divider} from '@material-ui/core';\r\nimport {Button} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Input from '@material-ui/core/Input';\r\nimport {MakeNewProduct} from '../../network/api';\r\nimport {constTags} from '../../util/tags';\r\nimport {useGetProductCategories} from '../../hooks/Product.hook';\r\nimport {useGetProductContracts} from '../../hooks/Contract.hook';\r\nimport {useGetProductContractItems} from '../../hooks/ProductContract.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Title from '../../components/Title.component';\r\nimport {ethers} from 'ethers';\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst initState: Product = {\r\n    product_id: '',\r\n    contract: '',\r\n    category: '',\r\n    name: '',\r\n    description: '',\r\n    code: '',\r\n    avatar: '',\r\n    tags: [],\r\n};\r\n\r\nfunction NewProductPage() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [newProduct, setNewProduct] = React.useState<Product>(initState);\r\n    const [categories] = useGetProductCategories(state.token);\r\n\r\n    const [contracts] = useGetProductContracts(state.token, {\r\n        chain: state.chain_id,\r\n    });\r\n    const [items] = useGetProductContractItems(newProduct.contract);\r\n    const router = useHistory();\r\n\r\n    const navigate = (path) => {\r\n        router.push(path);\r\n    };\r\n    const onNew = () => {\r\n        setLoading(true);\r\n\r\n        MakeNewProduct(state.token, newProduct)\r\n            .then((result) => {\r\n                setSnackbarOpen('Success');\r\n                setLoading(false);\r\n                setNewProduct(initState);\r\n                console.log('result', result);\r\n            })\r\n            .catch((err) => {\r\n                setSnackbarOpen('ERROR 500');\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>New Product</Title>\r\n            <Paper style={{padding: 16}}>\r\n                <form\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    style={{width: '100%', margin: '1rem 0'}}\r\n                >\r\n                    <div style={{width: '100%', margin: '1rem 0'}}>\r\n                        <div\r\n                            style={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    height: 128,\r\n                                    width: 128,\r\n                                    border: '1px solid grey',\r\n                                }}\r\n                            ></div>\r\n                            <Button variant=\"contained\" component=\"label\">\r\n                                Upload Photo\r\n                                <input type=\"file\" hidden />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Category\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"Type\"\r\n                            placeholder=\"Enter product category\"\r\n                            variant=\"outlined\"\r\n                            value={newProduct.category}\r\n                            onChange={(e: any) =>\r\n                                setNewProduct({\r\n                                    ...newProduct,\r\n                                    category: e.target.value,\r\n                                })\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {categories.map((c) => (\r\n                                <MenuItem\r\n                                    value={c.category_id}\r\n                                    key={c.category_id}\r\n                                >\r\n                                    {c.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Contract\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"Contract\"\r\n                            placeholder=\"Select the contract\"\r\n                            variant=\"outlined\"\r\n                            value={newProduct.contract}\r\n                            onChange={(e: any) =>\r\n                                setNewProduct({\r\n                                    ...newProduct,\r\n                                    contract: e.target.value,\r\n                                })\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {contracts.map((c, i) => (\r\n                                <MenuItem value={c.address.toString()} key={i}>\r\n                                    {c.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={() => navigate('/contracts/product/new')}\r\n                        >\r\n                            DEPLOY NEW CONTRACT\r\n                        </Button>\r\n                    </FormControl>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <Select\r\n                            id=\"outlined-required\"\r\n                            label=\"Code\"\r\n                            placeholder=\"Enter product code (contract index)\"\r\n                            variant=\"outlined\"\r\n                            value={newProduct.code}\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNewProduct({\r\n                                    ...newProduct,\r\n                                    code: e.target.value,\r\n                                })\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>\r\n                                    {newProduct.contract\r\n                                        ? 'Please Select an Item'\r\n                                        : 'Select the contract first'}\r\n                                </em>\r\n                            </MenuItem>\r\n                            {newProduct.contract\r\n                                ? items.map((c, i) => (\r\n                                      <MenuItem value={i} key={i}>\r\n                                          {ethers.utils.parseBytes32String(c)}\r\n                                      </MenuItem>\r\n                                  ))\r\n                                : []}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Name\"\r\n                            placeholder=\"Enter product name\"\r\n                            variant=\"outlined\"\r\n                            value={newProduct.name}\r\n                            onChange={(e) =>\r\n                                setNewProduct({\r\n                                    ...newProduct,\r\n                                    name: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Description\"\r\n                            placeholder=\"Enter product description\"\r\n                            variant=\"outlined\"\r\n                            value={newProduct.description}\r\n                            onChange={(e) =>\r\n                                setNewProduct({\r\n                                    ...newProduct,\r\n                                    description: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <InputLabel id=\"demo-mutiple-checkbox-label\">\r\n                            Tag\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-mutiple-checkbox-label\"\r\n                            id=\"demo-mutiple-checkbox\"\r\n                            multiple\r\n                            value={newProduct.tags}\r\n                            onChange={(e: any) =>\r\n                                setNewProduct({\r\n                                    ...newProduct,\r\n                                    tags: e.target.value,\r\n                                })\r\n                            }\r\n                            input={<Input />}\r\n                            renderValue={(selected) => (\r\n                                <div\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'flex',\r\n                                        flexWrap: 'wrap',\r\n                                        flexDirection: 'row',\r\n                                    }}\r\n                                >\r\n                                    {(selected as string[]).map((value, i) => (\r\n                                        <Chip key={i} label={value} />\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        >\r\n                            {constTags.map((value) => (\r\n                                <MenuItem key={value} value={value}>\r\n                                    <Checkbox\r\n                                        checked={\r\n                                            newProduct.tags.indexOf(value) > -1\r\n                                        }\r\n                                    />\r\n                                    <ListItemText primary={value} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'flex-end',\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            disabled={loading}\r\n                            onClick={onNew}\r\n                            variant=\"contained\"\r\n                            component=\"label\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Create\r\n                            {loading && <CircularProgress size={24} />}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n\r\n            <Snackbar\r\n                open={snackbarOpen != ''}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSnackbarOpen('')}\r\n            >\r\n                <Alert onClose={() => setSnackbarOpen('')} severity=\"success\">\r\n                    {snackbarOpen}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NewProductPage;\r\n","import React from 'react';\r\nimport Web3 from 'web3';\r\nimport {getProductContractMeta} from '../contracts';\r\ndeclare const window: any;\r\nconst useGetProductContractItems = (\r\n    address?: string\r\n): [any[], boolean, any] => {\r\n    const [contract, setcontract] = React.useState<any[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!address) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        setcontract([]);\r\n\r\n        try {\r\n            const metadata = await getProductContractMeta();\r\n            let myweb3: any = new Web3(window.ethereum);\r\n            const contract = new myweb3.eth.Contract(metadata.abi, address);\r\n\r\n            console.log('contract', contract);\r\n\r\n            contract.methods\r\n                .getAllProducts()\r\n                .call()\r\n                .then((result) => {\r\n                    console.log('result', result);\r\n                    setcontract(result);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setcontract([]);\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setcontract([]);\r\n        }\r\n    }, [address]);\r\n    return [contract, loading, err];\r\n};\r\n\r\nexport {useGetProductContractItems};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {useGetProductById} from '../../hooks/Product.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Title from '../../components/Title.component';\r\nimport {Button, Paper, Divider} from '@material-ui/core';\r\nimport {useParams} from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Select from '@material-ui/core/Select';\r\nimport {UpdateProductStatus} from '../../network/api';\r\nimport {useGetOrdersByProduct} from '../../hooks/Order.hook';\r\nfunction ProductPanelPage() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [trigger, setTrigger] = React.useState(false);\r\n\r\n    const {pid} = useParams();\r\n    const [product] = useGetProductById(state.token, pid, trigger);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>Product Panel</Title>\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    aria-label=\"simple tabs example\"\r\n                >\r\n                    <Tab label=\"Product Card\" {...a11yProps(0)} />\r\n                    <Tab label=\"Orders\" {...a11yProps(1)} />\r\n                    <Tab label=\"Activity\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <ProductTabContent\r\n                value={value}\r\n                index={0}\r\n                product={product}\r\n                token={state.token}\r\n                onTrigger={() => setTrigger(!trigger)}\r\n            />\r\n            <OrderTabContent\r\n                value={value}\r\n                index={1}\r\n                product={product}\r\n                token={state.token}\r\n            />\r\n            <ActivityTabContent value={value} index={2} product={product} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductPanelPage;\r\n\r\nconst ProductTabContent = ({\r\n    value,\r\n    index,\r\n    product,\r\n    token,\r\n    onTrigger,\r\n}: {\r\n    value: number;\r\n    index: number;\r\n    product: Product | null;\r\n    token: string | null;\r\n    onTrigger: any;\r\n}) => {\r\n    const onStatusChange = (status) => {\r\n        try {\r\n            if (!token || !product) {\r\n                return;\r\n            }\r\n            UpdateProductStatus(token, product.product_id, status)\r\n                .then((result) => {\r\n                    onTrigger();\r\n                    console.log('result', result);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n        }\r\n    };\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <div style={{padding: 8}}>\r\n                    <Typography variant=\"overline\" component={'h6'}>\r\n                        {product?.product_id}\r\n                    </Typography>{' '}\r\n                    <Typography variant=\"overline\" component={'h3'}>\r\n                        {product?.name}\r\n                    </Typography>\r\n                    <div>\r\n                        <Typography variant=\"body1\" component=\"span\">\r\n                            <Link variant=\"overline\">\r\n                                {`${product?.contract}`}\r\n                            </Link>{' '}\r\n                            <Link variant=\"overline\">\r\n                                {`(#${product?.code})`}\r\n                            </Link>\r\n                        </Typography>\r\n                    </div>{' '}\r\n                    <div>\r\n                        <MyChip label={product?.type} />\r\n                    </div>\r\n                </div>\r\n                <div style={{padding: 8}}>ACTIONS</div>\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\nconst OrderTabContent = ({value, index, product, token}) => {\r\n    const activeProducts = useGetOrdersByProduct(token, product?.product_id);\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Event</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Description</TableCell>\r\n                            <TableCell>Timestamp</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {activeProducts.map((account, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>\r\n                                    <Typography\r\n                                        variant=\"overline\"\r\n                                        component={'h3'}\r\n                                    >\r\n                                        TODO\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\nconst ActivityTabContent = ({value, index, product}) => {\r\n    const activeProducts = [];\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Event</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Description</TableCell>\r\n                            <TableCell>Timestamp</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {activeProducts.map((account, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>\r\n                                    <Typography\r\n                                        variant=\"overline\"\r\n                                        component={'h3'}\r\n                                    >\r\n                                        TODO\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst a11yProps = (index: any) => {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            style={{padding: 0}}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    <Paper\r\n                        style={{\r\n                            borderRadius: 0,\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </Paper>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MyChip = ({label}: {label: string | undefined}) => {\r\n    return label ? (\r\n        <Chip label={label} style={{marginRight: 8}} color=\"secondary\" />\r\n    ) : null;\r\n};\r\n","import React from 'react';\r\nimport {GetOrders, GetOrderById} from '../network/api';\r\n\r\nconst useGetOrders = (\r\n    token: string,\r\n    trigger = false\r\n): [Order[], boolean, any] => {\r\n    const [orders, setorders] = React.useState<Order[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setorders([]);\r\n        if (!token) {\r\n            return;\r\n        }\r\n\r\n        GetOrders(token, {})\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setorders(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setorders([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setorders([]);\r\n            });\r\n    }, [token, trigger]);\r\n    return [orders, loading, err];\r\n};\r\n\r\nconst useGetOrdersByUser = (\r\n    token: string,\r\n    user?: string,\r\n    trigger = false\r\n): [Order[], boolean, any] => {\r\n    const [orders, setorders] = React.useState<Order[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setorders([]);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!user) {\r\n            return;\r\n        }\r\n\r\n        GetOrders(token, {user})\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setorders(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setorders([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setorders([]);\r\n            });\r\n    }, [token, user, trigger]);\r\n    return [orders, loading, err];\r\n};\r\n\r\nconst useGetOrdersByProduct = (\r\n    token: string,\r\n    product?: string,\r\n    trigger = false\r\n): [Order[], boolean, any] => {\r\n    const [orders, setorders] = React.useState<Order[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setorders([]);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!product) {\r\n            return;\r\n        }\r\n\r\n        GetOrders(token, {item: product})\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setorders(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setorders([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setorders([]);\r\n            });\r\n    }, [token, product, trigger]);\r\n    return [orders, loading, err];\r\n};\r\n\r\nconst useGetOrderById = (\r\n    token: string,\r\n    oid?: string,\r\n    trigger = false\r\n): [Order | null, boolean, any] => {\r\n    const [order, setorder] = React.useState<Order | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!token || !oid) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        setorder(null);\r\n        GetOrderById(token, oid)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setorder(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setorder(null);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setorder(null);\r\n            });\r\n    }, [token, oid, trigger]);\r\n    return [order, loading, err];\r\n};\r\n\r\nexport {\r\n    useGetOrders,\r\n    useGetOrderById,\r\n    useGetOrdersByProduct,\r\n    useGetOrdersByUser,\r\n};\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useTheme} from '@material-ui/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {\r\n    FirstPage,\r\n    KeyboardArrowLeft,\r\n    KeyboardArrowRight,\r\n    LastPage,\r\n} from '@material-ui/icons';\r\nimport {green, blueGrey, red, pink, indigo} from '@material-ui/core/colors';\r\nimport {Theme} from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nfunction OrderListComponent({orders}: {orders: Order[]}) {\r\n    const theme = useTheme<Theme>();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const els = orders.map((c) => (\r\n        <OrderCard key={c.order_id} order={c} theme={theme} />\r\n    ));\r\n\r\n    const handleChangePage = (\r\n        event: React.MouseEvent<HTMLButtonElement> | null,\r\n        newPage: number\r\n    ) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n    ) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    return (\r\n        <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell width={3} align=\"center\">\r\n                        Type\r\n                    </TableCell>\r\n                    <TableCell width={3} align=\"center\">\r\n                        Status\r\n                    </TableCell>\r\n                    <TableCell>Item</TableCell>\r\n                    <TableCell>User</TableCell>\r\n                    <TableCell width={3} align=\"center\">\r\n                        Timestamp\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {els.length ? (\r\n                    els.slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                    )\r\n                ) : (\r\n                    <TableRow>\r\n                        <TableCell colSpan={5}> NO ORDERS FOUNDS</TableCell>\r\n                    </TableRow>\r\n                )}\r\n            </TableBody>\r\n            <TableFooter>\r\n                <TableRow>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[\r\n                            5,\r\n                            10,\r\n                            25,\r\n                            {label: 'All', value: -1},\r\n                        ]}\r\n                        colSpan={4}\r\n                        count={orders.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        SelectProps={{\r\n                            inputProps: {\r\n                                'aria-label': 'rows per page',\r\n                            },\r\n                            native: true,\r\n                        }}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        ActionsComponent={TablePaginationActions}\r\n                    />\r\n                </TableRow>\r\n            </TableFooter>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default OrderListComponent;\r\n\r\nconst OrderCard = ({order, theme}: {order: Order; theme: Theme}) => {\r\n    const router = useHistory();\r\n\r\n    const navigate = () => {\r\n        router.push(`/orders/${order.order_id}`);\r\n    };\r\n    return (\r\n        <TableRow style={{cursor: 'pointer'}} onClick={navigate}>\r\n            <TableCell\r\n                width={3}\r\n                align=\"center\"\r\n                style={{\r\n                    color: theme.palette.primary.light,\r\n                    textShadow: '1px 1px 3px ' + theme.palette.primary.dark,\r\n                    backgroundColor:\r\n                        typeColors[order.type] || theme.palette.primary.dark,\r\n                }}\r\n            >\r\n                {order.type}\r\n            </TableCell>\r\n            <TableCell\r\n                width={3}\r\n                align=\"center\"\r\n                style={{\r\n                    color: theme.palette.primary.light,\r\n                    textShadow: '1px 1px 3px ' + theme.palette.primary.dark,\r\n                    backgroundColor:\r\n                        statusColors[order.status] ||\r\n                        theme.palette.primary.dark,\r\n                    borderLeft: '2px solid ' + theme.palette.primary.light,\r\n                }}\r\n            >\r\n                {order.status}\r\n            </TableCell>\r\n            <TableCell scope=\"row\">{order.item?.name || '---'}</TableCell>\r\n            <TableCell>{order.user?.name || '---'}</TableCell>\r\n            <TableCell style={{fontSize: '0.7rem'}} width={3} align=\"center\">\r\n                {order.created_at\r\n                    ? new Date(order.created_at).toLocaleString()\r\n                    : 'INVALID'}\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n};\r\n\r\nconst statusColors = {\r\n    paid: green['A400'],\r\n    pending: blueGrey['700'],\r\n    cancelled: pink[600],\r\n};\r\nconst typeColors = {\r\n    Full: indigo['A200'],\r\n    BitByBit: red['A400'],\r\n};\r\ninterface TablePaginationActionsProps {\r\n    count: number;\r\n    page: number;\r\n    rowsPerPage: number;\r\n    onPageChange: (\r\n        event: React.MouseEvent<HTMLButtonElement>,\r\n        newPage: number\r\n    ) => void;\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n    const {count, page, rowsPerPage, onPageChange} = props;\r\n\r\n    const handleFirstPageButtonClick = (\r\n        event: React.MouseEvent<HTMLButtonElement>\r\n    ) => {\r\n        onPageChange(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (\r\n        event: React.MouseEvent<HTMLButtonElement>\r\n    ) => {\r\n        onPageChange(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (\r\n        event: React.MouseEvent<HTMLButtonElement>\r\n    ) => {\r\n        onPageChange(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (\r\n        event: React.MouseEvent<HTMLButtonElement>\r\n    ) => {\r\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div style={{width: '30rem'}}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                <FirstPage />\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                <KeyboardArrowLeft />\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                <KeyboardArrowRight />\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                <LastPage />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useGetOrders} from '../../hooks/Order.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport Title from '../../components/Title.component';\r\nimport OrderListComponent from './order.list';\r\nfunction OrderContent() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [orders] = useGetOrders(state.token);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title newBtn=\"/orders/new\">Orders</Title>\r\n            <Paper>\r\n                <OrderListComponent orders={orders} />\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default OrderContent;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Paper, Divider} from '@material-ui/core';\r\nimport {Button} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Input from '@material-ui/core/Input';\r\nimport {MakeNewOrder} from '../../network/api';\r\nimport {constTags} from '../../util/tags';\r\nimport {GitcoinContext} from '../../store';\r\nimport Title from '../../components/Title.component';\r\nimport {ethers} from 'ethers';\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst initState: Order | any = {\r\n    type: '',\r\n    item: null,\r\n    user: '',\r\n    status: '',\r\n    description: '',\r\n    // order_id: ''\r\n};\r\n\r\nfunction NewOrderPage() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [newOrder, setNewOrder] = React.useState<Order>(initState);\r\n\r\n    const products: Product[] = [];\r\n    const users: User[] = [];\r\n\r\n    const onNew = () => {\r\n        setLoading(true);\r\n        console.log('newOrder', newOrder);\r\n        MakeNewOrder(state.token, newOrder)\r\n            .then((result) => {\r\n                setSnackbarOpen('Success');\r\n                setLoading(false);\r\n                setNewOrder(initState);\r\n                console.log('result', result);\r\n            })\r\n            .catch((err) => {\r\n                setSnackbarOpen('ERROR 500');\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>New Order</Title>\r\n            <Paper style={{padding: 16}}>\r\n                <form\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    style={{width: '100%', margin: '1rem 0'}}\r\n                >\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Status\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"Type\"\r\n                            placeholder=\"Select type\"\r\n                            variant=\"outlined\"\r\n                            value={newOrder.status || 'pending'}\r\n                            onChange={(e: any) =>\r\n                                setNewOrder({\r\n                                    ...newOrder,\r\n                                    status: e.target.value || 'pending',\r\n                                })\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>Pending is default</em>\r\n                            </MenuItem>\r\n                            {['pending', 'cancelled', 'paid'].map((c, i) => (\r\n                                <MenuItem value={c} key={i}>\r\n                                    {c}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Type\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"Type\"\r\n                            placeholder=\"Select type\"\r\n                            variant=\"outlined\"\r\n                            value={newOrder.type || 'Full'}\r\n                            onChange={(e: any) =>\r\n                                setNewOrder({\r\n                                    ...newOrder,\r\n                                    type: e.target.value || 'Full',\r\n                                })\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {['Full', 'BitByBit'].map((c, i) => (\r\n                                <MenuItem value={c} key={i}>\r\n                                    {c}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            User\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"User\"\r\n                            placeholder=\"Select user\"\r\n                            variant=\"outlined\"\r\n                            value={newOrder.user}\r\n                            onChange={(e: any) =>\r\n                                setNewOrder({\r\n                                    ...newOrder,\r\n                                    user: e.target.value,\r\n                                })\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {users.map((c, i) => (\r\n                                <MenuItem value={c.user_id} key={i}>\r\n                                    {c.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                            Product\r\n                        </InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"Product\"\r\n                            placeholder=\"Select product\"\r\n                            variant=\"outlined\"\r\n                            value={newOrder.user}\r\n                            onChange={(e: any) =>\r\n                                setNewOrder({\r\n                                    ...newOrder,\r\n                                    user: e.target.value,\r\n                                })\r\n                            }\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {products.map((c, i) => (\r\n                                <MenuItem value={c.product_id} key={i}>\r\n                                    {c.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <TextField\r\n                            required\r\n                            id=\"outlined-required\"\r\n                            label=\"Description\"\r\n                            placeholder=\"Enter product description\"\r\n                            variant=\"outlined\"\r\n                            value={newOrder.description}\r\n                            onChange={(e) =>\r\n                                setNewOrder({\r\n                                    ...newOrder,\r\n                                    description: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'flex-end',\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            disabled={loading}\r\n                            onClick={onNew}\r\n                            variant=\"contained\"\r\n                            component=\"label\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Create\r\n                            {loading && <CircularProgress size={24} />}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n\r\n            <Snackbar\r\n                open={snackbarOpen != ''}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSnackbarOpen('')}\r\n            >\r\n                <Alert onClose={() => setSnackbarOpen('')} severity=\"success\">\r\n                    {snackbarOpen}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NewOrderPage;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {useGetOrderById} from '../../hooks/Order.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Title from '../../components/Title.component';\r\nimport {Button, Paper, Divider} from '@material-ui/core';\r\nimport {useParams} from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {UpdateOrderStatus} from '../../network/api';\r\nfunction OrderPanelPage() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [trigger, setTrigger] = React.useState(false);\r\n\r\n    const {oid} = useParams();\r\n    const [order] = useGetOrderById(state.token, oid, trigger);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>Order Panel</Title>\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    aria-label=\"simple tabs example\"\r\n                >\r\n                    <Tab label=\"Order Card\" {...a11yProps(0)} />\r\n                    <Tab label=\"Activity\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <OrderTabContent\r\n                value={value}\r\n                index={0}\r\n                order={order}\r\n                token={state.token}\r\n                onTrigger={() => setTrigger(!trigger)}\r\n            />\r\n            <ActivityTabContent value={value} index={1} order={order} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default OrderPanelPage;\r\n\r\nconst OrderTabContent = ({\r\n    value,\r\n    index,\r\n    order,\r\n    token,\r\n    onTrigger,\r\n}: {\r\n    value: number;\r\n    index: number;\r\n    order: Order | null;\r\n    token: string | null;\r\n    onTrigger: any;\r\n}) => {\r\n    const onStatusChange = (status) => {\r\n        try {\r\n            if (!token || !order) {\r\n                return;\r\n            }\r\n            UpdateOrderStatus(token, order.order_id, status)\r\n                .then((result) => {\r\n                    onTrigger();\r\n                    console.log('result', result);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n        }\r\n    };\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <div style={{padding: 8}}>\r\n                    <Typography variant=\"overline\" component={'h3'}>\r\n                        {order?.order_id}\r\n                    </Typography>\r\n                    <div>\r\n                        <Typography variant=\"body1\" component=\"span\">\r\n                            {` User: ${order?.user?.name}`}\r\n                            <Link variant=\"overline\" style={{paddingLeft: 8}}>\r\n                                {`(${order?.user?.address})`}\r\n                            </Link>\r\n                        </Typography>\r\n                    </div>{' '}\r\n                    <div>\r\n                        <Typography variant=\"body1\" component=\"span\">\r\n                            {` Product: ${order?.item?.name}`}\r\n                            <Link variant=\"overline\" style={{paddingLeft: 8}}>\r\n                                {`(${order?.item?.product_id})`}\r\n                            </Link>\r\n                        </Typography>\r\n                    </div>\r\n                    <div>\r\n                        <MyChip label={order?.status} />\r\n                        <MyChip label={order?.type} />\r\n                    </div>\r\n                </div>\r\n                <div style={{padding: 8}}>\r\n                    <form\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                        style={{width: '100%', margin: '1rem 0'}}\r\n                    >\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            style={{width: '100%', margin: '1rem 0'}}\r\n                        >\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                                Status\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-outlined-label\"\r\n                                id=\"demo-simple-select-outlined\"\r\n                                required\r\n                                label=\"Type\"\r\n                                placeholder=\"Select type\"\r\n                                variant=\"outlined\"\r\n                                value={order?.status || 'pending'}\r\n                                onChange={(e) => onStatusChange(e.target.value)}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>Pending is default</em>\r\n                                </MenuItem>\r\n                                {['pending', 'cancelled', 'paid'].map(\r\n                                    (c, i) => (\r\n                                        <MenuItem value={c} key={i}>\r\n                                            {c}\r\n                                        </MenuItem>\r\n                                    )\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </form>\r\n                </div>{' '}\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\nconst ActivityTabContent = ({value, index, order}) => {\r\n    const activeOrders = [];\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Event</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Description</TableCell>\r\n                            <TableCell>Timestamp</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {activeOrders.map((account, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>\r\n                                    <Typography\r\n                                        variant=\"overline\"\r\n                                        component={'h3'}\r\n                                    >\r\n                                        TODO\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst a11yProps = (index: any) => {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            style={{padding: 0}}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    <Paper\r\n                        style={{\r\n                            borderRadius: 0,\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </Paper>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MyChip = ({label}: {label: string | undefined}) => {\r\n    return label ? (\r\n        <Chip label={label} style={{marginRight: 8}} color=\"secondary\" />\r\n    ) : null;\r\n};\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {GitcoinContext} from '../../store';\r\nimport Title from '../../components/Title.component';\r\nimport {\r\n    Typography,\r\n    Avatar,\r\n    List,\r\n    ListItem,\r\n    FormControl,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useTheme} from '@material-ui/core/styles';\r\nimport {green, red, blue, pink, cyan} from '@material-ui/core/colors';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nfunction ArchiveContent() {\r\n    const theme = useTheme();\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [keyword, setKeyword] = React.useState('');\r\n    const [perPage, setPerPage] = React.useState(5);\r\n    const [page, setPage] = React.useState(1);\r\n    const [archives] = [[]];\r\n\r\n    const els = archives.map((c: any, i) => (\r\n        <ArchiveCard key={c.archive_id} archive={c} i={i} />\r\n    ));\r\n\r\n    const onPagiChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        console.log('value', value);\r\n        setPage(value);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title newBtn=\"/archives/new\">Archives</Title>\r\n            <div>\r\n                <form>\r\n                    <FormControl\r\n                        style={{\r\n                            width: '100%',\r\n                            margin: '1rem 0',\r\n                            color: theme.palette.primary.light,\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                            id=\"outlined-required\"\r\n                            placeholder=\"Search\"\r\n                            name=\"search\"\r\n                            variant=\"filled\"\r\n                            value={keyword}\r\n                            onChange={(e) => setKeyword(e.target.value)}\r\n                            inputProps={{\r\n                                style: {\r\n                                    backgroundColor:\r\n                                        theme.palette.primary.light,\r\n                                    padding: theme.spacing(2),\r\n                                },\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n            <Paper\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <List\r\n                    aria-label=\"main mailbox folders\"\r\n                    style={{padding: 0, flex: 1}}\r\n                >\r\n                    <div>\r\n                        {els.length ? (\r\n                            els.slice(\r\n                                (page - 1) * perPage,\r\n                                (page - 1) * perPage + perPage\r\n                            )\r\n                        ) : (\r\n                            <ListItem button divider>\r\n                                NO ARCHIVE RECORD FOUNDS\r\n                            </ListItem>\r\n                        )}\r\n                    </div>\r\n                </List>\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                >\r\n                    <Pagination\r\n                        style={{\r\n                            width: '100%',\r\n                            marginTop: theme.spacing(2),\r\n                            marginBottom: theme.spacing(2),\r\n                            display: 'flex !important',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                        showFirstButton\r\n                        showLastButton\r\n                        count={Math.ceil(els.length / perPage)}\r\n                        variant=\"outlined\"\r\n                        color=\"standard\"\r\n                        boundaryCount={2}\r\n                        siblingCount={2}\r\n                        page={page}\r\n                        defaultPage={1}\r\n                        onChange={onPagiChange}\r\n                        shape=\"rounded\"\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ArchiveContent;\r\n\r\nconst ArchiveCard = ({archive, i}) => {\r\n    const router = useHistory();\r\n\r\n    const navigate = (uid) => {\r\n        router.push(`/archives/${archive.archive_id}`);\r\n    };\r\n\r\n    return (\r\n        <ListItem\r\n            button\r\n            divider\r\n            onClick={navigate}\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-start',\r\n            }}\r\n        >\r\n            TODO\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nconst colors = [red[300], green[300], blue[300], cyan[300], pink[300]];\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {GitcoinContext} from '../../store';\r\nimport Title from '../../components/Title.component';\r\nimport {\r\n    Typography,\r\n    Avatar,\r\n    List,\r\n    ListItem,\r\n    FormControl,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport PhotoSizeSelectActualIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useTheme} from '@material-ui/core/styles';\r\nimport {green, red, blue, pink, cyan} from '@material-ui/core/colors';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nfunction CollectionContent() {\r\n    const theme = useTheme();\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [keyword, setKeyword] = React.useState('');\r\n    const [perPage, setPerPage] = React.useState(5);\r\n    const [page, setPage] = React.useState(1);\r\n    const [collections] = [[]];\r\n\r\n    const els = collections.map((c: any, i) => (\r\n        <CollectionCard key={c.collection_id} collection={c} i={i} />\r\n    ));\r\n\r\n    const onPagiChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        console.log('value', value);\r\n        setPage(value);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title newBtn=\"/collections/new\">Collections</Title>\r\n            <div>\r\n                <form>\r\n                    <FormControl\r\n                        style={{\r\n                            width: '100%',\r\n                            margin: '1rem 0',\r\n                            color: theme.palette.primary.light,\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                            id=\"outlined-required\"\r\n                            placeholder=\"Search\"\r\n                            name=\"search\"\r\n                            variant=\"filled\"\r\n                            value={keyword}\r\n                            onChange={(e) => setKeyword(e.target.value)}\r\n                            inputProps={{\r\n                                style: {\r\n                                    backgroundColor:\r\n                                        theme.palette.primary.light,\r\n                                    padding: theme.spacing(2),\r\n                                },\r\n                            }}\r\n                        />\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n            <Paper\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <List\r\n                    aria-label=\"main mailbox folders\"\r\n                    style={{padding: 0, flex: 1}}\r\n                >\r\n                    <div>\r\n                        {els.length ? (\r\n                            els.slice(\r\n                                (page - 1) * perPage,\r\n                                (page - 1) * perPage + perPage\r\n                            )\r\n                        ) : (\r\n                            <ListItem button divider>\r\n                                NO COLLECTIONS FOUNDS\r\n                            </ListItem>\r\n                        )}\r\n                    </div>\r\n                </List>\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                >\r\n                    <Pagination\r\n                        style={{\r\n                            width: '100%',\r\n                            marginTop: theme.spacing(2),\r\n                            marginBottom: theme.spacing(2),\r\n                            display: 'flex !important',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                        showFirstButton\r\n                        showLastButton\r\n                        count={Math.ceil(els.length / perPage)}\r\n                        variant=\"outlined\"\r\n                        color=\"standard\"\r\n                        boundaryCount={2}\r\n                        siblingCount={2}\r\n                        page={page}\r\n                        defaultPage={1}\r\n                        onChange={onPagiChange}\r\n                        shape=\"rounded\"\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CollectionContent;\r\n\r\nconst CollectionCard = ({collection, i}) => {\r\n    const router = useHistory();\r\n\r\n    const navigate = (uid) => {\r\n        router.push(`/collections/${collection.collection_id}`);\r\n    };\r\n\r\n    return (\r\n        <ListItem\r\n            button\r\n            divider\r\n            onClick={navigate}\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-start',\r\n            }}\r\n        >\r\n            TODO\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nconst colors = [red[300], green[300], blue[300], cyan[300], pink[300]];\r\n","import GetUrl, {SERVER} from './NETWORK_CONSTS';\r\nimport {Manager} from 'socket.io-client';\r\nimport {useState, useMemo} from 'react';\r\nimport axios from 'axios';\r\nimport {GetLobby} from './api';\r\n\r\nlet mainManager;\r\nlet mainSocket;\r\n\r\nconst Connect = (token) => {\r\n    if (!token) {\r\n        return;\r\n    }\r\n\r\n    mainSocket.on('error', (err) => {\r\n        console.log('error', err);\r\n    });\r\n    mainSocket.on('connect_error', (err) => {\r\n        console.log('connect_error', err);\r\n    });\r\n\r\n    mainSocket.on('reconnect', () => {\r\n        console.log('reconnected to rainbow :', mainSocket.id);\r\n    });\r\n    mainSocket.on('error', (err) => {\r\n        console.log('error', err);\r\n    });\r\n    mainSocket.on('reconnect_attempt', (d) => {\r\n        console.log('reconnect_attempt', d);\r\n    });\r\n};\r\nconst Disconnect = () => {\r\n    if (mainSocket) {\r\n        mainSocket.close();\r\n    }\r\n\r\n    mainSocket = null;\r\n    mainManager = null;\r\n};\r\n\r\nconst useGetSocket = (token, setup = 1) => {\r\n    const [status, setstatus] = useState(mainSocket && mainSocket.connected);\r\n    const [id, setid] = useState(\r\n        mainSocket && mainSocket.connected ? mainSocket.id : ''\r\n    );\r\n    useMemo(async () => {\r\n        if (token && setup === 1) {\r\n            if (!mainManager || !mainSocket) {\r\n                mainManager = new Manager(SERVER, {\r\n                    reconnection: true,\r\n                    reconnectionDelay: 1000,\r\n                    reconnectionDelayMax: 10000,\r\n                    reconnectionAttempts: 5,\r\n                });\r\n                mainSocket = mainManager.socket('/', {\r\n                    auth: {\r\n                        token: 'Bearer ' + token,\r\n                    },\r\n                });\r\n                mainSocket.on('connect', () => {\r\n                    console.log('connect');\r\n                    setstatus(1);\r\n                    setid(mainSocket.id);\r\n                    console.log('CONNECTED connected :', mainSocket.id);\r\n                });\r\n                mainSocket.on('disconnect', () => {\r\n                    setstatus(0);\r\n                    setid('');\r\n                    console.log(' disconnected :');\r\n                });\r\n            }\r\n        }\r\n        return () => Disconnect();\r\n    }, [token, setup]);\r\n    return [status, id];\r\n};\r\n\r\nconst useSubToMembers = (token): [any[], boolean, any] => {\r\n    const [members, setmembers] = useState<any[]>([]);\r\n    const [loading, setloading] = useState(false);\r\n    const [err, seterr] = useState('');\r\n\r\n    const tryRemove = (obj) => {\r\n        const i = members.findIndex((m: any) => m.address == obj.address);\r\n        if (i > -1) {\r\n            members.splice(i, 1);\r\n            setmembers([...members]);\r\n        }\r\n    };\r\n    const tryAdd = (obj: any) => {\r\n        const i = members.findIndex((m: any) => m.address == obj.address);\r\n        if (i < 0) {\r\n            members.push(obj);\r\n            setmembers([...members]);\r\n        }\r\n    };\r\n    useMemo(() => {\r\n        if (!token) {\r\n            return;\r\n        }\r\n        setloading(true);\r\n\r\n        GetLobby(token)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setloading(false);\r\n                    setmembers(result.data.data);\r\n                } else {\r\n                    console.log('result.data', result.data);\r\n                    setloading(false);\r\n                    seterr('UNKNOW ERROR');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                setmembers([]);\r\n                seterr(err);\r\n                console.log('err', err);\r\n            });\r\n\r\n        if (mainSocket) {\r\n            mainSocket.on('ON_ENTER', (res) => {\r\n                tryAdd(res.data);\r\n            });\r\n\r\n            mainSocket.on('ON_EXIT', (res) => {\r\n                tryRemove(res.data);\r\n            });\r\n        }\r\n        return () => {\r\n            if (mainSocket) {\r\n                mainSocket.off('ON_ENTER');\r\n                mainSocket.off('ON_EXIT');\r\n            }\r\n        };\r\n    }, [token]);\r\n\r\n    return [members, loading, err];\r\n};\r\nexport {useGetSocket, useSubToMembers};\r\n","import React from 'react';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport List from '@material-ui/core/List';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Title from '../../components/Title.component';\r\nimport {GitcoinContext} from '../../store';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSubToMembers} from '../../network/socket';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nfunction UserContent() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [users] = useSubToMembers(state.token);\r\n\r\n    const els = users\r\n        ? users.map((c, i) => <UserCard key={c.user_id + i} user={c} />)\r\n        : [];\r\n    console.log('users', users);\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>\r\n                Lobby{' '}\r\n                <Chip\r\n                    icon={<PersonIcon />}\r\n                    label={`${els.length} members online`}\r\n                    color=\"primary\"\r\n                />\r\n            </Title>\r\n            <Paper>\r\n                <List aria-label=\"main mailbox folders\" style={{padding: 0}}>\r\n                    {els.length ? (\r\n                        els\r\n                    ) : (\r\n                        <div\r\n                            style={{\r\n                                marginTop: 16,\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                padding: 8,\r\n                            }}\r\n                        >\r\n                            <Typography\r\n                                style={{\r\n                                    margin: 32,\r\n                                    textAlign: 'center',\r\n                                    padding: 32,\r\n                                    border: '1px solid black',\r\n                                }}\r\n                            >\r\n                                No ones here yet\r\n                            </Typography>\r\n                        </div>\r\n                    )}\r\n                </List>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserContent;\r\n\r\nconst UserCard = ({user}: {user: User}) => {\r\n    const router = useHistory();\r\n\r\n    const navigate = (uid) => {\r\n        router.push(`/users/${user.user_id}`);\r\n    };\r\n    return (\r\n        <ListItem\r\n            button\r\n            style={{borderBottom: '1px solid grey'}}\r\n            onClick={navigate}\r\n        >\r\n            <ListItemIcon>\r\n                <PersonIcon />\r\n            </ListItemIcon>\r\n\r\n            <ListItemText>{user.name}</ListItemText>\r\n            <div style={{fontSize: '0.75rem'}}>{user.user_id}</div>\r\n            <div style={{fontSize: '0.75rem', margin: '0 1rem'}}>\r\n                {user.address}\r\n            </div>\r\n        </ListItem>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {useGetUsers} from '../../hooks/User.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {useHistory} from 'react-router-dom';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport {Typography, Chip, Link} from '@material-ui/core';\r\nimport {red, green, blue, cyan, pink} from '@material-ui/core/colors';\r\nfunction UserListComponent({users}: {users: User[]}) {\r\n    const [perPage, setPerPage] = React.useState(5);\r\n    const [page, setPage] = React.useState(1);\r\n    const els = users.map((c, i) => (\r\n        <UserCard key={c.user_id} user={c} i={i} />\r\n    ));\r\n    return (\r\n        <List aria-label=\"main mailbox folders\" style={{padding: 0}}>\r\n            <div>\r\n                {' '}\r\n                {els.length ? (\r\n                    els.slice(\r\n                        (page - 1) * perPage,\r\n                        (page - 1) * perPage + perPage\r\n                    )\r\n                ) : (\r\n                    <ListItem button divider>\r\n                        NO USERS FOUNDS\r\n                    </ListItem>\r\n                )}\r\n            </div>\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default UserListComponent;\r\n\r\nconst UserCard = ({user, i}) => {\r\n    const router = useHistory();\r\n\r\n    const navigate = () => {\r\n        router.push(`/users/${user.user_id}`);\r\n    };\r\n\r\n    return (\r\n        <ListItem\r\n            button\r\n            divider\r\n            onClick={navigate}\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'stretch',\r\n            }}\r\n        >\r\n            <div style={{width: '7rem'}}>\r\n                <Avatar\r\n                    variant=\"rounded\"\r\n                    alt={'user'}\r\n                    src={user.avatar}\r\n                    style={{\r\n                        width: '7rem',\r\n                        height: '7rem',\r\n                        objectFit: 'contain',\r\n                        backgroundColor: colors[i % colors.length],\r\n                    }}\r\n                >\r\n                    {user.avatar ? null : <PeopleIcon fontSize=\"large\" />}\r\n                </Avatar>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    flex: 1,\r\n                    margin: '0 0.5rem',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <Typography variant=\"overline\" style={{lineHeight: '1rem'}}>\r\n                    {user.user_id}\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant=\"body1\"\r\n                    style={{\r\n                        fontSize: '1.5rem',\r\n                        flex: 1,\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'flex-start',\r\n                    }}\r\n                >\r\n                    {user.name}\r\n                    <Link variant=\"overline\" style={{paddingLeft: 8}}>\r\n                        {user.address}\r\n                    </Link>\r\n                </Typography>\r\n\r\n                <div>\r\n                    <Chip label={user.status} color=\"secondary\" />\r\n                    <Chip label={user.badge} color=\"primary\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{display: 'flex', alignItems: 'center'}}>\r\n                <div\r\n                    style={{\r\n                        padding: '0.5rem 1rem',\r\n                        color: 'white',\r\n                        backgroundColor: '#aaa',\r\n                        borderRadius: 6,\r\n                        fontSize: '0.7rem',\r\n                    }}\r\n                >\r\n                    OFFLINE\r\n                </div>\r\n            </div>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nconst colors = [\r\n    red['A100'],\r\n    green['A100'],\r\n    blue['A100'],\r\n    cyan['A100'],\r\n    pink['A100'],\r\n];\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Title from '../../components/Title.component';\r\nimport {useGetUsers} from '../../hooks/User.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport UserListComponent from './user.list';\r\nfunction UserContent() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [users] = useGetUsers(state.token);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>Users</Title>\r\n            <Paper>\r\n                <UserListComponent users={users} />\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserContent;\r\n","import React from 'react';\r\nimport {GetUsers, GetUserById} from '../network/api';\r\n\r\nconst useGetUsers = (token: string): [User[], boolean, any] => {\r\n    const [users, setusers] = React.useState<User[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setusers([]);\r\n        if (!token) {\r\n            return;\r\n        }\r\n\r\n        GetUsers(token)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setusers(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setusers([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setusers([]);\r\n            });\r\n    }, [token]);\r\n    return [users, loading, err];\r\n};\r\n\r\nconst useGetUserById = (\r\n    token: string,\r\n    uid: string,\r\n    trigger: boolean = false\r\n): [User | null, boolean, any] => {\r\n    const [user, setuser] = React.useState<User | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setuser(null);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!uid) {\r\n            return;\r\n        }\r\n\r\n        GetUserById(token, {uid: uid})\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setuser(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setuser(null);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setuser(null);\r\n            });\r\n    }, [token, trigger, uid]);\r\n    return [user, loading, err];\r\n};\r\n\r\nexport {useGetUsers, useGetUserById};\r\n","import ListItem, {ListItemProps} from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Chip from '@material-ui/core/Chip';\r\nconst NetworkLogComponent = ({logs}: {logs: NetworkLog[]}) => {\r\n    const els = logs.map((c, i) => <HttpLogCard key={i} log={c} />);\r\n\r\n    return (\r\n        <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Type</TableCell>\r\n                    <TableCell>Method</TableCell>\r\n                    <TableCell>Route</TableCell>\r\n                    <TableCell>IP</TableCell>\r\n                    <TableCell>geolocation</TableCell>\r\n                    <TableCell>user</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>{els}</TableBody>\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport {NetworkLogComponent};\r\nconst HttpLogCard = ({log}: {log: NetworkLog}) => {\r\n    return (\r\n        <TableRow>\r\n            <TableCell>\r\n                <Typography variant=\"overline\">{log.type}</Typography>\r\n            </TableCell>\r\n            <TableCell>{log.method}</TableCell>\r\n            <TableCell>{log.route}</TableCell>\r\n            <TableCell>{log.ip}</TableCell>\r\n            <TableCell>{log.geolocation}</TableCell>\r\n            <TableCell>{log.user}</TableCell>\r\n        </TableRow>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {useGetUserById} from '../../hooks/User.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Title from '../../components/Title.component';\r\nimport {Button, Paper, Divider} from '@material-ui/core';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport {NetworkLogComponent} from '../../components/NetworkLog.component';\r\nimport {useGetHttpLogs} from '../../hooks/Log.hook';\r\nimport {useGetOrdersByUser} from '../../hooks/Order.hook';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport {\r\n    blue,\r\n    red,\r\n    orange,\r\n    pink,\r\n    blueGrey,\r\n    green,\r\n    deepPurple,\r\n} from '@material-ui/core/colors';\r\nimport {UpdateUserBadge, UpdateUserStatus} from '../../network/api';\r\nimport OrderListComponent from '../orders/order.list';\r\nfunction UserContent() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n\r\n    const {uid} = useParams();\r\n    const [trigger, setTrigger] = React.useState(false);\r\n    const [user] = useGetUserById(state.token, uid, trigger);\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>User Panel</Title>\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    aria-label=\"simple tabs example\"\r\n                >\r\n                    <Tab label=\"User Card\" {...a11yProps(0)} />\r\n                    <Tab label=\"Activity\" {...a11yProps(1)} />\r\n                    <Tab label=\"Active Order\" {...a11yProps(2)} />\r\n                    <Tab label=\"Orders\" {...a11yProps(3)} />\r\n                    <Tab label=\"Logs\" {...a11yProps(4)} />\r\n                    <Tab label=\"ACTIONS\" {...a11yProps(5)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <UserTabContent\r\n                value={value}\r\n                index={0}\r\n                user={user}\r\n                token={state.token}\r\n                onTrigger={() => setTrigger(!trigger)}\r\n            />\r\n            <ActivityTabContent value={value} index={1} user={user} />\r\n            <ActiveOrderTabContent value={value} index={2} user={user} />\r\n            <OrderTabContent\r\n                value={value}\r\n                index={3}\r\n                user={user}\r\n                token={state.token}\r\n            />\r\n            <LogTabContent\r\n                value={value}\r\n                index={4}\r\n                user={user}\r\n                token={state.token}\r\n            />\r\n            <ActionTabContent value={value} index={5} user={user} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserContent;\r\n\r\nconst UserTabContent = ({\r\n    value,\r\n    index,\r\n    user,\r\n    token,\r\n    onTrigger,\r\n}: {\r\n    value: number;\r\n    index: number;\r\n    user: User | null;\r\n    token: string;\r\n    onTrigger: () => void;\r\n}) => {\r\n    const accounts = user ? [user.address] : [];\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                    <div style={{padding: 8}}>\r\n                        <div style={{width: '7rem'}}>\r\n                            <Avatar\r\n                                variant=\"rounded\"\r\n                                alt={'user'}\r\n                                src={user?.avatar}\r\n                                style={{\r\n                                    width: '7rem',\r\n                                    height: '7rem',\r\n                                    objectFit: 'contain',\r\n                                }}\r\n                            >\r\n                                {user?.avatar ? null : (\r\n                                    <PeopleIcon fontSize=\"large\" />\r\n                                )}\r\n                            </Avatar>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{flex: 1, padding: 8}}>\r\n                        <Typography variant=\"overline\" component={'h3'}>\r\n                            {user?.user_id}\r\n                        </Typography>\r\n                        <div>\r\n                            <Typography variant=\"body1\" component=\"span\">\r\n                                {user?.name}\r\n                                <Link\r\n                                    variant=\"overline\"\r\n                                    style={{paddingLeft: 8}}\r\n                                >\r\n                                    {`(${user?.address})`}\r\n                                </Link>\r\n                            </Typography>\r\n                        </div>\r\n                        <div>\r\n                            <MyChip label={user?.status} color=\"primary\" />\r\n                            <MyChip label={user?.badge} color=\"secondary\" />\r\n                        </div>\r\n                        <UserBadgeComponent\r\n                            user={user}\r\n                            token={token}\r\n                            onTrigger={onTrigger}\r\n                        />\r\n\r\n                        <Divider />\r\n                        <UserStatusComponent\r\n                            user={user}\r\n                            token={token}\r\n                            onTrigger={onTrigger}\r\n                        />\r\n\r\n                        <Divider />\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{minHeight: 480, borderTop: '1px solid grey'}}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Address</TableCell>\r\n                                <TableCell>Network</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {accounts.map((account, i) => (\r\n                                <TableRow key={i}>\r\n                                    <TableCell>\r\n                                        {' '}\r\n                                        <Typography\r\n                                            variant=\"overline\"\r\n                                            component={'h3'}\r\n                                        >\r\n                                            {account}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>{'Mainnet'}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\n\r\nconst UserBadgeComponent = ({\r\n    token,\r\n    user,\r\n    onTrigger,\r\n}: {\r\n    token: string;\r\n    user: User | null;\r\n    onTrigger: () => void;\r\n}) => {\r\n    const onBadgeChange = (badge: string) => {\r\n        console.log('badge', badge);\r\n        if (user && user.badge !== badge) {\r\n            UpdateUserBadge(token, {uid: user.user_id, badge: badge})\r\n                .then((result) => {\r\n                    onTrigger();\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                });\r\n        } else {\r\n            console.log('err');\r\n        }\r\n    };\r\n    return (\r\n        <div\r\n            style={{display: 'flex', flexDirection: 'column', margin: '1rem 0'}}\r\n        >\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Typography variant=\"overline\" component={'h3'}>\r\n                    User Badge\r\n                </Typography>\r\n            </div>\r\n\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <BadgeComponent\r\n                    onBadgeChange={onBadgeChange}\r\n                    badge={'Pleb'}\r\n                    isActive={user && user.badge == 'Pleb'}\r\n                />\r\n                <BadgeComponent\r\n                    onBadgeChange={onBadgeChange}\r\n                    badge={'Steward'}\r\n                    isActive={user && user.badge == 'Steward'}\r\n                />\r\n                <BadgeComponent\r\n                    onBadgeChange={onBadgeChange}\r\n                    badge={'VIP'}\r\n                    isActive={user && user.badge == 'VIP'}\r\n                />\r\n                <BadgeComponent\r\n                    onBadgeChange={onBadgeChange}\r\n                    badge={'Admin'}\r\n                    isActive={user && user.badge == 'Admin'}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst UserStatusComponent = ({\r\n    token,\r\n    user,\r\n    onTrigger,\r\n}: {\r\n    token: string;\r\n    user: User | null;\r\n    onTrigger: () => void;\r\n}) => {\r\n    const onStatusChange = (status: string) => {\r\n        if (user && user.status != status) {\r\n            UpdateUserStatus(token, {uid: user.user_id, status: status})\r\n                .then((result) => {\r\n                    onTrigger();\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                });\r\n        } else {\r\n            console.log('err');\r\n        }\r\n    };\r\n    return (\r\n        <div\r\n            style={{display: 'flex', flexDirection: 'column', margin: '1rem 0'}}\r\n        >\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Typography variant=\"overline\" component={'h3'}>\r\n                    User Status\r\n                </Typography>\r\n            </div>\r\n\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <StatusComponent\r\n                    onStatusChange={onStatusChange}\r\n                    status={'Banned'}\r\n                    isActive={user && user.status == 'Banned'}\r\n                />\r\n                <StatusComponent\r\n                    onStatusChange={onStatusChange}\r\n                    status={'Suspended'}\r\n                    isActive={user && user.status == 'Suspended'}\r\n                />\r\n                <StatusComponent\r\n                    onStatusChange={onStatusChange}\r\n                    status={'Not Verified'}\r\n                    isActive={user && user.status == 'Not Verified'}\r\n                />\r\n                <StatusComponent\r\n                    onStatusChange={onStatusChange}\r\n                    status={'Verified'}\r\n                    isActive={user && user.status == 'Verified'}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst badgeColors = {\r\n    Pleb: blueGrey['A400'],\r\n    Steward: orange[400],\r\n    VIP: pink[400],\r\n    Admin: deepPurple[400],\r\n};\r\nconst statusColors = {\r\n    Banned: red[400],\r\n    Suspended: orange[400],\r\n    'Not Verified': blue[400],\r\n    Verified: green[400],\r\n};\r\nconst BadgeComponent = ({\r\n    badge,\r\n    isActive,\r\n    onBadgeChange,\r\n}: {\r\n    badge: string;\r\n    isActive: boolean | null;\r\n    onBadgeChange: (badge: string) => void;\r\n}) => {\r\n    return (\r\n        <div\r\n            onClick={() => onBadgeChange(badge)}\r\n            style={{\r\n                cursor: 'pointer',\r\n                textAlign: 'center',\r\n                border: '1px solid grey',\r\n                width: '10rem',\r\n                padding: '0.5rem 1rem',\r\n                color: isActive ? 'white' : badgeColors[badge] || '#999',\r\n                backgroundColor: isActive\r\n                    ? badgeColors[badge] || 'transparent'\r\n                    : 'transparent',\r\n            }}\r\n        >\r\n            {badge}\r\n        </div>\r\n    );\r\n};\r\nconst StatusComponent = ({\r\n    status,\r\n    isActive,\r\n    onStatusChange,\r\n}: {\r\n    status: string;\r\n    isActive: boolean | null;\r\n    onStatusChange: (status: string) => void;\r\n}) => {\r\n    return (\r\n        <div\r\n            onClick={() => onStatusChange(status)}\r\n            style={{\r\n                cursor: 'pointer',\r\n                textAlign: 'center',\r\n                border: '1px solid grey',\r\n                width: '10rem',\r\n                padding: '0.5rem 1rem',\r\n                color: isActive ? 'white' : statusColors[status] || '#999',\r\n                backgroundColor: isActive\r\n                    ? statusColors[status] || 'transparent'\r\n                    : 'transparent',\r\n            }}\r\n        >\r\n            {status}\r\n        </div>\r\n    );\r\n};\r\nconst ActivityTabContent = ({value, index, user}) => {\r\n    const activeOrders = [];\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Event</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Description</TableCell>\r\n                            <TableCell>Timestamp</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {activeOrders.map((account, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>\r\n                                    <Typography\r\n                                        variant=\"overline\"\r\n                                        component={'h3'}\r\n                                    >\r\n                                        TODO\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\nconst ActiveOrderTabContent = ({value, index, user}) => {\r\n    const activeOrders = [];\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Order NO#</TableCell>\r\n                            <TableCell>Product</TableCell>\r\n                            <TableCell>Price</TableCell>\r\n                            <TableCell>Progression</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {activeOrders.map((account, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>\r\n                                    <Typography\r\n                                        variant=\"overline\"\r\n                                        component={'h3'}\r\n                                    >\r\n                                        TODO\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\nconst OrderTabContent = ({value, index, user, token}) => {\r\n    const [orders] = useGetOrdersByUser(token, user?.user_id);\r\n\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <OrderListComponent orders={orders} />\r\n        </TabPanel>\r\n    );\r\n};\r\n\r\nconst OrderCard = ({order}) => {\r\n    const router = useHistory();\r\n\r\n    const navigate = () => {\r\n        router.push(`/orders/${order.order_id}`);\r\n    };\r\n    return (\r\n        <TableRow style={{cursor: 'pointer'}} onClick={navigate}>\r\n            <TableCell scope=\"row\">{order?.type}</TableCell>\r\n            <TableCell scope=\"row\">{order?.item?.name}</TableCell>\r\n            <TableCell>{order?.user?.name}</TableCell>\r\n            <TableCell>{order?.status}</TableCell>\r\n        </TableRow>\r\n    );\r\n};\r\n\r\nconst LogTabContent = ({value, index, user, token}) => {\r\n    const [logs] = useGetHttpLogs(token, {user: user?.user_id});\r\n\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <NetworkLogComponent logs={logs} />\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\nconst ActionTabContent = ({value, index, user}) => {\r\n    const activeOrders = [];\r\n    return (\r\n        <TabPanel value={value} index={index}>\r\n            <div style={{minHeight: 480}}>\r\n                <div style={{padding: 8}}>\r\n                    <Typography variant=\"body1\">Status Actions</Typography>\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{margin: 8}}\r\n                    >\r\n                        Verify\r\n                    </Button>\r\n                    <Button variant=\"contained\" style={{margin: 8}}>\r\n                        Suspend\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{margin: 8}}\r\n                    >\r\n                        Ban\r\n                    </Button>\r\n                </div>\r\n                <Divider variant=\"middle\" />\r\n                <div style={{padding: 8}}>\r\n                    <Typography variant=\"body1\">Badge Actions</Typography>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{margin: 8}}\r\n                    >\r\n                        Admin\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{margin: 8}}\r\n                    >\r\n                        Steward\r\n                    </Button>\r\n                    <Button variant=\"contained\" style={{margin: 8}}>\r\n                        Pleb\r\n                    </Button>\r\n                </div>\r\n                <Divider variant=\"middle\" />\r\n            </div>\r\n        </TabPanel>\r\n    );\r\n};\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst a11yProps = (index: any) => {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            style={{padding: 0}}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    <Paper\r\n                        style={{\r\n                            borderRadius: 0,\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </Paper>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MyChip = ({label, color}: {label: string | undefined; color: any}) => {\r\n    return label ? (\r\n        <Chip label={label} color={color} style={{marginRight: 8}} />\r\n    ) : null;\r\n};\r\n","import React from 'react';\r\nimport {GetHttpLogs, GetUniqueLogsByIp} from '../network/api';\r\n\r\nconst useGetAllHttpLogs = (\r\n    token: string,\r\n    params?: HttpLogSearchParams\r\n): [NetworkLog[], boolean, any] => {\r\n    const [logs, setlogs] = React.useState<NetworkLog[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!token) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        setlogs([]);\r\n        GetHttpLogs(token, params)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setlogs(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setlogs([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setlogs([]);\r\n            });\r\n    }, [token]);\r\n    return [logs, loading, err];\r\n};\r\nconst useGetHttpLogs = (\r\n    token: string,\r\n    {user}: HttpLogSearchParams\r\n): [NetworkLog[], boolean, any] => {\r\n    const [logs, setlogs] = React.useState<NetworkLog[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setlogs([]);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!user) {\r\n            return;\r\n        }\r\n\r\n        GetHttpLogs(token, {user: user})\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setlogs(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setlogs([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setlogs([]);\r\n            });\r\n    }, [token, user]);\r\n    return [logs, loading, err];\r\n};\r\nconst useGetUniqueIpLogs = (\r\n    token: string\r\n): [{ips: string[]; geolocations: string[]} | null, boolean, any] => {\r\n    const [logs, setlogs] = React.useState<{\r\n        ips: string[];\r\n        geolocations: string[];\r\n    } | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setlogs(null);\r\n        if (!token) {\r\n            return;\r\n        }\r\n\r\n        GetUniqueLogsByIp(token)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setlogs(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setlogs(null);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setlogs(null);\r\n            });\r\n    }, [token]);\r\n    return [logs, loading, err];\r\n};\r\n\r\nexport {useGetAllHttpLogs, useGetHttpLogs, useGetUniqueIpLogs};\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport ListItem, {ListItemProps} from '@material-ui/core/ListItem';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Title from '../../components/Title.component';\r\nimport {Paper} from '@material-ui/core';\r\nimport {GitcoinContext} from '../../store';\r\nimport {useGetProductContracts} from '../../hooks/Contract.hook';\r\n\r\nconst ContractContent = () => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n\r\n    const [productContracts] = useGetProductContracts(state.token, {\r\n        chain: state.chain_id,\r\n    });\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title newBtn=\"/contracts/product/new\">Product Contract</Title>\r\n\r\n            <Paper>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Type</TableCell>\r\n                            <TableCell>Address</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Chain</TableCell>\r\n                            <TableCell>ProductCount</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {productContracts.map((account, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>{account.type}</TableCell>\r\n                                <TableCell>\r\n                                    <Typography\r\n                                        variant=\"overline\"\r\n                                        component={'h3'}\r\n                                    >\r\n                                        {account.address}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>{account.name}</TableCell>\r\n                                <TableCell>{account.chain}</TableCell>\r\n                                <TableCell>{account.productCount}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default ContractContent;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Button} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Title from '../../components/Title.component';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Paper} from '@material-ui/core';\r\nimport {GitcoinContext} from '../../store';\r\nimport {deployProductContract} from '../../contracts';\r\nimport {useGetTokenContracts} from '../../hooks/Contract.hook';\r\nimport {MakeNewProductContract} from '../../network/api';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Importer, ImporterField} from 'react-csv-importer';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport 'react-csv-importer/dist/index.css';\r\nimport {ethers} from 'ethers';\r\nimport GridOnIcon from '@material-ui/icons/GridOn';\r\nimport {green} from '@material-ui/core/colors';\r\nimport {\r\n    validateNaturalNumber,\r\n    validateNaturalNumberWithDecimals,\r\n} from '../../util/validators';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {\r\n    FirstPage,\r\n    KeyboardArrowLeft,\r\n    KeyboardArrowRight,\r\n    LastPage,\r\n} from '@material-ui/icons';\r\nimport {useTheme} from '@material-ui/styles';\r\nconst initState = {\r\n    name: '',\r\n    items: [] as ProductContractItemRow[],\r\n};\r\nconst initNewItemState = {\r\n    name: '',\r\n    quantity: 0,\r\n    coefficient: 1,\r\n};\r\n\r\nconst NewContractContent = () => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [newContract, setNewContract] = React.useState<any>(initState);\r\n    const [newItem, setNewItem] =\r\n        React.useState<ProductContractItemRow>(initNewItemState);\r\n    const [csvModalVisible, setcsvModalVisible] = React.useState(false);\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState<{\r\n        msg: string;\r\n        type: 'success' | 'error';\r\n    } | null>(null);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [tokenContracts] = useGetTokenContracts(state.token, {\r\n        chain: state.chain_id,\r\n    });\r\n\r\n    const onNewProductContract = (address) => {\r\n        setLoading(true);\r\n\r\n        MakeNewProductContract(state.token, {\r\n            address: address,\r\n            name: newContract.name,\r\n            productCount: newContract.items.length,\r\n            chain: state.chain_id,\r\n        })\r\n            .then((result) => {\r\n                console.log('result', result);\r\n                setSnackbarOpen({\r\n                    type: 'success',\r\n                    msg: 'Contract Added to the database.',\r\n                });\r\n                setLoading(false);\r\n                setNewContract(initState);\r\n            })\r\n            .catch((err) => {\r\n                setSnackbarOpen({\r\n                    type: 'error',\r\n                    msg: 'Some kind of error occured',\r\n                });\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const onDeploy = () => {\r\n        const candyContract = tokenContracts[0];\r\n        if (!candyContract) {\r\n            setSnackbarOpen({\r\n                type: 'error',\r\n                msg: 'Candy Contract Not Found or not found',\r\n            });\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        try {\r\n            deployProductContract(state.chain_id, [\r\n                newContract.name,\r\n                candyContract.address,\r\n                newContract.items.map((i) =>\r\n                    ethers.utils.formatBytes32String(i.name.substr(0, 31))\r\n                ),\r\n                newContract.items.map((i) => i.quantity.toString()),\r\n                newContract.items.map((i) => (i.coefficient * 1e2).toString()),\r\n            ])\r\n                .then((res) => {\r\n                    console.log('deploy res', res);\r\n                    onNewProductContract(res);\r\n                    setLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    setSnackbarOpen({\r\n                        type: 'error',\r\n                        msg: 'Some kind of error occured',\r\n                    });\r\n                    setLoading(false);\r\n                    console.log(err);\r\n                });\r\n        } catch (err) {\r\n            setSnackbarOpen({\r\n                type: 'error',\r\n                msg: 'Some kind of error occured',\r\n            });\r\n            setLoading(false);\r\n            console.log('err', err);\r\n        }\r\n    };\r\n\r\n    const handleChangePage = (\r\n        event: React.MouseEvent<HTMLButtonElement> | null,\r\n        newPage: number\r\n    ) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n    ) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>New Product Contract</Title>\r\n            <Paper style={{padding: 12}}>\r\n                <form noValidate autoComplete=\"off\">\r\n                    <FormControl variant=\"outlined\" style={{width: '100%'}}>\r\n                        <TextField\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"Contract Name\"\r\n                            variant=\"outlined\"\r\n                            value={newContract.name}\r\n                            onChange={(e) =>\r\n                                setNewContract({\r\n                                    ...newContract,\r\n                                    name: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <div\r\n                        style={{\r\n                            marginTop: 18,\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                        }}\r\n                    >\r\n                        <Typography style={{flex: 1}}>ITEMS</Typography>\r\n\r\n                        <div\r\n                            style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignSelf: 'flex-end',\r\n                            }}\r\n                        >\r\n                            <Button\r\n                                style={{\r\n                                    borderColor: green.A400,\r\n                                    color: green.A200,\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                startIcon={<GridOnIcon />}\r\n                                onClick={() => setcsvModalVisible(true)}\r\n                            >\r\n                                Import CSV\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Table aria-label=\"table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Item Quantity</TableCell>\r\n                                    <TableCell>Coefficient% (*1e-3)</TableCell>\r\n                                    <TableCell>X</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {newContract && newContract.items.length ? (\r\n                                    newContract.items\r\n                                        .slice(\r\n                                            page * rowsPerPage,\r\n                                            page * rowsPerPage + rowsPerPage\r\n                                        )\r\n                                        .map((item, i) => {\r\n                                            return (\r\n                                                <TableRow\r\n                                                    key={i}\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                >\r\n                                                    <TableCell>\r\n                                                        {item.name}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        {item.quantity}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        {item.coefficient}\r\n                                                    </TableCell>\r\n                                                    <TableCell\r\n                                                        onClick={() => {\r\n                                                            newContract.items.splice(\r\n                                                                i,\r\n                                                                1\r\n                                                            );\r\n                                                            setNewContract({\r\n                                                                ...newContract,\r\n                                                                items: [\r\n                                                                    ...newContract.items,\r\n                                                                ],\r\n                                                            });\r\n                                                        }}\r\n                                                    >{`X`}</TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n                                        })\r\n                                ) : (\r\n                                    <TableRow>\r\n                                        <TableCell\r\n                                            colSpan={5}\r\n                                        >{`NO ITEMS YET`}</TableCell>\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                            <TableFooter>\r\n                                <TableRow\r\n                                    style={{\r\n                                        border: '1px solid green',\r\n                                        borderColor: green[200],\r\n                                    }}\r\n                                >\r\n                                    <TableCell style={{padding: 0}}>\r\n                                        <TextField\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                borderRight: '1px solid grey',\r\n                                            }}\r\n                                            id=\"demo-simple-name-outlined\"\r\n                                            required\r\n                                            label=\"Item name\"\r\n                                            variant=\"filled\"\r\n                                            value={newItem.name}\r\n                                            onChange={(e) =>\r\n                                                setNewItem({\r\n                                                    ...newItem,\r\n                                                    name: e.target.value,\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        style={{\r\n                                            padding: 0,\r\n                                        }}\r\n                                    >\r\n                                        <TextField\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                borderRight: '1px solid grey',\r\n                                            }}\r\n                                            id=\"demo-simple-quantity-outlined\"\r\n                                            required\r\n                                            label=\"Quantity\"\r\n                                            variant=\"filled\"\r\n                                            value={newItem.quantity}\r\n                                            onChange={(e) =>\r\n                                                setNewItem({\r\n                                                    ...newItem,\r\n                                                    quantity:\r\n                                                        validateNaturalNumber(\r\n                                                            e.target.value\r\n                                                        ),\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell style={{padding: 0}}>\r\n                                        <TextField\r\n                                            style={{width: '100%'}}\r\n                                            id=\"demo-simple-coefficient-outlined\"\r\n                                            required\r\n                                            label=\"Coefficient\"\r\n                                            variant=\"filled\"\r\n                                            value={newItem.coefficient}\r\n                                            onChange={(e) =>\r\n                                                setNewItem({\r\n                                                    ...newItem,\r\n                                                    coefficient:\r\n                                                        validateNaturalNumberWithDecimals(\r\n                                                            e.target.value\r\n                                                        ),\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell style={{padding: 0}}>\r\n                                        <Button\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                lineHeight: '2.7rem',\r\n                                                borderRadius: 0,\r\n                                                backgroundColor: green[200],\r\n                                                color: 'white',\r\n                                            }}\r\n                                            variant=\"outlined\"\r\n                                            onClick={() => {\r\n                                                if (!newItem.name) {\r\n                                                    return setSnackbarOpen({\r\n                                                        type: 'error',\r\n                                                        msg: 'Please Enter items name.',\r\n                                                    });\r\n                                                }\r\n                                                if (newItem.name.length > 31) {\r\n                                                    return setSnackbarOpen({\r\n                                                        type: 'error',\r\n                                                        msg: 'Item name should be less than 32 characters',\r\n                                                    });\r\n                                                }\r\n                                                if (!newItem.quantity) {\r\n                                                    return setSnackbarOpen({\r\n                                                        type: 'error',\r\n                                                        msg: 'Please Enter items quantity.',\r\n                                                    });\r\n                                                }\r\n                                                if (!newItem.coefficient) {\r\n                                                    return setSnackbarOpen({\r\n                                                        type: 'error',\r\n                                                        msg: 'Please Enter items coefficient.',\r\n                                                    });\r\n                                                }\r\n                                                if (\r\n                                                    !(\r\n                                                        Number(\r\n                                                            newItem.coefficient\r\n                                                        ) > 0 &&\r\n                                                        Number(\r\n                                                            newItem.coefficient\r\n                                                        ) < 100\r\n                                                    )\r\n                                                ) {\r\n                                                    return setSnackbarOpen({\r\n                                                        type: 'error',\r\n                                                        msg: 'coefficient needs to be between 0 and 100',\r\n                                                    });\r\n                                                }\r\n                                                newContract.items.push(newItem);\r\n                                                setNewItem(initNewItemState);\r\n                                                setNewContract({\r\n                                                    ...newContract,\r\n                                                    items: [\r\n                                                        ...newContract.items,\r\n                                                    ],\r\n                                                });\r\n                                            }}\r\n                                        >\r\n                                            ADD\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TablePagination\r\n                                        rowsPerPageOptions={[\r\n                                            5,\r\n                                            10,\r\n                                            25,\r\n                                            {label: 'All', value: -1},\r\n                                        ]}\r\n                                        colSpan={4}\r\n                                        count={newContract.items.length}\r\n                                        rowsPerPage={rowsPerPage}\r\n                                        page={page}\r\n                                        SelectProps={{\r\n                                            inputProps: {\r\n                                                'aria-label': 'rows per page',\r\n                                            },\r\n                                            native: true,\r\n                                        }}\r\n                                        onPageChange={handleChangePage}\r\n                                        onRowsPerPageChange={\r\n                                            handleChangeRowsPerPage\r\n                                        }\r\n                                        ActionsComponent={\r\n                                            TablePaginationActions\r\n                                        }\r\n                                    />\r\n                                </TableRow>\r\n                            </TableFooter>\r\n                        </Table>\r\n                    </div>\r\n\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'flex-end',\r\n                            marginTop: 16,\r\n                        }}\r\n                    >\r\n                        <p>{`CHAIN: ${state.chain_id}`}</p>\r\n                        <Button\r\n                            disabled={loading}\r\n                            onClick={() => onDeploy()}\r\n                            variant=\"contained\"\r\n                            component=\"label\"\r\n                            color=\"secondary\"\r\n                            style={{marginLeft: 16}}\r\n                        >\r\n                            Deploy\r\n                            {loading && <CircularProgress size={24} />}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n            <Snackbar\r\n                open={snackbarOpen !== null}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSnackbarOpen(null)}\r\n            >\r\n                <Alert\r\n                    onClose={() => setSnackbarOpen(null)}\r\n                    severity={snackbarOpen?.type}\r\n                >\r\n                    {snackbarOpen?.msg}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <CsvImporter\r\n                onFinishedImporting={(rows) => {\r\n                    setNewContract({...newContract, items: rows});\r\n                    setcsvModalVisible(false);\r\n                }}\r\n                open={csvModalVisible}\r\n                onClose={() => setcsvModalVisible(false)}\r\n            />\r\n        </Container>\r\n    );\r\n};\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default NewContractContent;\r\n\r\nconst CsvImporter = ({\r\n    open,\r\n    onClose,\r\n    onImportingViaCsv,\r\n    onDataChange,\r\n    onCompletedParsing,\r\n    onFinishedImporting,\r\n}: {\r\n    open: boolean;\r\n    onClose?: () => void;\r\n    onImportingViaCsv?: () => void;\r\n    onDataChange?: (x: ProductContractItemRow[], i: number) => void;\r\n    onCompletedParsing?: () => void;\r\n    onFinishedImporting: (ax: ProductContractItemRow[]) => void;\r\n}) => {\r\n    const [totalRows, setTotalRows] = React.useState<ProductContractItemRow[]>(\r\n        []\r\n    );\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        margin: 'auto',\r\n                        backgroundColor: 'white',\r\n                        padding: 32,\r\n                        width: '70%',\r\n                        marginTop: '10%',\r\n                    }}\r\n                >\r\n                    <Importer\r\n                        chunkSize={10000}\r\n                        assumeNoHeaders={false}\r\n                        restartable={false}\r\n                        onStart={({\r\n                            file,\r\n                            fields,\r\n                            columns,\r\n                            skipHeaders,\r\n                        }: any) => {\r\n                            console.log('columns', columns);\r\n                            if (onImportingViaCsv) {\r\n                                onImportingViaCsv();\r\n                            }\r\n                        }}\r\n                        processChunk={async (\r\n                            rows: ProductContractItemRow[],\r\n                            {startIndex}\r\n                        ) => {\r\n                            if (onDataChange) {\r\n                                onDataChange(rows, startIndex);\r\n                            }\r\n                            console.log('totalRo', totalRows, rows, [\r\n                                ...totalRows,\r\n                                ...rows,\r\n                            ]);\r\n                            setTotalRows((prev) => [\r\n                                ...prev,\r\n                                ...rows.map((i) => ({\r\n                                    ...i,\r\n                                    name: (i.name || 'NOT_FOUND').substr(0, 31),\r\n                                })),\r\n                            ]);\r\n                        }}\r\n                        onComplete={({file, preview, fields, columnFields}) => {\r\n                            if (onCompletedParsing) {\r\n                                onCompletedParsing();\r\n                            }\r\n                        }}\r\n                        onClose={({file, preview, fields, columnFields}) => {\r\n                            onFinishedImporting(totalRows);\r\n                        }}\r\n\r\n                        // CSV options passed directly to PapaParse if specified:\r\n                        // delimiter={...}\r\n                        // newline={...}\r\n                        // quoteChar={...}\r\n                        // escapeChar={...}\r\n                        // comments={...}\r\n                        // skipEmptyLines={...}\r\n                        // delimitersToGuess={...}\r\n                    >\r\n                        <ImporterField name=\"name\" label=\"Name\" />\r\n                        <ImporterField name=\"quantity\" label=\"Quantity\" />\r\n                        <ImporterField name=\"coefficient\" label=\"Coefficient\" />\r\n                    </Importer>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\ntype ProductContractItemRow = {\r\n    name: string;\r\n    quantity: number;\r\n    coefficient: number;\r\n};\r\n\r\ninterface TablePaginationActionsProps {\r\n    count: number;\r\n    page: number;\r\n    rowsPerPage: number;\r\n    onPageChange: (\r\n        event: React.MouseEvent<HTMLButtonElement>,\r\n        newPage: number\r\n    ) => void;\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n    const theme = useTheme();\r\n    const {count, page, rowsPerPage, onPageChange} = props;\r\n\r\n    const handleFirstPageButtonClick = (\r\n        event: React.MouseEvent<HTMLButtonElement>\r\n    ) => {\r\n        onPageChange(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (\r\n        event: React.MouseEvent<HTMLButtonElement>\r\n    ) => {\r\n        onPageChange(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (\r\n        event: React.MouseEvent<HTMLButtonElement>\r\n    ) => {\r\n        onPageChange(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (\r\n        event: React.MouseEvent<HTMLButtonElement>\r\n    ) => {\r\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div style={{width: '30rem'}}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                <FirstPage />\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleBackButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"previous page\"\r\n            >\r\n                <KeyboardArrowLeft />\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                <KeyboardArrowRight />\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                <LastPage />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Paper} from '@material-ui/core';\r\nimport {GitcoinContext} from '../../store';\r\nimport {useGetTokenContracts} from '../../hooks/Contract.hook';\r\nimport Title from '../../components/Title.component';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst CandyContractContent = () => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState('');\r\n\r\n    const [tokenContracts] = useGetTokenContracts(state.token, {\r\n        chain: state.chain_id,\r\n    });\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title newBtn=\"/contracts/candy/new\">Candy Contracts</Title>\r\n            <Paper style={{padding: 16}}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Address</TableCell>\r\n                            <TableCell>Chain</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {tokenContracts.map((account, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>\r\n                                    <Typography\r\n                                        variant=\"overline\"\r\n                                        component={'h3'}\r\n                                    >\r\n                                        {account.address}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>{account.chain}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CandyContractContent;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Button} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Title from '../../components/Title.component';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Paper} from '@material-ui/core';\r\nimport {GitcoinContext} from '../../store';\r\nimport {deployCandyContract} from '../../contracts';\r\nimport {useGetTokenContracts} from '../../hooks/Contract.hook';\r\nimport {MakeNewTokenContract} from '../../network/api';\r\n\r\nconst NewCandyContractContent = () => {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [newContract, setNewContract] = React.useState({name: ''});\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState('');\r\n\r\n    const [tokenContracts] = useGetTokenContracts(state.token, {\r\n        chain: state.chain_id,\r\n    });\r\n\r\n    const onNewCandyContract = (address) => {\r\n        setLoading(true);\r\n\r\n        MakeNewTokenContract(state.token, {\r\n            address: address,\r\n            chain: state.chain_id,\r\n        })\r\n            .then((result) => {\r\n                console.log('result', result);\r\n                setSnackbarOpen('Contract Added to the database.');\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                setSnackbarOpen('Some kind of error occured');\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const onDeploy = () => {\r\n        setLoading(true);\r\n        deployCandyContract(state.chain_id)\r\n            .then((res) => {\r\n                console.log('deploy res', res);\r\n                onNewCandyContract(res);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                setSnackbarOpen('Some kind of error occured');\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>New Contract</Title>\r\n            <Paper style={{padding: 16, marginTop: 32}}>\r\n                <form noValidate autoComplete=\"off\">\r\n                    <FormControl variant=\"outlined\" style={{width: '100%'}}>\r\n                        <TextField\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"Contract Name\"\r\n                            variant=\"outlined\"\r\n                            value={newContract.name}\r\n                            onChange={(e) =>\r\n                                setNewContract({\r\n                                    ...newContract,\r\n                                    name: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'flex-end',\r\n                            marginTop: '1rem',\r\n                        }}\r\n                    >\r\n                        <p>{`CHAIN: ${state.chain_id}`}</p>\r\n                        <Button\r\n                            disabled={loading}\r\n                            onClick={() => onDeploy()}\r\n                            variant=\"contained\"\r\n                            component=\"label\"\r\n                            color=\"secondary\"\r\n                            style={{margin: '0 1rem'}}\r\n                        >\r\n                            Deploy\r\n                            {loading && <CircularProgress size={24} />}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n            <Snackbar\r\n                open={snackbarOpen !== ''}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSnackbarOpen('')}\r\n            >\r\n                <Alert onClose={() => setSnackbarOpen('')} severity=\"success\">\r\n                    {snackbarOpen}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n};\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default NewCandyContractContent;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Paper} from '@material-ui/core';\r\nimport {GitcoinContext} from '../../../store';\r\nimport {useGetQuadraticLootContracts} from '../../../hooks/Contract.hook';\r\nimport Title from '../../../components/Title.component';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nconst QuadraticLootContractContent = () => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n\r\n    const [qlootContracts] = useGetQuadraticLootContracts(state.token, {\r\n        chain: state.chain_id,\r\n    });\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title newBtn=\"/contracts/quadratic-loot/new\">\r\n                QuadraticLoot Contracts\r\n            </Title>\r\n            <Paper style={{padding: 16}}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Address</TableCell>\r\n                            <TableCell>Chain</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {qlootContracts.map((account, i) => (\r\n                            <TableRow key={i}>\r\n                                <TableCell>\r\n                                    <Typography\r\n                                        variant=\"overline\"\r\n                                        component={'h3'}\r\n                                    >\r\n                                        {account.address}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>{account.chain}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default QuadraticLootContractContent;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Button} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Title from '../../../components/Title.component';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Paper} from '@material-ui/core';\r\nimport {GitcoinContext} from '../../../store';\r\nimport {deployQLootContract} from '../../../contracts';\r\nimport {MakeNewQuadraticLootContract} from '../../../network/api';\r\n\r\nconst NewQuadraticLootContractContent = () => {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [newContract, setNewContract] = React.useState({name: ''});\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState('');\r\n\r\n    const onNewQuadraticContract = (address) => {\r\n        setLoading(true);\r\n\r\n        MakeNewQuadraticLootContract(state.token, {\r\n            address: address,\r\n            chain: state.chain_id,\r\n        })\r\n            .then((result) => {\r\n                console.log('result', result);\r\n                setSnackbarOpen('Contract Added to the database.');\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                setSnackbarOpen('Some kind of error occured');\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const onDeploy = () => {\r\n        setLoading(true);\r\n        deployQLootContract(state.chain_id)\r\n            .then((res) => {\r\n                console.log('deploy res', res);\r\n                onNewQuadraticContract(res);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                setSnackbarOpen('Some kind of error occured');\r\n                setLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <Title>New Quadratic Loot</Title>\r\n            <Paper style={{padding: 16, marginTop: 32}}>\r\n                <form noValidate autoComplete=\"off\">\r\n                    <FormControl variant=\"outlined\" style={{width: '100%'}}>\r\n                        <TextField\r\n                            id=\"demo-simple-select-outlined\"\r\n                            required\r\n                            label=\"Contract Name\"\r\n                            variant=\"outlined\"\r\n                            value={newContract.name}\r\n                            onChange={(e) =>\r\n                                setNewContract({\r\n                                    ...newContract,\r\n                                    name: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'flex-end',\r\n                            marginTop: '1rem',\r\n                        }}\r\n                    >\r\n                        <p>{`CHAIN: ${state.chain_id}`}</p>\r\n                        <Button\r\n                            disabled={loading}\r\n                            onClick={() => onDeploy()}\r\n                            variant=\"contained\"\r\n                            component=\"label\"\r\n                            color=\"secondary\"\r\n                            style={{margin: '0 1rem'}}\r\n                        >\r\n                            Deploy\r\n                            {loading && <CircularProgress size={24} />}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Paper>\r\n            <Snackbar\r\n                open={snackbarOpen !== ''}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSnackbarOpen('')}\r\n            >\r\n                <Alert onClose={() => setSnackbarOpen('')} severity=\"success\">\r\n                    {snackbarOpen}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n};\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default NewQuadraticLootContractContent;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {NetworkLogComponent} from '../../components/NetworkLog.component';\r\nimport {useGetAllHttpLogs} from '../../hooks/Log.hook';\r\nimport {GitcoinContext} from '../../store';\r\n\r\nfunction UserContent() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [logs] = useGetAllHttpLogs(state.token);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <p>LOGS</p>\r\n            <Paper>\r\n                <NetworkLogComponent logs={logs} />\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserContent;\r\n","export default __webpack_public_path__ + \"static/media/marker.2a1949e8.png\";","import React from 'react';\r\nimport {MapContainer, Marker, TileLayer, Popup} from 'react-leaflet';\r\nimport L, {LatLngExpression} from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {NetworkLogComponent} from '../../components/NetworkLog.component';\r\nimport {useGetUniqueIpLogs} from '../../hooks/Log.hook';\r\nimport {GitcoinContext} from '../../store';\r\nimport MarkerIcon from '../../assets/images/marker.png';\r\n\r\nconst position: LatLngExpression = [59.91174337077401, 10.750425582038146];\r\nfunction UserContent() {\r\n    const {state} = React.useContext(GitcoinContext);\r\n    const [logs] = useGetUniqueIpLogs(state.token);\r\n\r\n    const ips = logs && logs.ips ? logs.ips : [];\r\n\r\n    const geolocations =\r\n        logs &&\r\n        logs.geolocations.filter((geo, i) => geo != null && geo != 'null');\r\n\r\n    const ipsForGeo =\r\n        logs &&\r\n        logs.ips.filter(\r\n            (geo, i) =>\r\n                logs.geolocations[i] != null || logs.geolocations[i] != 'null'\r\n        );\r\n\r\n    const markers =\r\n        geolocations &&\r\n        ipsForGeo &&\r\n        geolocations.map((geoMeta, i) => {\r\n            const geo = JSON.parse(geoMeta)['ll'];\r\n\r\n            return (\r\n                <MyMarker\r\n                    key={i}\r\n                    geo={[Number(geo[0]), Number(geo[1])]}\r\n                    ip={ipsForGeo[i]}\r\n                />\r\n            );\r\n        });\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" style={{marginTop: '5rem'}}>\r\n            <p>GODVIEW</p>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    border: '2px solid #0077ff',\r\n                }}\r\n            >\r\n                <Paper\r\n                    style={{\r\n                        height: 800,\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        flex: 1,\r\n                    }}\r\n                >\r\n                    <MapContainer center={position} zoom={2} className=\"map\">\r\n                        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                        {markers}\r\n                    </MapContainer>\r\n                </Paper>\r\n                <Paper\r\n                    style={{\r\n                        width: '20rem',\r\n                        height: 800,\r\n                        overflow: 'auto',\r\n                        borderLeft: '2px solid #0077ff',\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        style={{\r\n                            padding: 12,\r\n                            backgroundColor: '#232323',\r\n                            color: 'white',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        IP LIST\r\n                    </Typography>\r\n                    {ips.map((ip, i) => (\r\n                        <Typography\r\n                            key={i}\r\n                            style={{\r\n                                padding: 12,\r\n                                textAlign: 'center',\r\n                                borderBottom: '2px solid #232323',\r\n                                width: '100%',\r\n                            }}\r\n                        >\r\n                            {ip}\r\n                        </Typography>\r\n                    ))}\r\n                </Paper>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserContent;\r\n\r\nconst LeafletIcon = new L.Icon({\r\n    iconUrl: MarkerIcon,\r\n    iconSize: new L.Point(32, 32),\r\n    iconAnchor: new L.Point(16, 32),\r\n    className: '',\r\n});\r\nconst MyMarker = ({geo, ip}: {geo: LatLngExpression; ip: string}) => {\r\n    return (\r\n        <Marker position={geo} icon={LeafletIcon}>\r\n            <Popup>{ip}</Popup>\r\n        </Marker>\r\n    );\r\n};\r\n","import {Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport CategoryContent from './categories';\r\nimport NewCategoryContent from './categories/new-category';\r\nimport CategoryPanelPage from './categories/category-panel';\r\nimport ProductContent from './products';\r\nimport NewProductContent from './products/new-product';\r\nimport ProductPanelPage from './products/product-panel';\r\n\r\nimport OrderContent from './orders';\r\nimport NewOrderPage from './orders/new-order';\r\nimport OrderPanelPage from './orders/order-panel';\r\nimport ArchiveContent from './archives';\r\nimport CollectionContent from './collections';\r\nimport LobbyPage from './lobby';\r\nimport UserContent from './users';\r\nimport UserPanelPage from './users/user-panel.page';\r\n//\r\nimport ContractContent from './contracts';\r\nimport NewContractContent from './contracts/new-contract';\r\nimport CandyContractContent from './contracts/candy';\r\nimport NewCandyContractContent from './contracts/new-candy';\r\nimport QuadraticLootContractContent from './contracts/quadratic-loot/quadratic-loot';\r\nimport NewQuadraticLootContractContent from './contracts/quadratic-loot/new-quadratic-loot';\r\n//\r\nimport HttpLogContent from './http-logs';\r\nimport GodViewPage from './godview';\r\nimport React from 'react';\r\nimport {GitcoinContext} from '../store';\r\n\r\nconst RouterWrapper = () => {\r\n    const {state} = React.useContext(GitcoinContext);\r\n\r\n    return (\r\n        <Container style={{marginTop: '1em'}}>\r\n            <Switch>\r\n                <Route path={'/'} exact={true} component={LobbyPage} />\r\n                <Route\r\n                    path={'/categories'}\r\n                    exact={true}\r\n                    component={CategoryContent}\r\n                />\r\n                <Route\r\n                    path={'/categories/new'}\r\n                    exact={true}\r\n                    component={NewCategoryContent}\r\n                />\r\n                <Route\r\n                    path={'/categories/:cid'}\r\n                    exact={true}\r\n                    component={CategoryPanelPage}\r\n                />\r\n                <Route\r\n                    path={'/products'}\r\n                    exact={true}\r\n                    component={ProductContent}\r\n                />\r\n                <Route\r\n                    path={'/products/new'}\r\n                    exact={true}\r\n                    component={NewProductContent}\r\n                />\r\n                <Route\r\n                    path={'/products/:pid'}\r\n                    exact={true}\r\n                    component={ProductPanelPage}\r\n                />\r\n                <Route path={'/orders'} exact component={OrderContent} />\r\n                <Route path={'/orders/new'} exact component={NewOrderPage} />\r\n                <Route path={'/orders/:oid'} exact component={OrderPanelPage} />\r\n                <Route\r\n                    path={'/collections'}\r\n                    exact\r\n                    component={CollectionContent}\r\n                />\r\n                <Route path={'/archives'} exact component={ArchiveContent} />\r\n                <Route path={'/stats'} exact component={UserContent} />{' '}\r\n                <Route path={'/lobby'} exact component={LobbyPage} />{' '}\r\n                <Route path={'/users'} exact component={UserContent} />{' '}\r\n                <Route path={'/users/:uid'} exact component={UserPanelPage} />{' '}\r\n                <Route path={'/http-logs'} exact component={HttpLogContent} />\r\n                <Route path={'/godview'} exact component={GodViewPage} />\r\n                <Redirect from={'/contracts'} to=\"/contracts/product\" exact />\r\n                <Route\r\n                    path={'/contracts/product'}\r\n                    exact\r\n                    component={ContractContent}\r\n                />\r\n                <Route\r\n                    path={'/contracts/product/new'}\r\n                    exact\r\n                    component={NewContractContent}\r\n                />\r\n                <Route\r\n                    path={'/contracts/candy'}\r\n                    exact\r\n                    component={CandyContractContent}\r\n                />\r\n                <Route\r\n                    path={'/contracts/candy/new'}\r\n                    exact\r\n                    component={NewCandyContractContent}\r\n                />\r\n                <Route\r\n                    path={'/contracts/quadratic-loot'}\r\n                    exact\r\n                    component={QuadraticLootContractContent}\r\n                />\r\n                <Route\r\n                    path={'/contracts/quadratic-loot/new'}\r\n                    exact\r\n                    component={NewQuadraticLootContractContent}\r\n                />\r\n            </Switch>\r\n        </Container>\r\n    );\r\n};\r\nexport default RouterWrapper;\r\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport SignIn from '../components/SignIn.component';\nimport {DrawerComponent} from '../components/Drawer.component';\nimport {StatusBarComponent} from '../components/StatusBar.component';\nimport {GitcoinContext} from '../store';\nimport RouterWrapper from './router';\nimport {useGetSocket} from '../network/socket';\n\nconst Pages = () => {\n    const {state} = React.useContext(GitcoinContext);\n    const socket = useGetSocket(state.token);\n\n    if (!state.token) {\n        return (\n            <Container style={{marginTop: '1em'}}>\n                <CssBaseline />\n\n                <SignIn />\n            </Container>\n        );\n    }\n    return (\n        <Box sx={{display: 'flex', height: '100vh'}}>\n            <Router>\n                <CssBaseline />\n\n                <StatusBarComponent title={'Dashboard'} />\n                <DrawerComponent />\n                <Box\n                    component=\"main\"\n                    style={{\n                        backgroundColor: '#caccd5',\n                        flexGrow: 1,\n                        height: '100vh',\n                        overflow: 'auto',\n                    }}\n                >\n                    <Container maxWidth=\"lg\" style={{marginTop: '1rem'}}>\n                        <RouterWrapper />\n                    </Container>\n                </Box>\n            </Router>\n        </Box>\n    );\n};\n\nexport {Pages};\n","import {createTheme, Theme} from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nconst theme: Theme = createTheme({\r\n    palette: {\r\n        type: 'light',\r\n        primary: {\r\n            light: 'white',\r\n            main: '#1245ba',\r\n        },\r\n    },\r\n});\r\n\r\nexport {theme};\r\n","import React from 'react';\nimport './App.scss';\nimport {GitcoinProvider} from './store';\nimport {Pages} from './pages';\nimport {theme} from './theme';\nimport {ThemeProvider} from '@material-ui/styles';\nfunction App() {\n    return (\n        <GitcoinProvider>\n            <ThemeProvider theme={theme}>\n                <Pages />\n            </ThemeProvider>\n        </GitcoinProvider>\n    );\n}\n\nexport default App;\ndeclare global {\n    interface Window {\n        ethereum?: any;\n        web3?: any;\n        __CIPHER__?: any;\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}