{"version":3,"sources":["store/actions.ts","store/index.tsx","components/Image.component.tsx","assets/images/bot00.png","hooks/Balance.ts","util/address.ts","util/network.ts","assets/images/metamask.png","contracts/index.ts","network/NETWORK_CONSTS.ts","network/api.ts","hooks/Contract.hook.ts","components/Wallet.component.tsx","hooks/Candy.hook.ts","components/StatusBar.component.tsx","assets/images/heart.png","components/Navbar.component.tsx","assets/images/box.png","pages/shop/q-loot.card.tsx","pages/shop/index.tsx","hooks/Shop.hook.ts","hooks/ProductContract.ts","pages/shop/product.tsx","pages/shop/q-loot.tsx","hooks/QuadraticLoot.hook.ts","assets/images/about.png","pages/about/index.tsx","assets/images/blushing_malware.png","pages/claim/Claim.page.tsx","components/SignIn.component.tsx","network/auth.ts","pages/router.tsx","network/socket.ts","pages/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ACTIONS","profile","localStorage","getItem","initialState","chain_id","JSON","parse","token","wallet","wallets","provider","isAuth","candyBalance","candyBalanceTrigger","GitcoinContext","React","createContext","gitcoinReducer","state","action","type","payload","setItem","stringify","ethers","providers","Web3Provider","window","ethereum","removeItem","Error","GitcoinProvider","children","useReducer","dispatch","Provider","value","Image","src","alt","props","blockNumberInterval","minimizeAddress","addr","_k","len","length","substr","getNetworkName","id","getProductContractMeta","metadata","require","e","console","log","getCandyContractMeta","getQuadtraicLootMeta","SERVER","GetBaseUrl","i","GetUrl","GetCandyContract","data","axios","method","url","headers","Authorization","GetQuadraticLootContract","GetProducts","GetProduct","pid","MakeOrder","useGetTokenContractMeta","chain","trigger","useState","meta","setmeta","loading","setloading","err","seterr","useMemo","a","then","result","success","catch","useGetTokenContract","contract","setcontract","myweb3","Web3","eth","Contract","abi","address","WalletComponent","useContext","balance","setbalance","getBalance","utils","toString","formatEther","b","parseFloat","toFixed","useGetBalance","useHistory","contractMeta","l1","l2","owner","methods","balanceOf","call","Number","useGetCandyBalance","cBalance","l3","candyBalanceLoading","useEffect","onMetamaskConnect","preventDefault","request","params","eth_accounts","handleAccountsChanged","accounts","currentProvider","handleChainChanged","chainId","parseInt","_stup","error","on","net","getId","removeListener","requestSwitchNetwork","style","display","flexDirection","flex","justifyContent","alignItems","fontSize","backgroundColor","color","border","margin","padding","CircularProgress","onClick","className","width","fontWeight","MetamaskIcon","height","useStyles","makeStyles","theme","createStyles","container","boxShadow","bigtitle","fontFamily","Statusbar","styles","AppBar","position","Toolbar","variant","marginLeft","href","MoonshotBotIcon","Typography","Container","borderTop","palette","primary","dark","borderBottom","link","borderRight","borderLeft","cursor","top","navbar","Navbar","to","HeartIcon","object-fit","QuadraticLootCard","router","BoxPhoto","textShadow","orange","FAKE_DESC","push","Shop","products","setproducts","useGetProducts","blueGrey","left","transform","deepOrange","A100","A200","flexWrap","map","p","item","product_id","ProductCard","c","A400","Math","floor","random","avatar","DEFAUL_PHOTO","name","category","Button","alignSelf","borderRadius","path","useGetInterestPerBlock","initAmount","amount","setamount","getInterestPerBlock","ProductPage","amountBitByBit","setamountBitByBit","amountBitByBitLoading","setamountBitByBitLoading","buyEtherLoading","setBuyEtherLoading","buyCandyLoading","setBuyCandyLoading","useParams","blockNumber","setblockNumber","getBlockNumber","blockNO","setInterval","clearInterval","useGetBlockNumber","blockNumberLoading","useGetProduct","product","useGetProductContract","projects","setprojects","getAllProducts","useGetAllProducts","pId","code","refreshTrigger","currentX","setcurrentX","useGetXByIndex","coef","setcoef","coefficients","useGetCoefForId","currentCoef","quantities","useGetQuantityForId","currentQuantity","x","currentPriceChange","setcurrentPriceChange","getEtherAmountForX","useGetEtherAmountForX","ethPrice","etherPericeChangeLoading","getCandyAmountForX","useGetCandyAmountForX","candyPrice","candyPriceLoading","parseEther","interestForAmount","amountPaid","useGetCurrentPaid","currentPaid","currentPaidLoading","interestForPaidAmount","interestForPaidAmountLoading","streak","setstreak","currentStreaks","useGetCurrentStreak","currentStreak","currentStreakLoading","lastBlockPaid","setlastBlockPaid","lastPaidBlock","useGetLastPaidBlock","lastPaidBlockLoading","minMaxInterval","setminMaxInterval","Promise","all","streakMinInterval","streakMaxInterval","minInterval","maxInterval","min","max","useGetMinMaxStreakInterval","minMaxIntervalLoading","startingBlock","endingBlock","interest","setinterest","getCompoundingInterest","useGetCompoundingInterest","compoundingInterest","compoundingInterestLoading","candyContract","spender","allowance","setallowance","useGetCandyAllowance","_address","candyAllowance","candyAllowanceLoading","buyWithEther","onNewOrder","order","requestMintWithEth","send","from","res","onUpdateOrderStatus","order_id","buyWithCandy","price","parsedAllowence","gt","approve","requestMintWithCandy","startPayBitByBit","payABit","buyBitByBit","resolve","reject","status","oid","layout","description","marginTop","marginBottom","align","component","textAlign","size","Input","onChange","target","title","subvalue","BitByBitInfoRow","tokenId","setTokenId","useGetQuadraticLootContractMeta","useGetQuadraticLootContract","tokens","settokens","TOPICS","options","fromBlock","toBlock","topics","keccak256","constants","HashZero","getPastLogs","logs","l","hexToNumberString","useGetAllTokensMinted","allTokens","ids","tokenURI","uris","uri","image","useGetTokensURIs","tokenURIs","onMint","claim","f","placeholder","t","TokenCard","dataURI","json","atob","substring","Claim","paddingTop","GitcoinPhoto","Alert","elevation","snackbarOpen","setSnackbarOpen","setLoading","onClaim","getCandy","BigNumber","pow","mul","MalwareIcon","disabled","Snackbar","open","autoHideDuration","onClose","severity","SignIncomponent","setErr","alreadySignedUp","setAlreadySignedUp","login","setLogin","isAddress","post","exists","Box","background","flexGrow","overflow","maxWidth","Paper","noValidate","autoComplete","Chip","label","onDelete","borderColor","FormControl","TextField","required","trim","get","nonce","personal","sign","signedMessage","Login","msg","message","SignIn","mainManager","mainSocket","RouterWrapper","exact","ShopPage","QuadraticLootPage","ClaimPage","AboutPage","AuthRouter","Disconnect","close","Pages","setup","connected","setstatus","setid","Manager","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","socket","auth","useGetSocket","CssBaseline","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2de0136d.chunk.js","sourcesContent":["const ACTIONS = {\r\n    SET_WALLETS: 'SET_WALLETS',\r\n    SETUP: 'SETUP',\r\n    SET_TOKEN: 'SET_TOKEN',\r\n    SET_PROFILE: 'SET_PROFILE',\r\n    SET_CHAIN_ID: 'SET_CHAIN_ID',\r\n    SET_PROVIDER: 'SET_PROVIDER',\r\n    AUTHCHECK: 'AUTHCHECK',\r\n    RESETAUTH: 'RESETAUTH',\r\n\r\n    TRIGGER_CANDY_BALANCE: 'TRIGGER_CANDY_BALANCE',\r\n    SET_CANDY_BALANCE: 'SET_CANDY_BALANCE',\r\n};\r\nexport {ACTIONS};\r\n","import {ethers} from 'ethers';\r\nimport React from 'react';\r\nimport {getNetworkName} from '../util/network';\r\nimport {ACTIONS} from './actions';\r\ndeclare const window: any;\r\ntype Action = {type: string; payload?: any};\r\ntype Dispatch = (action: Action) => void;\r\n\r\ntype State = {\r\n    chain_id: string;\r\n    profile: {name: string; user_id: string; address: string} | null;\r\n    token: string;\r\n    wallet: number;\r\n    provider: any;\r\n    wallets: string[];\r\n    isAuth: 'NEED_AUTH' | 'AUTHED' | '';\r\n    candyBalance: number | null;\r\n    candyBalanceTrigger: boolean;\r\n};\r\ntype GitcoinProviderProps = {children: React.ReactNode};\r\n\r\nconst profile = localStorage.getItem('profile');\r\nconst initialState: State = {\r\n    chain_id: '42',\r\n    profile: profile ? JSON.parse(profile) : null,\r\n    token: localStorage.getItem('token') || '',\r\n    wallet: 0,\r\n    wallets: [],\r\n    provider: null,\r\n    isAuth: '',\r\n    candyBalance: null,\r\n    candyBalanceTrigger: false,\r\n};\r\n\r\nconst GitcoinContext = React.createContext<{state: State; dispatch: Dispatch}>(\r\n    initialState as any\r\n);\r\n\r\nconst gitcoinReducer = (state: State, action: Action): State => {\r\n    // console.log(action);\r\n\r\n    switch (action.type) {\r\n        case ACTIONS.SET_WALLETS: {\r\n            return {\r\n                ...state,\r\n                wallets: [...action.payload],\r\n            };\r\n        }\r\n\r\n        case ACTIONS.SETUP: {\r\n            localStorage.setItem(\r\n                'profile',\r\n                JSON.stringify(action.payload.profile)\r\n            );\r\n            localStorage.setItem('token', action.payload.token);\r\n\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                profile: action.payload.profile,\r\n                isAuth: '',\r\n            };\r\n        }\r\n\r\n        case ACTIONS.SET_TOKEN: {\r\n            return {\r\n                ...state,\r\n                token: action.payload,\r\n            };\r\n        }\r\n\r\n        case ACTIONS.SET_PROFILE: {\r\n            return {...state, profile: action.payload};\r\n        }\r\n\r\n        case ACTIONS.SET_CHAIN_ID: {\r\n            return {\r\n                ...state,\r\n                chain_id: action.payload,\r\n                provider: new ethers.providers.Web3Provider(\r\n                    window.ethereum,\r\n                    'any'\r\n                ),\r\n            };\r\n        }\r\n\r\n        case ACTIONS.SET_PROVIDER: {\r\n            return {\r\n                ...state,\r\n                provider: action.payload,\r\n            };\r\n        }\r\n\r\n        case ACTIONS.AUTHCHECK: {\r\n            const isAuth =\r\n                state.token && state.token !== '' ? 'AUTHED' : 'NEED_AUTH';\r\n            return {\r\n                ...state,\r\n                isAuth: isAuth,\r\n            };\r\n        }\r\n\r\n        case ACTIONS.RESETAUTH: {\r\n            localStorage.removeItem('profile');\r\n            localStorage.removeItem('token');\r\n\r\n            return {\r\n                ...state,\r\n                token: '',\r\n                profile: null,\r\n                isAuth: 'NEED_AUTH',\r\n            };\r\n        }\r\n\r\n        case ACTIONS.SET_CANDY_BALANCE: {\r\n            return {\r\n                ...state,\r\n                candyBalance: action.payload,\r\n            };\r\n        }\r\n\r\n        case ACTIONS.TRIGGER_CANDY_BALANCE: {\r\n            return {\r\n                ...state,\r\n                candyBalanceTrigger: !state.candyBalanceTrigger,\r\n            };\r\n        }\r\n\r\n        default: {\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n        }\r\n    }\r\n};\r\n\r\nconst GitcoinProvider = ({children}: GitcoinProviderProps) => {\r\n    const [state, dispatch] = React.useReducer(gitcoinReducer, initialState);\r\n\r\n    return (\r\n        <GitcoinContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </GitcoinContext.Provider>\r\n    );\r\n};\r\nexport {GitcoinContext, GitcoinProvider};\r\n","import React from 'react';\r\nconst Image = ({src, alt, ...props}: any) => {\r\n    return <img {...props} src={src} alt={alt} />;\r\n};\r\n\r\nexport default Image;\r\n","export default __webpack_public_path__ + \"static/media/bot00.7d8400fc.png\";","import {BaseProvider} from '@ethersproject/providers';\r\nimport {Contract, ethers} from 'ethers';\r\nimport React from 'react';\r\nimport Web3 from 'web3';\r\ndeclare const window: any;\r\nconst useGetBalance = (addr: string, provider: BaseProvider) => {\r\n    const [balance, setbalance] = React.useState('');\r\n    const [loading, setloading] = React.useState(false);\r\n    React.useMemo(async () => {\r\n        if (addr && provider) {\r\n            try {\r\n                if (!provider || !provider.getBalance) {\r\n                    return;\r\n                }\r\n                setloading(true);\r\n                let a = ethers.utils.formatEther(\r\n                    (await provider.getBalance(addr)).toString()\r\n                );\r\n                let b = parseFloat(a.toString()).toFixed(2);\r\n                setbalance(b);\r\n                setloading(false);\r\n            } catch (err) {\r\n                console.log('err', err);\r\n                setloading(false);\r\n            }\r\n        } else {\r\n            setbalance('');\r\n        }\r\n    }, [addr, provider]);\r\n    return balance;\r\n};\r\n\r\nlet blockNumberInterval: any = null;\r\nconst useGetBlockNumber = (): [string, boolean] => {\r\n    const [blockNumber, setblockNumber] = React.useState('');\r\n    const [loading, setloading] = React.useState(false);\r\n    React.useMemo(async () => {\r\n        try {\r\n            setloading(true);\r\n            let myweb3: any = new Web3(window.ethereum);\r\n            const blockNO = await myweb3.eth.getBlockNumber();\r\n            setblockNumber(blockNO);\r\n            setloading(false);\r\n\r\n            blockNumberInterval = setInterval(async () => {\r\n                const blockNO = await myweb3.eth.getBlockNumber();\r\n                setblockNumber(blockNO);\r\n            }, 10 * 1000);\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n        }\r\n\r\n        return () => {\r\n            clearInterval(blockNumberInterval);\r\n        };\r\n    }, []);\r\n    return [blockNumber, loading];\r\n};\r\n\r\nexport {useGetBalance, useGetBlockNumber};\r\n","const minimizeAddress = (addr: string, _k: number = 4): string => {\r\n    let len = addr.length;\r\n    return addr.substr(0, _k + 2) + '...' + addr.substr(len - _k, len);\r\n};\r\n\r\nexport {minimizeAddress};\r\n","const getNetworkName = (id?: string) => {\r\n    switch (id) {\r\n        case '1':\r\n            return 'Mainnet';\r\n        case '5':\r\n            return 'Goerli';\r\n        case '3':\r\n            return 'Ropsten';\r\n        case '4':\r\n            return 'Rinkeby';\r\n        case '42':\r\n            return 'Kovan';\r\n        default:\r\n            return id || 'UNDEFINED';\r\n    }\r\n};\r\n\r\nconst getNetworks = () => {\r\n    return [\r\n        {\r\n            name: 'Mainnet',\r\n            chain: '1',\r\n        },\r\n        {\r\n            name: 'Goerli',\r\n            chain: '5',\r\n        },\r\n        {\r\n            name: 'Ropsten',\r\n            chain: '3',\r\n        },\r\n        {\r\n            name: 'Rinkeby',\r\n            chain: '4',\r\n        },\r\n        {\r\n            name: 'Kovan',\r\n            chain: '42',\r\n        },\r\n    ];\r\n};\r\nconst getNetworksOptions = () => {\r\n    return getNetworks().map((n) => ({\r\n        key: n.chain,\r\n        value: n.chain,\r\n        text: n.name,\r\n    }));\r\n};\r\n\r\nexport {getNetworkName, getNetworks, getNetworksOptions};\r\n","export default __webpack_public_path__ + \"static/media/metamask.311a962c.png\";","import {BigNumber, ethers} from 'ethers';\r\n\r\ndeclare const window: any;\r\nconst deployProductContract = (\r\n    chainId: any,\r\n    options: any[]\r\n): Promise<string> => {\r\n    console.log(`redeploying contracts on ${chainId}`);\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(\r\n                window.ethereum,\r\n                'any' // getNetworkName(chainId).toLocaleLowerCase()\r\n            );\r\n\r\n            let metadata: any = {};\r\n\r\n            try {\r\n                metadata = require(`./daomart.json`);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            console.log('options', options);\r\n            console.log(`Deploying ${'NEW DAOMART PRODUCT '} : \\n ${options}`);\r\n\r\n            let factory = new ethers.ContractFactory(\r\n                metadata.abi,\r\n                metadata.data.bytecode.object,\r\n                provider.getSigner()\r\n            );\r\n\r\n            const contract = await factory.deploy(...options);\r\n            console.log('Contract Address: ', contract.address);\r\n            await contract.deployed();\r\n            console.log('Contract Deployed: ', contract.deployTransaction);\r\n            if (contract.deployTransaction) {\r\n                console.log(\r\n                    `gas limit ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasLimit\r\n                        ).toNumber() / 1e9\r\n                    } at gas price ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasPrice\r\n                        ).toNumber() / 1e9\r\n                    }`\r\n                );\r\n            }\r\n\r\n            resolve(contract.address);\r\n        } catch (e: any) {\r\n            if (e && e['reason']) {\r\n                reject(e['reason']);\r\n            } else if (e && e['message']) {\r\n                reject(e['message']);\r\n            } else {\r\n                console.log(e);\r\n                reject('ERROR [!]');\r\n            }\r\n        }\r\n    });\r\n};\r\nconst deployCandyContract = (chainId: any): Promise<string> => {\r\n    console.log(`redeploying contracts on ${chainId}`);\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(\r\n                window.ethereum,\r\n                'any' // getNetworkName(chainId).toLocaleLowerCase()\r\n            );\r\n\r\n            let metadata: any = {};\r\n\r\n            try {\r\n                metadata = require(`./candy.json`);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n\r\n            console.log(`Deploying ${'Candy'}`);\r\n\r\n            let factory = new ethers.ContractFactory(\r\n                metadata.abi,\r\n                metadata.data.bytecode.object,\r\n                provider.getSigner()\r\n            );\r\n\r\n            const contract = await factory.deploy('Candy', '🍬');\r\n            console.log('Contract Address: ', contract.address);\r\n            await contract.deployed();\r\n            console.log('Contract Deployed: ', contract.deployTransaction);\r\n            if (contract.deployTransaction) {\r\n                console.log(\r\n                    `gas limit ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasLimit\r\n                        ).toNumber() / 1e9\r\n                    } at gas price ${\r\n                        BigNumber.from(\r\n                            contract.deployTransaction.gasPrice\r\n                        ).toNumber() / 1e9\r\n                    }`\r\n                );\r\n            }\r\n\r\n            resolve(contract.address);\r\n        } catch (e: any) {\r\n            if (e && e['reason']) {\r\n                reject(e['reason']);\r\n            } else if (e && e['message']) {\r\n                reject(e['message']);\r\n            } else {\r\n                console.log(e);\r\n                reject('ERROR [!]');\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nconst getProductContractMeta = () => {\r\n    let metadata: any = {};\r\n\r\n    try {\r\n        metadata = require(`./daomart.json`);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return metadata;\r\n};\r\nconst getCandyContractMeta = () => {\r\n    let metadata: any = {};\r\n\r\n    try {\r\n        metadata = require(`./candy.json`);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return metadata;\r\n};\r\nconst getQuadtraicLootMeta = () => {\r\n    let metadata: any = {};\r\n\r\n    try {\r\n        metadata = require(`./qloot.json`);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return metadata;\r\n};\r\nexport {\r\n    deployProductContract,\r\n    deployCandyContract,\r\n    getProductContractMeta,\r\n    getCandyContractMeta,\r\n    getQuadtraicLootMeta,\r\n};\r\n","let SERVER = 'http://176.9.180.134:8081/api/';\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\r\n    SERVER = 'http://localhost:8081/api/';\r\n}\r\n\r\nconst GetUrl = (i: string) => {\r\n    return SERVER + i;\r\n};\r\nconst GetBaseUrl = (i: string) => {\r\n    return SERVER + '' + i;\r\n};\r\n\r\nexport default GetUrl;\r\n\r\nexport {SERVER, GetBaseUrl};\r\n","import axios from 'axios';\r\nimport GetUrl from './NETWORK_CONSTS';\r\n\r\nexport const GetProductLobby = (token: string, pid: string) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('lobby/product'),\r\n        data: {pid: pid},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetCandyContract = (token?: string, data?: any) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('contract/candy'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetQuadraticLootContract = (token?: string, data?: any) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('contract/quadratic-loot'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetProducts = (token?: string) =>\r\n    axios({\r\n        method: 'GET',\r\n        url: GetUrl('product'),\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetProduct = (token?: string, pid?: string) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('product/pid'),\r\n        data: {pid: pid},\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const GetProductCategories = (token?: string) =>\r\n    axios({\r\n        method: 'GET',\r\n        url: GetUrl('categories'),\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const MakeOrder = (token?: string, data?: any) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('order/new'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\nexport const UpdateOrderStatus = (token?: string, data?: any) =>\r\n    axios({\r\n        method: 'POST',\r\n        url: GetUrl('order/update-status'),\r\n        data: data,\r\n        headers: {\r\n            Authorization: 'Bearer ' + token,\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n","import React from 'react';\r\nimport {\r\n    getProductContractMeta,\r\n    getCandyContractMeta,\r\n    getQuadtraicLootMeta,\r\n} from '../contracts';\r\nimport {GetCandyContract, GetQuadraticLootContract} from '../network/api';\r\nimport Web3 from 'web3';\r\ndeclare const window: any;\r\nconst useGetProductContract = (address?: string): [any, boolean, any] => {\r\n    const [contract, setcontract] = React.useState<any>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!address) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setloading(true);\r\n            const metadata = await getProductContractMeta();\r\n            let myweb3: any = new Web3(window.ethereum);\r\n            const contract = new myweb3.eth.Contract(metadata.abi, address);\r\n            setcontract(contract);\r\n        } catch (err) {\r\n            setloading(false);\r\n            seterr(err);\r\n            setcontract(null);\r\n        }\r\n    }, [address]);\r\n    return [contract, loading, err];\r\n};\r\nconst useGetTokenContractMeta = (\r\n    token?: string,\r\n    chain?: string,\r\n    trigger = false\r\n): [any, boolean, any] => {\r\n    const [meta, setmeta] = React.useState<any>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setmeta(null);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!chain) {\r\n            return;\r\n        }\r\n        try {\r\n            setloading(true);\r\n            GetCandyContract(token, {chain: chain})\r\n                .then((result) => {\r\n                    if (result.data.success) {\r\n                        setmeta(result.data.data);\r\n                        setloading(false);\r\n                        seterr(null);\r\n                    } else {\r\n                        setloading(false);\r\n                        seterr('Uknow Error');\r\n                        setmeta(null);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setmeta(null);\r\n                });\r\n        } catch (err) {\r\n            setloading(false);\r\n            seterr(err);\r\n            setmeta(null);\r\n        }\r\n    }, [token, chain, trigger]);\r\n    return [meta, loading, err];\r\n};\r\nconst useGetQuadraticLootContractMeta = (\r\n    token?: string,\r\n    chain?: string,\r\n    trigger = false\r\n): [any, boolean, any] => {\r\n    const [meta, setmeta] = React.useState<any>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setmeta(null);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!chain) {\r\n            return;\r\n        }\r\n        try {\r\n            setloading(true);\r\n            GetQuadraticLootContract(token, {chain: chain})\r\n                .then((result) => {\r\n                    if (result.data.success) {\r\n                        setmeta(result.data.data);\r\n                        setloading(false);\r\n                        seterr(null);\r\n                    } else {\r\n                        setloading(false);\r\n                        seterr('Uknow Error');\r\n                        setmeta(null);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setmeta(null);\r\n                });\r\n        } catch (err) {\r\n            setloading(false);\r\n            seterr(err);\r\n            setmeta(null);\r\n        }\r\n    }, [token, chain, trigger]);\r\n    return [meta, loading, err];\r\n};\r\nconst useGetTokenContract = (meta?: any): [any, boolean, any] => {\r\n    const [contract, setcontract] = React.useState<any>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!meta) {\r\n            return;\r\n        }\r\n        try {\r\n            setloading(true);\r\n            const metadata = await getCandyContractMeta();\r\n            let myweb3: any = new Web3(window.ethereum);\r\n            const contract = new myweb3.eth.Contract(\r\n                metadata.abi,\r\n                meta.address\r\n            );\r\n            setcontract(contract);\r\n            setloading(false);\r\n        } catch (err) {\r\n            setloading(false);\r\n            seterr(err);\r\n            setcontract(null);\r\n        }\r\n    }, [meta]);\r\n    return [contract, loading, err];\r\n};\r\nconst useGetQuadraticLootContract = (meta?: any): [any, boolean, any] => {\r\n    const [contract, setcontract] = React.useState<any>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        if (!meta) {\r\n            return;\r\n        }\r\n        try {\r\n            setloading(true);\r\n            const metadata = await getQuadtraicLootMeta();\r\n            let myweb3: any = new Web3(window.ethereum);\r\n            const contract = new myweb3.eth.Contract(\r\n                metadata.abi,\r\n                meta.address\r\n            );\r\n            setcontract(contract);\r\n            setloading(false);\r\n        } catch (err) {\r\n            setloading(false);\r\n            seterr(err);\r\n            setcontract(null);\r\n        }\r\n    }, [meta]);\r\n    return [contract, loading, err];\r\n};\r\n\r\nexport {\r\n    useGetProductContract,\r\n    useGetTokenContractMeta,\r\n    useGetQuadraticLootContractMeta,\r\n    useGetQuadraticLootContract,\r\n    useGetTokenContract,\r\n};\r\n","import {useGetBalance} from '../hooks/Balance';\r\nimport {minimizeAddress} from '../util/address';\r\nimport {getNetworkName} from '../util/network';\r\n\r\nimport MetamaskIcon from '../assets/images/metamask.png';\r\nimport {GitcoinContext} from '../store';\r\nimport React from 'react';\r\nimport Image from './Image.component';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Web3 from 'web3';\r\nimport {useGetCandyBalance} from '../hooks/Candy.hook';\r\nimport {\r\n    useGetTokenContract,\r\n    useGetTokenContractMeta,\r\n} from '../hooks/Contract.hook';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {ACTIONS} from '../store/actions';\r\ndeclare const window: any;\r\nconst WalletComponent = ({}) => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const wallets = state.wallets;\r\n    const balance = useGetBalance(wallets[0], state.provider);\r\n\r\n    const router = useHistory();\r\n\r\n    const [contractMeta, l1] = useGetTokenContractMeta(\r\n        state.token,\r\n        state.chain_id\r\n    );\r\n    const [contract, l2] = useGetTokenContract(contractMeta);\r\n\r\n    const [cBalance, l3] = useGetCandyBalance(\r\n        contract,\r\n        state.wallets[0],\r\n        state.candyBalanceTrigger\r\n    );\r\n    const candyBalanceLoading = l1 || l2 || l3;\r\n\r\n    React.useEffect(() => {\r\n        dispatch({type: ACTIONS.SET_CANDY_BALANCE, payload: cBalance});\r\n    }, [cBalance]);\r\n\r\n    const onMetamaskConnect = async (e) => {\r\n        e.preventDefault();\r\n        //@ts-ignore\r\n        const permissions = await window.ethereum.request({\r\n            method: 'wallet_requestPermissions',\r\n            params: [\r\n                {\r\n                    eth_accounts: {},\r\n                },\r\n            ],\r\n        });\r\n        dispatch({type: ACTIONS.RESETAUTH});\r\n    };\r\n\r\n    const handleAccountsChanged = (accounts: string[]) => {\r\n        let myweb3: any = new Web3(window.ethereum);\r\n\r\n        dispatch({\r\n            type: ACTIONS.SET_WALLETS,\r\n            payload: accounts,\r\n        });\r\n\r\n        dispatch({\r\n            type: ACTIONS.SET_PROVIDER,\r\n            payload: myweb3.currentProvider,\r\n        });\r\n    };\r\n\r\n    const handleChainChanged = (chainId: number) => {\r\n        dispatch({\r\n            type: 'SET_CHAIN_ID',\r\n            payload: parseInt(chainId.toString(), 16).toString(),\r\n        });\r\n    };\r\n    const _stup = async () => {\r\n        if (!window.ethereum) {\r\n            return;\r\n        }\r\n        let myweb3: any = new Web3(window.ethereum);\r\n        const accounts = window.ethereum\r\n            .request({\r\n                method: 'eth_accounts',\r\n            })\r\n            .then(handleAccountsChanged)\r\n            .catch((err: any) => console.error(err));\r\n\r\n        window.ethereum.on('accountsChanged', handleAccountsChanged);\r\n\r\n        window.ethereum.on('chainChanged', handleChainChanged);\r\n        dispatch({\r\n            type: 'SET_CHAIN_ID',\r\n            payload: (await myweb3.eth.net.getId()).toString(),\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        let myweb3: any = new Web3(window.ethereum);\r\n        dispatch({\r\n            type: ACTIONS.SET_PROVIDER,\r\n            payload: myweb3.currentProvider,\r\n        });\r\n        _stup();\r\n\r\n        return () => {\r\n            if (window.ethereum.removeListener) {\r\n                window.ethereum.removeListener(\r\n                    'accountsChanged',\r\n                    handleAccountsChanged\r\n                );\r\n                window.ethereum.removeListener(\r\n                    'chainChanged',\r\n                    handleChainChanged\r\n                );\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        requestSwitchNetwork();\r\n    }, []);\r\n    const requestSwitchNetwork = async () => {\r\n        await window.ethereum.request({\r\n            method: 'wallet_switchEthereumChain',\r\n            params: [{chainId: '0x' + (42).toString(16)}],\r\n        });\r\n    };\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        fontSize: '0.75rem',\r\n                        backgroundColor: 'white',\r\n                        color: '#232323',\r\n\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        border: '1px solid black',\r\n                        margin: '0 0.5rem',\r\n                        padding: '0.75rem',\r\n                    }}\r\n                >\r\n                    {candyBalanceLoading ? (\r\n                        <CircularProgress />\r\n                    ) : (\r\n                        <div>{`${\r\n                            state.candyBalance != null\r\n                                ? state.candyBalance\r\n                                : '-null-'\r\n                        } 🍬`}</div>\r\n                    )}\r\n                </div>{' '}\r\n                <div\r\n                    style={{\r\n                        fontSize: '0.75rem',\r\n                        backgroundColor: 'white',\r\n                        color: '#232323',\r\n\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        border: '1px solid black',\r\n                        margin: '0 0.5rem',\r\n                        padding: '0.75rem',\r\n                    }}\r\n                >\r\n                    {state.wallets[0] ? `${balance} Ξ` : null}\r\n                </div>\r\n                {state.wallets[0] ? (\r\n                    <div\r\n                        style={{\r\n                            margin: 0,\r\n                            border: '2px solid white',\r\n                            padding: 0,\r\n                            backgroundColor: 'transparent',\r\n                        }}\r\n                        onClick={onMetamaskConnect}\r\n                    >\r\n                        <div className=\"signin-address\">\r\n                            <p> {minimizeAddress(state.wallets[0])}</p>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        style={{\r\n                            border: '2px solid white',\r\n                            backgroundColor: 'transparent',\r\n                            width: '100%',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            fontWeight: 'bold',\r\n                            margin: '1rem 0',\r\n                            padding: '0.5rem',\r\n                        }}\r\n                        onClick={onMetamaskConnect}\r\n                        className=\"btn\"\r\n                    >\r\n                        {'CONNECT'}\r\n                        <Image\r\n                            alt=\"wallet\"\r\n                            src={MetamaskIcon}\r\n                            height=\"32\"\r\n                            width=\"32\"\r\n                        />\r\n                    </div>\r\n                )}\r\n                <div\r\n                    style={{\r\n                        fontSize: '0.75rem',\r\n                        backgroundColor: 'white',\r\n                        color: '#232323',\r\n\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'center',\r\n                        border: '1px solid black',\r\n                        margin: '0 0.5rem',\r\n                        padding: '0.75rem',\r\n                    }}\r\n                >\r\n                    {getNetworkName(state.chain_id)}\r\n                    {getNetworkName(state.chain_id) != 'Kovan' ? (\r\n                        <p style={{color: 'crimson'}}>\r\n                            {'\\n WRONG NETWORK! SWITCH TO KOVAN'}\r\n                        </p>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WalletComponent;\r\n","import {ethers} from 'ethers';\r\nimport React from 'react';\r\n\r\nconst useGetCandyAllowance = (\r\n    contract?: any,\r\n    owner?: string,\r\n    spender?: string\r\n): [number | null, boolean, any] => {\r\n    const [allowance, setallowance] = React.useState<number | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>(null);\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setallowance(null);\r\n        if (!contract || !owner || !spender) {\r\n            return;\r\n        }\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .allowance(owner, spender)\r\n                .call()\r\n                .then((result) => {\r\n                    setallowance(Number(ethers.utils.formatEther(result)));\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setallowance(null);\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setallowance(null);\r\n        }\r\n    }, [contract, spender, owner]);\r\n    return [allowance, loading, err];\r\n};\r\nconst useGetCandyBalance = (\r\n    contract?: any,\r\n    owner?: string,\r\n    trigger = false\r\n): [number | null, boolean, any] => {\r\n    const [balance, setbalance] = React.useState<number | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>(null);\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setbalance(null);\r\n        if (!contract || !owner) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .balanceOf(owner)\r\n                .call()\r\n                .then((result) => {\r\n                    setbalance(Number(ethers.utils.formatEther(result)));\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setbalance(null);\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setbalance(null);\r\n        }\r\n    }, [contract, owner, trigger]);\r\n    return [balance, loading, err];\r\n};\r\n\r\nexport {useGetCandyAllowance, useGetCandyBalance};\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Image from './Image.component';\r\nimport MoonshotBotIcon from '../assets/images/bot00.png';\r\nimport WalletComponent from './Wallet.component';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n            backgroundColor: 'transparent',\r\n            boxShadow: 'none',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n        },\r\n        bigtitle: {\r\n            fontWeight: 'bold',\r\n            fontFamily: 'Bazar',\r\n        },\r\n    })\r\n);\r\nconst Statusbar = ({}) => {\r\n    const styles = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className={styles.container}>\r\n            <Toolbar\r\n                variant=\"dense\"\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    flex: 1,\r\n                    marginLeft: '10rem',\r\n                }}\r\n            >\r\n                <a href=\"/\">\r\n                    <Image\r\n                        src={MoonshotBotIcon}\r\n                        alt=\"Daomart logo\"\r\n                        width={100}\r\n                        height={100}\r\n                    />\r\n                </a>\r\n                <a href=\"/\">\r\n                    <Typography\r\n                        variant=\"h1\"\r\n                        color=\"textPrimary\"\r\n                        className={styles.bigtitle}\r\n                    >\r\n                        DAOMART\r\n                    </Typography>\r\n                </a>\r\n            </Toolbar>\r\n            <Container\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <WalletComponent />\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Statusbar;\r\n","export default __webpack_public_path__ + \"static/media/heart.ccea4679.png\";","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport HeartIcon from '../assets/images/heart.png';\r\nimport Image from './Image.component';\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n            backgroundColor: 'transparent',\r\n            boxShadow: 'none',\r\n            borderTop: `1px solid ${theme.palette.primary.dark}`,\r\n            borderBottom: `1px solid ${theme.palette.primary.dark}`,\r\n        },\r\n        link: {\r\n            padding: '0 1.5rem',\r\n            borderRight: `1px solid ${theme.palette.primary.dark}`,\r\n            borderLeft: `1px solid ${theme.palette.primary.dark}`,\r\n            cursor: 'pointer',\r\n            '&:hover': {\r\n                position: 'relative',\r\n                top: '1px',\r\n            },\r\n            fontFamily: 'DeterminationMonoWebRegular',\r\n            fontSize: '1.5rem',\r\n            display: 'flex',\r\n        },\r\n        navbar: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n        },\r\n    })\r\n);\r\n\r\nconst Navbar = ({}) => {\r\n    const styles = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className={styles.container}>\r\n            <Toolbar variant=\"dense\" className={styles.navbar}>\r\n                <NavLink to=\"/\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"textPrimary\"\r\n                        className={styles.link}\r\n                    >\r\n                        STORE\r\n                    </Typography>\r\n                </NavLink>\r\n                <NavLink to=\"/\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"textPrimary\"\r\n                        className={styles.link}\r\n                    >\r\n                        ARCHIVE\r\n                    </Typography>\r\n                </NavLink>\r\n                <NavLink to=\"/\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"textPrimary\"\r\n                        className={styles.link}\r\n                    >\r\n                        COLLECTION\r\n                    </Typography>\r\n                </NavLink>\r\n                <NavLink to=\"/about\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"textPrimary\"\r\n                        className={styles.link}\r\n                    >\r\n                        ABOUT\r\n                    </Typography>\r\n                </NavLink>\r\n                <NavLink to=\"/claim\">\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        color=\"textPrimary\"\r\n                        className={styles.link}\r\n                    >\r\n                        <Image\r\n                            src={HeartIcon}\r\n                            height=\"24\"\r\n                            width=\"24\"\r\n                            object-fit={'contain'}\r\n                            alt=\"DAOMART CLAIM REWARD\"\r\n                        />\r\n                        CLAIM!\r\n                    </Typography>\r\n                </NavLink>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/box.3e45b668.png\";","import React from 'react';\r\nimport {Button, Container} from '@material-ui/core';\r\nimport Image from '../../components/Image.component';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {orange} from '@material-ui/core/colors';\r\nimport {useHistory} from 'react-router-dom';\r\nimport BoxPhoto from '../../assets/images/box.png';\r\nexport const QuadraticLootCard = ({}) => {\r\n    const router = useHistory();\r\n\r\n    const navigate = () => {\r\n        router.push('/shop/quadratic-loot');\r\n    };\r\n    return (\r\n        <div className=\"embla__slide\" style={{}}>\r\n            <Container\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    margin: '2rem 0',\r\n                    height: '30rem',\r\n                }}\r\n            >\r\n                <Container\r\n                    style={{\r\n                        width: '20rem',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        padding: 0,\r\n                        height: '30rem',\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            width: '100%',\r\n                            position: 'relative',\r\n                            height: '100%',\r\n                        }}\r\n                    >\r\n                        <Image\r\n                            src={BoxPhoto}\r\n                            alt=\"DAOMART CLAIM REWARD\"\r\n                            className=\"picture-frame\"\r\n                        />\r\n                    </div>\r\n                </Container>\r\n                <Container\r\n                    style={{\r\n                        flex: 1,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        height: '30rem',\r\n                    }}\r\n                >\r\n                    <Container\r\n                        style={{\r\n                            width: '100%',\r\n                            padding: 0,\r\n                        }}\r\n                    >\r\n                        <Typography\r\n                            variant={'h3'}\r\n                            style={{\r\n                                fontFamily: 'Franchise',\r\n                                fontSize: '1rem',\r\n                                textShadow: '1px 1px 3px black',\r\n                            }}\r\n                        >\r\n                            {`Quadratic Loot Box`}\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                            style={{\r\n                                fontFamily: 'AmericanCaptain',\r\n                                color: orange[300],\r\n                                fontSize: '5rem',\r\n                                textShadow: '1px 3px 3px black',\r\n                            }}\r\n                        >\r\n                            {'Quadratic Loot #1'}\r\n                        </Typography>\r\n                    </Container>\r\n                    <Typography\r\n                        style={{\r\n                            fontFamily: 'MarketDeco',\r\n                        }}\r\n                    >\r\n                        {FAKE_DESC}\r\n                    </Typography>\r\n                    <Container\r\n                        style={{\r\n                            width: '100%',\r\n                            padding: 0,\r\n                            margin: '1rem 0',\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'flex-end',\r\n                        }}\r\n                    >\r\n                        <button className=\"sign-btn\" onClick={navigate}>\r\n                            <p>MINT NOW</p>\r\n                        </button>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\nconst FAKE_DESC = `Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\nsed do eiusmod tempor incididunt ut labore et dolore\r\nmagna aliqua. Ut enim ad minim veniam, quis nostrud\r\nexercitation ullamco laboris nisi ut aliquip ex ea\r\ncommodo consequat. Duis aute irure dolor in\r\nreprehenderit in voluptate velit esse cillum dolore eu\r\nfugiat nulla pariatur. Excepteur sint occaecat cupidatat\r\nnon proident, sunt in culpa qui officia deserunt mollit\r\nanim id est laborum.`;\r\n","import Carousel from '../../components/carousel';\r\nimport Container from '@material-ui/core/Container';\r\nimport {blueGrey, deepOrange, orange} from '@material-ui/core/colors';\r\nimport {Button} from '@material-ui/core';\r\nimport Image from '../../components/Image.component';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {GitcoinContext} from '../../store';\r\nimport React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useGetProducts} from '../../hooks/Shop.hook';\r\nimport {QuadraticLootCard} from './q-loot.card';\r\nconst Shop = () => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n\r\n    const [products] = useGetProducts(state.token);\r\n\r\n    return (\r\n        <Container>\r\n            <Container style={{padding: '1rem 0'}}>\r\n                {/* <Carousel products={products} /> */}\r\n                <QuadraticLootCard />\r\n            </Container>\r\n\r\n            <Container style={{padding: '1rem 0'}}>\r\n                <div\r\n                    style={{\r\n                        margin: '2rem 0',\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-around',\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            width: '15rem',\r\n                            height: '15rem',\r\n                            position: 'relative',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                fontFamily: 'AmericanCaptain',\r\n                                color: blueGrey[200],\r\n                                fontSize: '5rem',\r\n                                textShadow: '3px 1px 5px black',\r\n                            }}\r\n                        >\r\n                            KUDOS\r\n                        </p>\r\n                        <div\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                left: 0,\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                border: '1rem solid ' + blueGrey[300],\r\n                                transform: 'rotate(45deg)',\r\n                                boxShadow: ' inset  0 0 8px 2px black',\r\n                            }}\r\n                        ></div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: '15rem',\r\n                            height: '15rem',\r\n                            position: 'relative',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                fontFamily: 'AmericanCaptain',\r\n                                color: deepOrange[300],\r\n                                fontSize: '5rem',\r\n                                textShadow: '3px 1px 5px black',\r\n                            }}\r\n                        >\r\n                            {' '}\r\n                            MERCH\r\n                        </p>\r\n                        <div\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                left: 0,\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                border: '1rem solid ' + deepOrange.A100,\r\n                                transform: 'rotate(45deg)',\r\n                                boxShadow: ' inset  0 0 8px 2px black',\r\n                            }}\r\n                        ></div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: '15rem',\r\n                            height: '15rem',\r\n                            position: 'relative',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <p\r\n                            style={{\r\n                                fontFamily: 'AmericanCaptain',\r\n                                color: orange[300],\r\n                                fontSize: '5rem',\r\n                                textShadow: '3px 1px 5px black',\r\n                            }}\r\n                        >\r\n                            NFT\r\n                        </p>\r\n                        <div\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                left: 0,\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                border: '1rem solid ' + orange.A200,\r\n                                transform: 'rotate(45deg)',\r\n                                boxShadow: ' inset  0 0 8px 2px black',\r\n                            }}\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n\r\n            <Container\r\n                style={{\r\n                    padding: '1rem 0',\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    margin: '2rem 0 ',\r\n                    flexWrap: 'wrap',\r\n                }}\r\n            >\r\n                {(products || []).map((p) => (\r\n                    <ProductCard item={p} key={p.product_id} />\r\n                ))}\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Shop;\r\n\r\nconst ProductCard = ({item}) => {\r\n    const c = [\r\n        deepOrange[300],\r\n        blueGrey[200],\r\n        orange[500],\r\n        blueGrey[700],\r\n        orange.A400,\r\n        deepOrange.A400,\r\n    ][Math.floor(Math.random() * 3)];\r\n\r\n    const router = useHistory();\r\n\r\n    const navigate = (path) => {\r\n        router.push(path);\r\n    };\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                margin: ' 0.5rem ',\r\n                border: '1px solid black',\r\n            }}\r\n        >\r\n            <Container\r\n                style={{\r\n                    width: '20rem',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    padding: 0,\r\n                }}\r\n            >\r\n                <Container\r\n                    style={{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        borderBottom: '1px solid black',\r\n                        height: '10rem',\r\n                        margin: 0,\r\n                        backgroundColor: c,\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            width: '100%',\r\n                            position: 'relative',\r\n                            height: '100%',\r\n\r\n                            padding: 8,\r\n                        }}\r\n                        className=\"img-container\"\r\n                    >\r\n                        <Image\r\n                            src={item.avatar || DEFAUL_PHOTO}\r\n                            object-fit={'contain'}\r\n                            alt=\"DAOMART CLAIM REWARD\"\r\n                            className=\"picture-frame\"\r\n                        />\r\n                    </div>\r\n                </Container>\r\n\r\n                <Container\r\n                    style={{\r\n                        width: '100%',\r\n                        padding: 0,\r\n                        margin: '1rem 0',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                    }}\r\n                >\r\n                    <Container\r\n                        style={{\r\n                            padding: 8,\r\n                        }}\r\n                    >\r\n                        <Typography\r\n                            variant={'h6'}\r\n                            style={{\r\n                                fontFamily: 'Roboto',\r\n                                textShadow: '1px 1px 3px black',\r\n                                fontWeight: 'bold',\r\n                            }}\r\n                        >\r\n                            {item.name}\r\n                        </Typography>\r\n                        <Typography\r\n                            style={{\r\n                                fontFamily: 'Roboto',\r\n                                fontSize: '0.75rem',\r\n                                textShadow: '1px 1px 3px black',\r\n                            }}\r\n                        >\r\n                            {`${item.category} (${item.type})`}\r\n                        </Typography>\r\n                    </Container>\r\n                    <Button\r\n                        style={{\r\n                            alignSelf: 'flex-end',\r\n\r\n                            border: '2px solid rgba(40,40,40,.75)',\r\n                            color: 'rgba(40,40,40,1)',\r\n                            borderRadius: 0,\r\n                            fontWeight: 'bolder',\r\n                            fontFamily: 'Bazar',\r\n                            fontSize: '1rem',\r\n\r\n                            margin: '0 1rem',\r\n                        }}\r\n                        onClick={() =>\r\n                            navigate('/shop/product/' + item.product_id)\r\n                        }\r\n                    >\r\n                        BUY\r\n                    </Button>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DEFAUL_PHOTO =\r\n    'https://cdn.shopify.com/s/files/1/0258/8924/3182/products/CheetahhoodieFront_1800x1800.png?v=1628875358';\r\n","import React from 'react';\r\nimport {GetProducts, GetProduct, GetProductCategories} from '../network/api';\r\n\r\nconst useGetProducts = (token?: string): [Product[], boolean, any] => {\r\n    const [products, setproducts] = React.useState<Product[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setproducts([]);\r\n        GetProducts(token)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setproducts(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setproducts([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setproducts([]);\r\n            });\r\n    }, [token]);\r\n    return [products, loading, err];\r\n};\r\nconst useGetProduct = (\r\n    token?: string,\r\n    pid?: string\r\n): [Product | null, boolean, any] => {\r\n    const [products, setproducts] = React.useState<Product | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setproducts(null);\r\n        if (!token) {\r\n            return;\r\n        }\r\n        if (!pid) {\r\n            return;\r\n        }\r\n        GetProduct(token, pid)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setproducts(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setproducts(null);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setproducts(null);\r\n            });\r\n    }, [token]);\r\n    return [products, loading, err];\r\n};\r\nconst useGetProductCategories = (\r\n    token?: string\r\n): [ProductCategory[], boolean, any] => {\r\n    const [productcat, setproductcat] = React.useState<ProductCategory[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setproductcat([]);\r\n        GetProductCategories(token)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setproductcat(result.data.data);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                } else {\r\n                    setloading(false);\r\n                    seterr('Uknow Error');\r\n                    setproductcat([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                seterr(err);\r\n                setproductcat([]);\r\n            });\r\n    }, [token]);\r\n    return [productcat, loading, err];\r\n};\r\n\r\nexport {useGetProducts, useGetProduct, useGetProductCategories};\r\n","import {ethers} from 'ethers';\r\nimport React from 'react';\r\n\r\ndeclare const window: any;\r\n\r\nconst useGetAllProducts = (contract: any): [string[], boolean, any] => {\r\n    const [projects, setprojects] = React.useState<string[]>([]);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>(null);\r\n    React.useMemo(async () => {\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        setprojects([]);\r\n\r\n        try {\r\n            contract.methods\r\n                .getAllProducts()\r\n                .call()\r\n                .then((result) => {\r\n                    setprojects(result);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setprojects([]);\r\n                });\r\n        } catch (err) {\r\n            console.log('err1121', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setprojects([]);\r\n        }\r\n    }, [contract]);\r\n    return [projects, loading, err];\r\n};\r\n\r\nconst useGetXByIndex = (\r\n    contract: any,\r\n    id?: string,\r\n    trigger = false\r\n): [string, boolean, any] => {\r\n    const [currentX, setcurrentX] = React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setloading(false);\r\n        seterr(null);\r\n        setcurrentX('');\r\n\r\n        try {\r\n            contract.methods\r\n                .currentX(id)\r\n                .call()\r\n                .then((result) => {\r\n                    setcurrentX(result);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setcurrentX('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setcurrentX('');\r\n        }\r\n    }, [contract, id, trigger]);\r\n    return [currentX, loading, err];\r\n};\r\nconst useGetCoefForId = (\r\n    contract: any,\r\n    id?: string,\r\n    trigger = false\r\n): [string, boolean, any] => {\r\n    const [coef, setcoef] = React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setloading(false);\r\n        seterr(null);\r\n        setcoef('');\r\n\r\n        try {\r\n            contract.methods\r\n                .coefficients(id)\r\n                .call()\r\n                .then((result) => {\r\n                    setcoef(result);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setcoef('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setcoef('');\r\n        }\r\n    }, [contract, id, trigger]);\r\n    return [coef, loading, err];\r\n};\r\nconst useGetQuantityForId = (\r\n    contract: any,\r\n    id?: string,\r\n    trigger = false\r\n): [string, boolean, any] => {\r\n    const [coef, setcoef] = React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n\r\n        if (!id) {\r\n            return;\r\n        }\r\n\r\n        setloading(false);\r\n        seterr(null);\r\n        setcoef('');\r\n\r\n        try {\r\n            contract.methods\r\n                .quantities(id)\r\n                .call()\r\n                .then((result) => {\r\n                    setcoef(result);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setcoef('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setcoef('');\r\n        }\r\n    }, [contract, id, trigger]);\r\n    return [coef, loading, err];\r\n};\r\n\r\nconst useGetEtherAmountForX = (\r\n    contract: any,\r\n    x?: string,\r\n    coef?: string,\r\n    trigger = false\r\n): [string, boolean, any] => {\r\n    const [currentPriceChange, setcurrentPriceChange] =\r\n        React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setcurrentPriceChange('');\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n\r\n        if (!x) {\r\n            return;\r\n        }\r\n        if (!coef) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .getEtherAmountForX(x, coef)\r\n                .call()\r\n                .then((result) => {\r\n                    setcurrentPriceChange(\r\n                        ethers.utils.formatEther(result).toString()\r\n                    );\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setcurrentPriceChange('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setcurrentPriceChange('');\r\n        }\r\n    }, [contract, x, coef, trigger]);\r\n    return [currentPriceChange, loading, err];\r\n};\r\nconst useGetCandyAmountForX = (\r\n    contract: any,\r\n    x?: string,\r\n    coef?: string,\r\n    trigger = false\r\n): [string, boolean, any] => {\r\n    const [currentPriceChange, setcurrentPriceChange] =\r\n        React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setcurrentPriceChange('');\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n\r\n        if (!x) {\r\n            return;\r\n        }\r\n        if (!coef) {\r\n            return;\r\n        }\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .getCandyAmountForX(x, coef)\r\n                .call()\r\n                .then((result) => {\r\n                    setcurrentPriceChange(\r\n                        ethers.utils.formatEther(result).toString()\r\n                    );\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setcurrentPriceChange('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setcurrentPriceChange('');\r\n        }\r\n    }, [contract, x, coef, trigger]);\r\n    return [currentPriceChange, loading, err];\r\n};\r\n\r\nconst useGetPriceChangeForPrice = (\r\n    contract?: any,\r\n    initAmount?: string,\r\n    coef?: string,\r\n    trigger = false\r\n): [string, boolean, any] => {\r\n    const [amount, setamount] = React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n        if (!initAmount) {\r\n            return;\r\n        }\r\n        if (!coef) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        setamount('');\r\n\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .getPriceChangeForPrice(initAmount, coef)\r\n                .call()\r\n                .then((result) => {\r\n                    console.log('result', result);\r\n                    setamount(ethers.utils.formatEther(result).toString());\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setamount('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setamount('');\r\n        }\r\n    }, [contract, initAmount, coef, trigger]);\r\n    return [amount, loading, err];\r\n};\r\n\r\nconst useGetInterestPerBlock = (\r\n    contract?: any,\r\n    initAmount?: any\r\n): [string, boolean, any] => {\r\n    const [amount, setamount] = React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n        if (!initAmount) {\r\n            return;\r\n        }\r\n\r\n        setloading(false);\r\n        seterr(null);\r\n        setamount('');\r\n\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .getInterestPerBlock(initAmount)\r\n                .call()\r\n                .then((result) => {\r\n                    setamount(ethers.utils.formatEther(result).toString());\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setamount('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setamount('');\r\n        }\r\n    }, [contract, initAmount]);\r\n    return [amount, loading, err];\r\n};\r\n\r\nconst useGetCurrentPaid = (\r\n    contract?: any,\r\n    id?: string,\r\n    addr?: string,\r\n    trigger = false\r\n): [string, boolean, any] => {\r\n    const [amount, setamount] = React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n        if (!id || !addr) {\r\n            return;\r\n        }\r\n\r\n        setloading(false);\r\n        seterr(null);\r\n        setamount('');\r\n\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .amountPaid(id, addr)\r\n                .call()\r\n                .then((result) => {\r\n                    setamount(ethers.utils.formatEther(result).toString());\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setamount('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setamount('');\r\n        }\r\n    }, [contract, id, addr, trigger]);\r\n    return [amount, loading, err];\r\n};\r\n\r\nconst useGetCurrentStreak = (\r\n    contract?: any,\r\n    id?: string,\r\n    addr?: string,\r\n    trigger = false\r\n): [string, boolean, any] => {\r\n    const [streak, setstreak] = React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n        if (!id || !addr) {\r\n            return;\r\n        }\r\n\r\n        setloading(false);\r\n        seterr(null);\r\n        setstreak('');\r\n\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .currentStreaks(id, addr)\r\n                .call()\r\n                .then((result) => {\r\n                    setstreak(result);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setstreak('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setstreak('');\r\n        }\r\n    }, [contract, id, addr, trigger]);\r\n    return [streak, loading, err];\r\n};\r\n\r\nconst useGetLastPaidBlock = (\r\n    contract?: any,\r\n    id?: string,\r\n    addr?: string,\r\n    trigger = false\r\n): [string, boolean, any] => {\r\n    const [lastBlockPaid, setlastBlockPaid] = React.useState<string>('');\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setlastBlockPaid('');\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n        if (!id || !addr) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .lastPaidBlock(id, addr)\r\n                .call()\r\n                .then((result) => {\r\n                    setlastBlockPaid(result);\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setlastBlockPaid('');\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setlastBlockPaid('');\r\n        }\r\n    }, [contract, id, addr, trigger]);\r\n    return [lastBlockPaid, loading, err];\r\n};\r\nconst useGetMinMaxStreakInterval = (\r\n    contract?: any\r\n): [{min: number; max: number} | null, boolean, any] => {\r\n    const [minMaxInterval, setminMaxInterval] = React.useState<{\r\n        min: number;\r\n        max: number;\r\n    } | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setminMaxInterval(null);\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setloading(true);\r\n            Promise.all([\r\n                contract.methods.streakMinInterval().call(),\r\n                contract.methods.streakMaxInterval().call(),\r\n            ])\r\n                .then(([minInterval, maxInterval]) => {\r\n                    setminMaxInterval({\r\n                        min: Number(minInterval),\r\n                        max: Number(maxInterval),\r\n                    });\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setminMaxInterval(null);\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setminMaxInterval(null);\r\n        }\r\n    }, [contract]);\r\n    return [minMaxInterval, loading, err];\r\n};\r\nconst useGetCompoundingInterest = (\r\n    contract?: any,\r\n    startingBlock?: number,\r\n    endingBlock?: number,\r\n    amount?: number,\r\n    streak?: number,\r\n    coef?: string\r\n): [string | null, boolean, any] => {\r\n    const [interest, setinterest] = React.useState<string | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>('');\r\n\r\n    React.useMemo(async () => {\r\n        setloading(false);\r\n        seterr(null);\r\n        setinterest(null);\r\n        if (!contract || !contract.methods) {\r\n            return;\r\n        }\r\n        if (!startingBlock || !endingBlock || !amount || !streak || !coef) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setloading(true);\r\n            contract.methods\r\n                .getCompoundingInterest(\r\n                    startingBlock,\r\n                    endingBlock,\r\n                    ethers.utils.parseEther(amount.toString()),\r\n                    streak,\r\n                    coef\r\n                )\r\n                .call()\r\n\r\n                .then((result) => {\r\n                    setinterest(ethers.utils.formatEther(result));\r\n                    setloading(false);\r\n                    seterr(null);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    setinterest(null);\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            setinterest(null);\r\n        }\r\n    }, [contract, startingBlock, endingBlock, amount, streak]);\r\n    return [interest, loading, err];\r\n};\r\n\r\nexport {\r\n    useGetXByIndex,\r\n    useGetCoefForId,\r\n    useGetQuantityForId,\r\n    useGetAllProducts,\r\n    useGetEtherAmountForX,\r\n    useGetCandyAmountForX,\r\n    useGetPriceChangeForPrice,\r\n    useGetInterestPerBlock,\r\n    useGetCurrentPaid,\r\n    useGetCurrentStreak,\r\n    useGetLastPaidBlock,\r\n    useGetMinMaxStreakInterval,\r\n    useGetCompoundingInterest,\r\n};\r\n","import {useHistory, useParams} from 'react-router-dom';\r\n\r\nimport {Button, Container, Paper} from '@material-ui/core';\r\nimport React from 'react';\r\nimport Image from '../../components/Image.component';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {orange} from '@material-ui/core/colors';\r\nimport Input from '@material-ui/core/Input';\r\nimport {GitcoinContext} from '../../store';\r\nimport {formatEther, parseEther} from 'ethers/lib/utils';\r\nimport {useGetProduct} from '../../hooks/Shop.hook';\r\nimport {\r\n    useGetXByIndex,\r\n    useGetEtherAmountForX,\r\n    useGetCandyAmountForX,\r\n    useGetAllProducts,\r\n    useGetInterestPerBlock,\r\n    useGetCurrentPaid,\r\n    useGetCurrentStreak,\r\n    useGetLastPaidBlock,\r\n    useGetMinMaxStreakInterval,\r\n    useGetCompoundingInterest,\r\n    useGetCoefForId,\r\n    useGetQuantityForId,\r\n} from '../../hooks/ProductContract';\r\nimport {\r\n    useGetProductContract,\r\n    useGetTokenContract,\r\n    useGetTokenContractMeta,\r\n} from '../../hooks/Contract.hook';\r\nimport {BigNumber, ethers} from 'ethers';\r\nimport {useGetCandyAllowance} from '../../hooks/Candy.hook';\r\nimport {ACTIONS} from '../../store/actions';\r\nimport {useGetBlockNumber} from '../../hooks/Balance';\r\nimport {MakeOrder, UpdateOrderStatus} from '../../network/api';\r\ndeclare const window: any;\r\n\r\nconst DEFAUL_PHOTO =\r\n    'https://cdn.shopify.com/s/files/1/0258/8924/3182/products/CheetahhoodieFront_1800x1800.png?v=1628875358';\r\n\r\nconst ProductPage = () => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const [amountBitByBit, setamountBitByBit] = React.useState(0);\r\n\r\n    const [amountBitByBitLoading, setamountBitByBitLoading] =\r\n        React.useState(false);\r\n    const [buyEtherLoading, setBuyEtherLoading] = React.useState(false);\r\n    const [buyCandyLoading, setBuyCandyLoading] = React.useState(false);\r\n    const {pid} = useParams();\r\n    ///\r\n    const [blockNumber, blockNumberLoading] = useGetBlockNumber();\r\n    //\r\n    const [product, loading, err] = useGetProduct(state.token, pid);\r\n    const [contract] = useGetProductContract(product?.contract);\r\n    const [products] = useGetAllProducts(contract);\r\n    const pId = products[product?.code || -1];\r\n\r\n    ///\r\n    const refreshTrigger = buyCandyLoading || buyEtherLoading;\r\n    const [currentX] = useGetXByIndex(contract, pId, refreshTrigger);\r\n    const [currentCoef] = useGetCoefForId(contract, pId, refreshTrigger);\r\n    const [currentQuantity] = useGetQuantityForId(\r\n        contract,\r\n        pId,\r\n        refreshTrigger\r\n    );\r\n    const [ethPrice, etherPericeChangeLoading] = useGetEtherAmountForX(\r\n        contract,\r\n        currentX,\r\n        currentCoef,\r\n        refreshTrigger\r\n    );\r\n    const [candyPrice, candyPriceLoading] = useGetCandyAmountForX(\r\n        contract,\r\n        currentX,\r\n        currentCoef,\r\n        refreshTrigger\r\n    );\r\n\r\n    // bit by bit\r\n    const [interestForAmount, interestForAmountLoading] =\r\n        useGetInterestPerBlock(\r\n            contract,\r\n            amountBitByBit > 0\r\n                ? ethers.utils.parseEther(amountBitByBit.toString()).toString()\r\n                : null\r\n        );\r\n\r\n    const [currentPaid, currentPaidLoading] = useGetCurrentPaid(\r\n        contract,\r\n        pId,\r\n        state.wallets[0],\r\n        amountBitByBitLoading\r\n    );\r\n\r\n    const [interestForPaidAmount, interestForPaidAmountLoading] =\r\n        useGetInterestPerBlock(\r\n            contract,\r\n            Number(currentPaid) > 0\r\n                ? ethers.utils.parseEther(currentPaid).toString()\r\n                : null\r\n        );\r\n\r\n    const [currentStreak, currentStreakLoading] = useGetCurrentStreak(\r\n        contract,\r\n        pId,\r\n        state.wallets[0],\r\n        amountBitByBitLoading\r\n    );\r\n    const [lastPaidBlock, lastPaidBlockLoading] = useGetLastPaidBlock(\r\n        contract,\r\n        pId,\r\n        state.wallets[0],\r\n        amountBitByBitLoading\r\n    );\r\n    const [minMaxInterval, minMaxIntervalLoading] =\r\n        useGetMinMaxStreakInterval(contract);\r\n\r\n    const [compoundingInterest, compoundingInterestLoading] =\r\n        useGetCompoundingInterest(\r\n            contract,\r\n            Number(lastPaidBlock),\r\n            Number(blockNumber),\r\n            Number(currentPaid),\r\n            Number(currentStreak),\r\n            currentCoef\r\n        );\r\n\r\n    ///\r\n\r\n    /// Candy stuff\r\n    const [contractMeta] = useGetTokenContractMeta(state.token, state.chain_id);\r\n    const [candyContract] = useGetTokenContract(contractMeta);\r\n    const [candyAllowance, candyAllowanceLoading] = useGetCandyAllowance(\r\n        candyContract,\r\n        state.wallets[0],\r\n        contract._address\r\n    );\r\n\r\n    const buyWithEther = async () => {\r\n        try {\r\n            const order = await onNewOrder('Full');\r\n            dispatch({type: ACTIONS.AUTHCHECK});\r\n            setBuyEtherLoading(true);\r\n            contract.methods\r\n                .requestMintWithEth(pId, state.wallets[0])\r\n                .send({\r\n                    value: ethers.utils.parseEther(ethPrice),\r\n                    from: state.wallets[0],\r\n                })\r\n                .then((res) => {\r\n                    onUpdateOrderStatus(order?.order_id, 'paid');\r\n                    setBuyEtherLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    setBuyEtherLoading(false);\r\n                    console.log('err', err);\r\n                });\r\n        } catch (err) {\r\n            setBuyEtherLoading(false);\r\n            console.log('err', err);\r\n        }\r\n    };\r\n    const buyWithCandy = async () => {\r\n        try {\r\n            const order = await onNewOrder('Full');\r\n            dispatch({type: ACTIONS.AUTHCHECK});\r\n            if (candyAllowanceLoading || candyAllowance == null) {\r\n                return;\r\n            }\r\n\r\n            const price = ethers.utils.parseEther(candyPrice);\r\n\r\n            const parsedAllowence = ethers.utils.parseEther(\r\n                candyAllowance > 1e-2 ? candyAllowance.toString() : '0'\r\n            );\r\n            if (price.gt(parsedAllowence)) {\r\n                setBuyCandyLoading(true);\r\n                await candyContract.methods\r\n                    .approve(contract._address, price)\r\n                    .send({from: state.wallets[0]});\r\n                setBuyCandyLoading(false);\r\n            }\r\n            setBuyCandyLoading(true);\r\n            contract.methods\r\n                .requestMintWithCandy(pId, state.wallets[0], price)\r\n                .send({\r\n                    from: state.wallets[0],\r\n                })\r\n                .then((res) => {\r\n                    onUpdateOrderStatus(order?.order_id, 'paid');\r\n                    dispatch({type: ACTIONS.TRIGGER_CANDY_BALANCE});\r\n                    setBuyCandyLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    setBuyCandyLoading(false);\r\n                    console.log('err', err);\r\n                });\r\n        } catch (err) {\r\n            setBuyCandyLoading(false);\r\n            console.log('err', err);\r\n        }\r\n    };\r\n\r\n    const startPayBitByBit = async () => {\r\n        try {\r\n            dispatch({type: ACTIONS.AUTHCHECK});\r\n            if (\r\n                currentStreakLoading ||\r\n                candyAllowanceLoading ||\r\n                candyAllowance == null ||\r\n                amountBitByBit < 1\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            const price = ethers.utils.parseEther(amountBitByBit.toString());\r\n\r\n            const parsedAllowence = ethers.utils.parseEther(\r\n                candyAllowance.toString()\r\n            );\r\n            if (price.gt(parsedAllowence)) {\r\n                setamountBitByBitLoading(true);\r\n                await candyContract.methods\r\n                    .approve(contract._address, price)\r\n                    .send({from: state.wallets[0]});\r\n                setamountBitByBitLoading(false);\r\n            }\r\n            setamountBitByBitLoading(true);\r\n\r\n            if (Number(currentStreak) > 0) {\r\n                contract.methods\r\n                    .payABit(pId, price)\r\n                    .send({\r\n                        from: state.wallets[0],\r\n                    })\r\n                    .then((res) => {\r\n                        dispatch({type: ACTIONS.TRIGGER_CANDY_BALANCE});\r\n                        setamountBitByBitLoading(false);\r\n                    })\r\n                    .catch((err) => {\r\n                        setamountBitByBitLoading(false);\r\n                        console.log('err', err);\r\n                    });\r\n            } else {\r\n                const order = await onNewOrder('BitByBit');\r\n                contract.methods\r\n                    .buyBitByBit(pId, price)\r\n                    .send({\r\n                        from: state.wallets[0],\r\n                    })\r\n                    .then((res) => {\r\n                        dispatch({type: ACTIONS.TRIGGER_CANDY_BALANCE});\r\n                        setamountBitByBitLoading(false);\r\n                    })\r\n                    .catch((err) => {\r\n                        setamountBitByBitLoading(false);\r\n                        console.log('err', err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            setamountBitByBitLoading(false);\r\n            console.log('err', err);\r\n        }\r\n    };\r\n\r\n    const onNewOrder = (type: string = 'Full'): Promise<any> => {\r\n        return new Promise((resolve, reject) => {\r\n            if (!product) {\r\n                return;\r\n            }\r\n            MakeOrder(state.token, {item: product.product_id, type: type})\r\n                .then((result) => {\r\n                    if (result.data && result.data.success) {\r\n                        resolve(result.data.data);\r\n                    } else {\r\n                        resolve(null);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    resolve(null);\r\n                    console.log('err', err);\r\n                });\r\n        });\r\n    };\r\n    const onUpdateOrderStatus = (order_id?: string, status?: string) => {\r\n        if (!order_id) {\r\n            return;\r\n        }\r\n\r\n        UpdateOrderStatus(state.token, {oid: order_id, status: status})\r\n            .then((result) => {\r\n                console.log('updated order', result.data.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log('err', err);\r\n            });\r\n    };\r\n    if (loading) {\r\n        return <p style={{fontSize: '3rem'}}>Loading</p>;\r\n    }\r\n    if (err) {\r\n        return <p style={{fontSize: '3rem'}}>{JSON.stringify(err)}</p>;\r\n    }\r\n    if (!product) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Container\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                margin: '2rem 0',\r\n                height: '30rem',\r\n            }}\r\n        >\r\n            <Container\r\n                style={{\r\n                    width: '20rem',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    padding: 0,\r\n                    height: '30rem',\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"frame\"\r\n                    style={{\r\n                        width: '100%',\r\n                        position: 'relative',\r\n                        height: '100%',\r\n                    }}\r\n                >\r\n                    {' '}\r\n                    <div\r\n                        className=\"frame-inner\"\r\n                        style={{\r\n                            width: '100%',\r\n                            position: 'relative',\r\n                            height: '100%',\r\n                        }}\r\n                    >\r\n                        <Image\r\n                            src={product.avatar || DEFAUL_PHOTO}\r\n                            object-fit={'contain'}\r\n                            alt=\"DAOMART CLAIM REWARD\"\r\n                            layout=\"fill\"\r\n                            className=\"picture-frame\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n            <Container\r\n                style={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: '30rem',\r\n                }}\r\n            >\r\n                <Container\r\n                    style={{\r\n                        width: '100%',\r\n                        padding: 0,\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        style={{\r\n                            fontFamily: 'AmericanCaptain',\r\n                            color: orange[300],\r\n                            fontSize: '2rem',\r\n                            textShadow: '1px 1px 3px black',\r\n                            margin: 4,\r\n                        }}\r\n                    >\r\n                        {`${product.category} (${product.type})`}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                        variant={'h3'}\r\n                        style={{\r\n                            fontFamily: 'Franchise',\r\n                            fontSize: '5rem',\r\n                            textShadow: '1px 1px 3px black',\r\n                        }}\r\n                    >\r\n                        {product.name}\r\n                    </Typography>\r\n                </Container>\r\n                <Typography\r\n                    style={{\r\n                        fontFamily: 'MarketDeco',\r\n                    }}\r\n                >\r\n                    {product.description || product.description.length < 10\r\n                        ? FAKE_DESC\r\n                        : product.description}\r\n                </Typography>\r\n                <Container\r\n                    style={{\r\n                        width: '100%',\r\n                        padding: 0,\r\n                        marginTop: 32,\r\n                        marginBottom: 16,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        justifyContent: 'center',\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        align=\"center\"\r\n                        variant=\"body1\"\r\n                        component=\"h3\"\r\n                        style={{\r\n                            fontWeight: 'bold',\r\n                            width: '100%',\r\n                            borderBottom: '1px solid black',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                        }}\r\n                    >\r\n                        {` BUY IN FULL `}{' '}\r\n                        <span\r\n                            style={{fontSize: '0.75rem', color: '#757575'}}\r\n                        >{` CURRENT X IS ${currentX} AND MAX QUANTITY IS ${currentQuantity} WITH COEF OF ${\r\n                            Number(currentCoef || 0) / 1e3\r\n                        }`}</span>\r\n                    </Typography>\r\n                    <Container\r\n                        style={{\r\n                            width: '100%',\r\n                            padding: 0,\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                    >\r\n                        <div\r\n                            onClick={() => buyWithEther()}\r\n                            style={{\r\n                                flex: 1,\r\n                                border: '2px solid rgba(40,40,40,.75)',\r\n                                color: 'rgba(40,40,40,1)',\r\n                                borderRadius: 0,\r\n                                fontWeight: 'bolder',\r\n\r\n                                fontSize: '1.2rem',\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            <Typography\r\n                                align=\"center\"\r\n                                style={{\r\n                                    backgroundColor: '#ffb74d',\r\n                                    color: 'white',\r\n                                    fontWeight: 'bolder',\r\n                                }}\r\n                            >{` BUY with ETH `}</Typography>\r\n                            <div\r\n                                style={{\r\n                                    flex: 1,\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        color: 'white',\r\n\r\n                                        textShadow: '1px 1px 3px grey',\r\n                                        backgroundColor: 'lightseagreen',\r\n                                        padding: 8,\r\n                                        textAlign: 'center',\r\n                                    }}\r\n                                >\r\n                                    {etherPericeChangeLoading ? (\r\n                                        <CircularProgress\r\n                                            size={25}\r\n                                            color=\"secondary\"\r\n                                        />\r\n                                    ) : (\r\n                                        `Ξ ${ethPrice}`\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    flex: 1,\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        color: '#fff',\r\n                                        fontWeight: 'bold',\r\n                                        textShadow: '1px 2px 2px black',\r\n                                        backgroundColor: 'teal',\r\n                                        padding: 8,\r\n                                        borderTop: '1px solid white',\r\n                                        textAlign: 'center',\r\n                                    }}\r\n                                >\r\n                                    {buyEtherLoading ? (\r\n                                        <CircularProgress />\r\n                                    ) : (\r\n                                        `BUY!`\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            onClick={() => buyWithCandy()}\r\n                            style={{\r\n                                flex: 1,\r\n                                border: '2px solid rgba(40,40,40,.75)',\r\n                                color: 'rgba(40,40,40,1)',\r\n                                borderRadius: 0,\r\n                                fontWeight: 'bolder',\r\n\r\n                                fontSize: '1.2rem',\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            <Typography\r\n                                align=\"center\"\r\n                                style={{\r\n                                    backgroundColor: '#ffb74d',\r\n                                    color: 'white',\r\n                                    fontWeight: 'bolder',\r\n                                }}\r\n                            >{` BUY with CANDY`}</Typography>\r\n                            <div\r\n                                style={{\r\n                                    flex: 1,\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        color: 'white',\r\n\r\n                                        textShadow: '1px 1px 3px grey',\r\n                                        backgroundColor: 'hotpink',\r\n                                        padding: 8,\r\n                                        textAlign: 'center',\r\n                                    }}\r\n                                >\r\n                                    {candyPriceLoading ? (\r\n                                        <CircularProgress\r\n                                            size={25}\r\n                                            color=\"secondary\"\r\n                                        />\r\n                                    ) : (\r\n                                        `🍬 ${candyPrice}`\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    flex: 1,\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        flex: 1,\r\n                                        color: '#fff',\r\n                                        fontWeight: 'bold',\r\n                                        textShadow: '1px 2px 2px black',\r\n                                        backgroundColor: 'crimson',\r\n                                        padding: 8,\r\n                                        borderTop: '1px solid white',\r\n                                        textAlign: 'center',\r\n                                    }}\r\n                                >\r\n                                    {buyCandyLoading ? (\r\n                                        <CircularProgress />\r\n                                    ) : (\r\n                                        `BUY!`\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n\r\n                    <Container\r\n                        style={{\r\n                            width: '100%',\r\n                            padding: 0,\r\n                            marginTop: 32,\r\n                            marginBottom: 16,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                    >\r\n                        <Typography\r\n                            align=\"center\"\r\n                            variant=\"body1\"\r\n                            component=\"h3\"\r\n                            style={{\r\n                                fontWeight: 'bold',\r\n                                width: '100%',\r\n                                borderBottom: '1px solid black',\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                            }}\r\n                        >\r\n                            {` BUY  BIT BY BIT `}\r\n                        </Typography>\r\n\r\n                        <div\r\n                            style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                style={{\r\n                                    flex: 1,\r\n                                    backgroundColor: '#ffb74d',\r\n                                    color: 'white',\r\n                                    padding: '0 1rem',\r\n                                }}\r\n                                value={amountBitByBit}\r\n                                onChange={(e) =>\r\n                                    Number(e.target.value) > 0\r\n                                        ? setamountBitByBit(\r\n                                              Number(e.target.value)\r\n                                          )\r\n                                        : ''\r\n                                }\r\n                            />\r\n\r\n                            <button\r\n                                style={{\r\n                                    textAlign: 'center',\r\n                                    padding: 12,\r\n                                    cursor: 'pointer',\r\n                                    border: '2px solid black',\r\n                                }}\r\n                                onClick={startPayBitByBit}\r\n                            >\r\n                                {amountBitByBitLoading ||\r\n                                currentStreakLoading ? (\r\n                                    <CircularProgress\r\n                                        size={15}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                ) : !currentStreakLoading &&\r\n                                  Number(currentStreak) > 0 ? (\r\n                                    'PAY A BIT'\r\n                                ) : (\r\n                                    ' START PAYING BIT BY BIT'\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <BitByBitInfoRow\r\n                                title=\"Interest for new amount added\"\r\n                                value={\r\n                                    Number(interestForPaidAmount || 0) +\r\n                                    Number(interestForAmount || 0)\r\n                                }\r\n                                loading={\r\n                                    minMaxIntervalLoading ||\r\n                                    interestForPaidAmountLoading\r\n                                }\r\n                            />\r\n                            <BitByBitInfoRow\r\n                                title=\"Min Streak Inteval (block)\"\r\n                                value={minMaxInterval?.min}\r\n                                subvalue={\r\n                                    lastPaidBlock &&\r\n                                    Number(lastPaidBlock) > 0 &&\r\n                                    minMaxInterval\r\n                                        ? Number(lastPaidBlock) +\r\n                                          minMaxInterval.min\r\n                                        : '---'\r\n                                }\r\n                                loading={minMaxIntervalLoading}\r\n                            />\r\n                            <BitByBitInfoRow\r\n                                title=\"Max Streak Inteval (block)\"\r\n                                value={minMaxInterval?.max}\r\n                                subvalue={\r\n                                    lastPaidBlock &&\r\n                                    Number(lastPaidBlock) > 0 &&\r\n                                    minMaxInterval\r\n                                        ? Number(lastPaidBlock) +\r\n                                          minMaxInterval.max\r\n                                        : '---'\r\n                                }\r\n                                loading={minMaxIntervalLoading}\r\n                            />{' '}\r\n                            <BitByBitInfoRow\r\n                                title=\"Current Block Number \"\r\n                                value={blockNumber}\r\n                                loading={blockNumberLoading}\r\n                            />\r\n                            <BitByBitInfoRow\r\n                                title=\"Last Paid Block:\"\r\n                                value={lastPaidBlock}\r\n                                loading={lastPaidBlockLoading}\r\n                            />\r\n                            <BitByBitInfoRow\r\n                                title=\"Current Streak:\"\r\n                                value={currentStreak}\r\n                                loading={currentStreakLoading}\r\n                            />\r\n                            <BitByBitInfoRow\r\n                                title=\"Amount Paid:\"\r\n                                value={currentPaid}\r\n                                loading={currentPaidLoading}\r\n                            />\r\n                            <BitByBitInfoRow\r\n                                title=\"Interest Per Block for Amount Paid:\"\r\n                                value={interestForPaidAmount}\r\n                                loading={interestForPaidAmountLoading}\r\n                            />\r\n                            <BitByBitInfoRow\r\n                                title=\" Total Amount Paid (+Compounding Interst):\"\r\n                                value={compoundingInterest}\r\n                                loading={compoundingInterestLoading}\r\n                            />\r\n                        </div>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ProductPage;\r\n\r\nconst FAKE_DESC = `Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\nsed do eiusmod tempor incididunt ut labore et dolore\r\nmagna aliqua. Ut enim ad minim veniam, quis nostrud\r\nexercitation ullamco laboris nisi ut aliquip ex ea\r\ncommodo consequat. Duis aute irure dolor in\r\nreprehenderit in voluptate velit esse cillum dolore eu\r\nfugiat nulla pariatur. Excepteur sint occaecat cupidatat\r\nnon proident, sunt in culpa qui officia deserunt mollit\r\nanim id est laborum.`;\r\n\r\nconst BitByBitInfoRow = ({title, value, subvalue, loading}: any) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                borderBottom: '1px solid black',\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    textAlign: 'center',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: '3rem',\r\n                    justifyContent: 'center',\r\n                    fontWeight: 'bold',\r\n                }}\r\n            >\r\n                {title}\r\n            </div>\r\n            <div\r\n                style={{\r\n                    flex: 1,\r\n                    textAlign: 'right',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'flex-end',\r\n                    height: '3rem',\r\n                }}\r\n            >\r\n                {loading ? (\r\n                    <CircularProgress size={10} color=\"secondary\" />\r\n                ) : Number(value) > 0 ? (\r\n                    value\r\n                ) : (\r\n                    '---'\r\n                )}\r\n\r\n                {loading || subvalue == null ? '' : ` (${subvalue})`}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import Container from '@material-ui/core/Container';\r\nimport {blueGrey, deepOrange, orange} from '@material-ui/core/colors';\r\nimport Image from '../../components/Image.component';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {GitcoinContext} from '../../store';\r\nimport React from 'react';\r\nimport BoxPhoto from '../../assets/images/box.png';\r\nimport {Input} from '@material-ui/core';\r\nimport {\r\n    useGetQuadraticLootContract,\r\n    useGetQuadraticLootContractMeta,\r\n} from '../../hooks/Contract.hook';\r\nimport {\r\n    useGetAllTokensMinted,\r\n    useGetTokensURIs,\r\n} from '../../hooks/QuadraticLoot.hook';\r\nimport SVG from './f.svg';\r\nconst Shop = () => {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const [tokenId, setTokenId] = React.useState('');\r\n    const [err, setErr] = React.useState('');\r\n    const [contractMeta] = useGetQuadraticLootContractMeta(\r\n        state.token,\r\n        state.chain_id\r\n    );\r\n    const [contract] = useGetQuadraticLootContract(contractMeta);\r\n\r\n    const [allTokens] = useGetAllTokensMinted(contractMeta);\r\n    const [tokenURIs] = useGetTokensURIs(contract, allTokens);\r\n    console.log('allTokens', contractMeta, allTokens, tokenURIs);\r\n    const onMint = async () => {\r\n        const id = tokenId || Math.floor(Math.random() * 1e4);\r\n\r\n        try {\r\n            const f = await contract.methods\r\n                .claim(id)\r\n                .send({from: state.wallets[0]});\r\n            console.log('f', f);\r\n        } catch (err) {\r\n            console.log('err', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Container\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    margin: '2rem 0',\r\n                }}\r\n            >\r\n                <Container\r\n                    style={{\r\n                        width: '20rem',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        padding: 0,\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            width: '100%',\r\n                            position: 'relative',\r\n                            height: '100%',\r\n                        }}\r\n                    >\r\n                        <Image\r\n                            src={BoxPhoto}\r\n                            alt=\"DAOMART CLAIM REWARD\"\r\n                            className=\"picture-frame\"\r\n                        />\r\n                    </div>\r\n                </Container>\r\n                <Container\r\n                    style={{\r\n                        flex: 1,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                    }}\r\n                >\r\n                    <Container\r\n                        style={{\r\n                            width: '100%',\r\n                            padding: 0,\r\n                        }}\r\n                    >\r\n                        <Typography\r\n                            variant={'h3'}\r\n                            style={{\r\n                                fontFamily: 'AmericanCaptain',\r\n                                fontSize: '2rem',\r\n                                color: blueGrey['100'],\r\n                                textShadow: '1px 1px 3px black',\r\n                            }}\r\n                        >\r\n                            {`Quadratic Loot Box`}\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                            style={{\r\n                                fontFamily: 'AmericanCaptain',\r\n                                color: orange[300],\r\n                                fontSize: '5rem',\r\n                                textShadow: '1px 3px 3px black',\r\n                            }}\r\n                        >\r\n                            {'Quadratic Loot #1'}\r\n                        </Typography>\r\n                    </Container>\r\n                    <Typography\r\n                        style={{\r\n                            fontFamily: 'MarketDeco',\r\n                        }}\r\n                    >\r\n                        {FAKE_DESC}\r\n                    </Typography>\r\n                    <Container\r\n                        style={{\r\n                            width: '100%',\r\n                            padding: 0,\r\n                            margin: '1rem 0',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                    >\r\n                        <Input\r\n                            type=\"number\"\r\n                            style={{\r\n                                backgroundColor: orange['A400'],\r\n                                padding: '0.5rem',\r\n                                color: 'white',\r\n                                textAlign: 'center',\r\n                                border: '1px solid black',\r\n                            }}\r\n                            placeholder=\"Enter Token ID\"\r\n                            value={tokenId}\r\n                            onChange={(e) =>\r\n                                setTokenId(parseInt(e.target.value).toString())\r\n                            }\r\n                        />\r\n                        <button onClick={onMint}>\r\n                            <p>MINT NOW</p>\r\n                        </button>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n            <Container\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    flexWrap: 'wrap',\r\n                    padding: 0,\r\n                }}\r\n            >\r\n                {tokenURIs\r\n                    ? tokenURIs.map((t, i) => (\r\n                          <TokenCard key={i} token={t} contract={contract} />\r\n                      ))\r\n                    : null}\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Shop;\r\nconst FAKE_DESC = `Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\nsed do eiusmod tempor incididunt ut labore et dolore\r\nmagna aliqua. Ut enim ad minim veniam, quis nostrud\r\nexercitation ullamco laboris nisi ut aliquip ex ea\r\ncommodo consequat. Duis aute irure dolor in\r\nreprehenderit in voluptate velit esse cillum dolore eu\r\nfugiat nulla pariatur. Excepteur sint occaecat cupidatat\r\nnon proident, sunt in culpa qui officia deserunt mollit\r\nanim id est laborum.`;\r\n\r\nconst TokenCard = ({token, contract}) => {\r\n    const dataURI = token.image;\r\n    const json = atob(dataURI.substring(29));\r\n    const result = JSON.parse(json);\r\n    console.log('result', token);\r\n\r\n    return (\r\n        <div>\r\n            <p>{token.address}</p>\r\n\r\n            <img src={result.image} width=\"400\" height=\"400\" />\r\n        </div>\r\n    );\r\n};\r\n","import {ethers} from 'ethers';\r\nimport React from 'react';\r\nimport Web3 from 'web3';\r\nconst useGetAllTokensMinted = (contractMeta?: any) => {\r\n    const [tokens, settokens] = React.useState<any[] | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>(null);\r\n    React.useMemo(async () => {\r\n        if (!contractMeta) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        settokens(null);\r\n\r\n        try {\r\n            const TOPICS = ['Transfer(address,address,uint256)'];\r\n            setloading(true);\r\n            let myweb3: any = new Web3(window.ethereum);\r\n            const options = {\r\n                address: contractMeta.address,\r\n                fromBlock: 1,\r\n                toBlock: 'latest',\r\n                topics: [\r\n                    Web3.utils.keccak256(TOPICS[0]),\r\n                    ethers.constants.HashZero,\r\n                ],\r\n            };\r\n            const logs = await myweb3.eth.getPastLogs(options);\r\n            settokens(\r\n                logs.map((l) => myweb3.utils.hexToNumberString(l.topics[3]))\r\n            );\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            settokens(null);\r\n        }\r\n    }, [contractMeta]);\r\n    return [tokens, loading, err];\r\n};\r\nconst useGetTokensURIs = (contract?: any, ids?: string[]) => {\r\n    const [tokens, settokens] = React.useState<any[] | null>(null);\r\n    const [loading, setloading] = React.useState<boolean>(false);\r\n    const [err, seterr] = React.useState<any>(null);\r\n    React.useMemo(async () => {\r\n        if (!contract || !ids || !ids.length) {\r\n            return;\r\n        }\r\n        setloading(false);\r\n        seterr(null);\r\n        settokens(null);\r\n\r\n        try {\r\n            Promise.all(ids.map((id) => contract.methods.tokenURI(id).call()))\r\n                .then((uris) => {\r\n                    settokens(uris.map((uri, i) => ({id: ids[i], image: uri})));\r\n                })\r\n                .catch((err) => {\r\n                    console.log('err', err);\r\n                    setloading(false);\r\n                    seterr(err);\r\n                    settokens(null);\r\n                });\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            setloading(false);\r\n            seterr(err);\r\n            settokens(null);\r\n        }\r\n    }, [contract, ids]);\r\n    return [tokens, loading, err];\r\n};\r\nexport {useGetAllTokensMinted, useGetTokensURIs};\r\n","export default __webpack_public_path__ + \"static/media/about.2af085de.png\";","import Container from '@material-ui/core/Container';\r\nimport Image from '../../components/Image.component';\r\nimport GitcoinPhoto from '../../assets/images/about.png';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nconst Claim = () => {\r\n    return (\r\n        <Container\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                paddingTop: 32,\r\n            }}\r\n        >\r\n            <Image\r\n                src={GitcoinPhoto}\r\n                object-fit={'contain'}\r\n                alt=\"DAOMART CLAIM REWARD\"\r\n            />\r\n            <Container style={{flex: 0, padding: 32, margin: 0}}>\r\n                <Typography className=\"custom-font DeterminationMWR\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\r\n                    do eiusmod tempor incididunt ut labore et dolore magna\r\n                    aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                    ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n                    Duis aute irure dolor in reprehenderit in voluptate velit\r\n                    esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\n                    occaecat cupidatat non proident, sunt in culpa qui officia\r\n                    deserunt mollit anim id est laborum.\r\n                </Typography>\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Claim;\r\n","export default __webpack_public_path__ + \"static/media/blushing_malware.0fbf3870.png\";","import Container from '@material-ui/core/Container';\r\nimport Image from '../../components/Image.component';\r\nimport MalwareIcon from '../../assets/images/blushing_malware.png';\r\nimport HeartIcon from '../../assets/images/heart.png';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Web3 from 'web3';\r\n\r\nimport React from 'react';\r\nimport {GitcoinContext} from '../../store';\r\nimport {BigNumber} from 'ethers';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n    useGetTokenContract,\r\n    useGetTokenContractMeta,\r\n} from '../../hooks/Contract.hook';\r\nimport {ACTIONS} from '../../store/actions';\r\ndeclare const window: any;\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Claim = () => {\r\n    const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const [contractMeta] = useGetTokenContractMeta(state.token, state.chain_id);\r\n    const [contract] = useGetTokenContract(contractMeta);\r\n    const Reward = 500;\r\n    const onClaim = async () => {\r\n        if (!contract) {\r\n            return;\r\n        }\r\n        try {\r\n            dispatch({type: ACTIONS.AUTHCHECK});\r\n            setLoading(true);\r\n            contract.methods\r\n                .getCandy(\r\n                    state.wallets[state.wallet],\r\n                    BigNumber.from(10).pow(18).mul(Reward)\r\n                )\r\n                .send({\r\n                    from: state.wallets[state.wallet],\r\n                })\r\n                .then((res) => {\r\n                    dispatch({type: ACTIONS.TRIGGER_CANDY_BALANCE});\r\n                    setLoading(false);\r\n                    setSnackbarOpen(true);\r\n                })\r\n                .catch((err) => {\r\n                    setLoading(false);\r\n                });\r\n        } catch (err) {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    return (\r\n        <Container\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                justifyContent: 'center',\r\n                paddingTop: '7%',\r\n            }}\r\n        >\r\n            <Image\r\n                src={MalwareIcon}\r\n                object-fit={'contain'}\r\n                height=\"256\"\r\n                width=\"256\"\r\n                alt=\"DAOMART CLAIM REWARD\"\r\n            />\r\n            <Container style={{flex: 0, padding: 32, margin: 0}}>\r\n                <Typography\r\n                    className=\"custom-font DeterminationMWR\"\r\n                    variant={'h3'}\r\n                >\r\n                    Congratulations\r\n                </Typography>\r\n                <Typography\r\n                    className=\"custom-font DeterminationMWR\"\r\n                    variant=\"h6\"\r\n                    align=\"center\"\r\n                >\r\n                    {`YOU ARE ELLIGABLE TO CLAIM`}\r\n                    <p style={{margin: 0}}>\r\n                        <span\r\n                            style={{\r\n                                color: 'crimson',\r\n                                fontWeight: 'bold',\r\n                                padding: '0 0.5rem',\r\n                                fontSize: '1.5rem',\r\n                            }}\r\n                        >\r\n                            {`Ξ${Reward}`}\r\n                        </span>\r\n                        {`Reward tokens`}\r\n                    </p>\r\n                </Typography>\r\n                <Container\r\n                    style={{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        padding: 32,\r\n                    }}\r\n                >\r\n                    <Button\r\n                        style={{\r\n                            width: '10rem',\r\n                            border: '2px solid rgba(40,40,40,.75)',\r\n                            color: 'rgba(40,40,40,1)',\r\n                            borderRadius: 0,\r\n                            fontWeight: 'bolder',\r\n                            fontFamily: 'DeterminationMonoWebRegular',\r\n                            fontSize: '2rem',\r\n                        }}\r\n                        onClick={() => onClaim()}\r\n                        disabled={loading}\r\n                    >\r\n                        {loading ? (\r\n                            <CircularProgress size={24} />\r\n                        ) : (\r\n                            <div>\r\n                                <Image\r\n                                    src={HeartIcon}\r\n                                    height=\"24\"\r\n                                    width=\"24\"\r\n                                    object-fit={'contain'}\r\n                                    alt=\"DAOMART CLAIM REWARD\"\r\n                                />\r\n                                CLAIM!\r\n                            </div>\r\n                        )}\r\n                    </Button>\r\n                </Container>\r\n            </Container>\r\n            <Image\r\n                src={MalwareIcon}\r\n                object-fit={'contain'}\r\n                height=\"256\"\r\n                width=\"256\"\r\n                alt=\"DAOMART CLAIM REWARD\"\r\n            />\r\n\r\n            <Snackbar\r\n                open={snackbarOpen}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSnackbarOpen(false)}\r\n            >\r\n                <Alert\r\n                    onClose={() => setSnackbarOpen(false)}\r\n                    severity=\"success\"\r\n                >\r\n                    successfully claimed 69 RWD tokens!\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Claim;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {Button, Divider} from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {GitcoinContext} from '../store';\r\nimport WalletComponent from './Wallet.component';\r\nimport Web3 from 'web3';\r\nimport {isAddress} from 'ethers/lib/utils';\r\nimport {CheckAuth, GetNonce, Login} from '../network/auth';\r\nimport {Chip} from '@material-ui/core';\r\nimport {ACTIONS} from '../store/actions';\r\ndeclare const window: any;\r\nfunction SignIncomponent() {\r\n    const {state, dispatch} = React.useContext(GitcoinContext);\r\n    const [err, setErr] = React.useState('');\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [alreadySignedUp, setAlreadySignedUp] = React.useState(true);\r\n    const [login, setLogin] = React.useState({\r\n        address: '',\r\n        name: '',\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        setLogin({...login, address: state.wallets[0]});\r\n        try {\r\n            setAlreadySignedUp(true);\r\n            if (isAddress(state.wallets[0])) {\r\n                CheckAuth(state.wallets[0])\r\n                    .then((result) => {\r\n                        if (\r\n                            result &&\r\n                            result.data.success &&\r\n                            result.data.data.address == state.wallets[0] &&\r\n                            result.data.data.exists\r\n                        ) {\r\n                            setAlreadySignedUp(true);\r\n                        } else {\r\n                            setAlreadySignedUp(false);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        setAlreadySignedUp(true);\r\n                        console.log(err);\r\n                    });\r\n            } else {\r\n                setAlreadySignedUp(true);\r\n            }\r\n        } catch (err) {\r\n            setAlreadySignedUp(true);\r\n            console.log(err);\r\n        }\r\n    }, [state.wallets]);\r\n\r\n    const onGetNonce = () => {\r\n        if (login.address && isAddress(login.address)) {\r\n            if (\r\n                !alreadySignedUp &&\r\n                (!login.name || login.name.toString().trim().length < 4)\r\n            ) {\r\n                setErr('Nickname must be alteast 4 letters');\r\n                return;\r\n            }\r\n            setErr('');\r\n            setLoading(true);\r\n            GetNonce(login.address)\r\n                .then((res) => {\r\n                    if (res && res.data && res.data.success) {\r\n                        let nonce = res.data.data.nonce;\r\n                        let myweb3: any = new Web3(window.ethereum);\r\n\r\n                        myweb3.eth.personal\r\n                            .sign(nonce, state.wallets[state.wallet])\r\n                            .then((signedMessage) => {\r\n                                Login(\r\n                                    signedMessage,\r\n                                    nonce,\r\n                                    state.wallets[state.wallet],\r\n                                    login.name\r\n                                )\r\n                                    .then((result) => {\r\n                                        const data = result.data;\r\n                                        console.log('data', data);\r\n                                        setLoading(false);\r\n                                        if (data.success) {\r\n                                            setErr('');\r\n                                            dispatch({\r\n                                                type: ACTIONS.SETUP,\r\n                                                payload: {\r\n                                                    token: data.data.token,\r\n                                                    profile: data.data.profile,\r\n                                                },\r\n                                            });\r\n                                        } else {\r\n                                            setErr('Unknow Error');\r\n                                        }\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        setLoading(false);\r\n                                        setErr('Error loging in');\r\n                                        console.log(err);\r\n                                    });\r\n                            })\r\n                            .catch((err) => {\r\n                                setLoading(false);\r\n                                setErr('Error siging data');\r\n                            });\r\n                    } else {\r\n                        setLoading(false);\r\n                        setErr('Unknown err');\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setLoading(false);\r\n                    setErr(\r\n                        err?.msg || err?.message || `Unknown err (${err.code})`\r\n                    );\r\n                });\r\n        } else {\r\n            setErr('Address not selected');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            style={{\r\n                display: 'flex',\r\n                width: '100%',\r\n                alignItems: 'center',\r\n                background: 'red',\r\n            }}\r\n        >\r\n            <Box\r\n                component=\"main\"\r\n                style={{\r\n                    backgroundColor: '#babcbf',\r\n                    flexGrow: 1,\r\n                    height: '100vh',\r\n                    overflow: 'auto',\r\n                }}\r\n            >\r\n                <Container\r\n                    maxWidth=\"lg\"\r\n                    style={{\r\n                        marginTop: '15%',\r\n                        width: '100%',\r\n                        justifyContent: 'center',\r\n                        display: 'flex',\r\n                    }}\r\n                >\r\n                    <Paper\r\n                        style={{\r\n                            padding: 16,\r\n                            width: 480,\r\n                        }}\r\n                    >\r\n                        <form\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                            style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                        >\r\n                            {err ? (\r\n                                <Chip\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label={JSON.stringify(err || '\"\"')}\r\n                                    onDelete={() => setErr('')}\r\n                                    style={{\r\n                                        borderColor: 'crimson',\r\n                                        color: 'crimson', //TODO theme\r\n                                    }}\r\n                                />\r\n                            ) : null}\r\n                            <p style={{textAlign: 'center', fontSize: 24}}>\r\n                                Connect your wallet\r\n                            </p>\r\n                            <div style={{margin: 16}}>\r\n                                <WalletComponent />\r\n                            </div>\r\n\r\n                            {alreadySignedUp ? null : (\r\n                                <FormControl\r\n                                    variant=\"outlined\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                    }}\r\n                                >\r\n                                    <TextField\r\n                                        size=\"small\"\r\n                                        required\r\n                                        id=\"outlined-required\"\r\n                                        label=\"Nickname\"\r\n                                        placeholder=\"Enter your nickname\"\r\n                                        variant=\"outlined\"\r\n                                        value={login.name}\r\n                                        onChange={(e) =>\r\n                                            setLogin({\r\n                                                ...login,\r\n                                                name: e.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            )}\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'center',\r\n                                    margin: '1rem 0',\r\n                                }}\r\n                            >\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    onClick={onGetNonce}\r\n                                    variant=\"contained\"\r\n                                    component=\"label\"\r\n                                    color=\"primary\"\r\n                                >\r\n                                    SignIn\r\n                                    {loading && <CircularProgress size={24} />}\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </Paper>\r\n                </Container>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default function SignIn() {\r\n    return <SignIncomponent />;\r\n}\r\n","import axios from 'axios';\r\nimport {GetBaseUrl} from './NETWORK_CONSTS';\r\n\r\nconst GetNonce = (address: string): Promise<any> => {\r\n    return axios.get(GetBaseUrl('auth/nonce/' + address));\r\n};\r\nconst Login = (\r\n    signedMessage: string,\r\n    nonce: string,\r\n    address: string,\r\n    name: string\r\n): Promise<any> => {\r\n    return axios.post(GetBaseUrl('auth/login'), {\r\n        signedMessage: signedMessage,\r\n        nonce: nonce,\r\n        address: address,\r\n        name: name,\r\n    });\r\n};\r\nconst CheckAuth = (address: string): Promise<any> => {\r\n    return axios.post(GetBaseUrl('auth/check'), {\r\n        address: address,\r\n    });\r\n};\r\nexport {GetNonce, Login, CheckAuth};\r\n","import {Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport ShopPage from './shop';\r\nimport ProductPage from './shop/product';\r\nimport QuadraticLootPage from './shop/q-loot';\r\nimport AboutPage from './about';\r\nimport ClaimPage from './claim/Claim.page';\r\nimport SignIn from '../components/SignIn.component';\r\n\r\nimport React from 'react';\r\nimport {GitcoinContext} from '../store';\r\nimport {ACTIONS} from '../store/actions';\r\n\r\nconst RouterWrapper = () => {\r\n    return (\r\n        <Container style={{marginTop: '1em'}}>\r\n            <Switch>\r\n                <Route path={'/'} exact={true} component={ShopPage} />\r\n                <Route path={'/shop/product/:pid'} component={ProductPage} />\r\n                <Route\r\n                    path={'/shop/quadratic-loot'}\r\n                    component={QuadraticLootPage}\r\n                />\r\n                <Route path={'/claim'} exact={true} component={ClaimPage} />\r\n                <Route path={'/about'} exact={true} component={AboutPage} />\r\n            </Switch>\r\n        </Container>\r\n    );\r\n};\r\nconst AuthRouter = () => {\r\n    const {dispatch} = React.useContext(GitcoinContext);\r\n\r\n    return (\r\n        <Container style={{marginTop: '1em'}}>\r\n            <Switch>\r\n                <Route path={'/'} component={SignIn} />\r\n            </Switch>\r\n        </Container>\r\n    );\r\n};\r\nexport {RouterWrapper, AuthRouter};\r\n","import GetUrl, {SERVER} from './NETWORK_CONSTS';\r\nimport {Manager} from 'socket.io-client';\r\nimport {useState, useMemo} from 'react';\r\nimport {GetProductLobby} from './api';\r\n\r\nlet mainManager;\r\nlet mainSocket;\r\n\r\nconst Connect = (token) => {\r\n    if (!token) {\r\n        return;\r\n    }\r\n\r\n    mainSocket.on('error', (err) => {\r\n        console.log('error', err);\r\n    });\r\n    mainSocket.on('connect_error', (err) => {\r\n        console.log('connect_error', err);\r\n    });\r\n\r\n    mainSocket.on('reconnect', () => {\r\n        console.log('reconnected to rainbow :', mainSocket.id);\r\n    });\r\n    mainSocket.on('error', (err) => {\r\n        console.log('error', err);\r\n    });\r\n    mainSocket.on('reconnect_attempt', (d) => {\r\n        console.log('reconnect_attempt', d);\r\n    });\r\n};\r\nconst Disconnect = () => {\r\n    if (mainSocket) {\r\n        mainSocket.close();\r\n    }\r\n\r\n    mainSocket = null;\r\n    mainManager = null;\r\n};\r\n\r\nconst useGetSocket = (token, setup = 1) => {\r\n    const [status, setstatus] = useState(mainSocket && mainSocket.connected);\r\n    const [id, setid] = useState(\r\n        mainSocket && mainSocket.connected ? mainSocket.id : ''\r\n    );\r\n    useMemo(async () => {\r\n        if (token && setup === 1) {\r\n            if (!mainManager || !mainSocket) {\r\n                mainManager = new Manager(SERVER, {\r\n                    reconnection: true,\r\n                    reconnectionDelay: 1000,\r\n                    reconnectionDelayMax: 10000,\r\n                    reconnectionAttempts: 5,\r\n                });\r\n                mainSocket = mainManager.socket('/', {\r\n                    auth: {\r\n                        token: 'Bearer ' + token,\r\n                    },\r\n                });\r\n                mainSocket.on('connect', () => {\r\n                    console.log('connect');\r\n                    setstatus(1);\r\n                    setid(mainSocket.id);\r\n                    console.log('CONNECTED connected :', mainSocket.id);\r\n                });\r\n                mainSocket.on('disconnect', () => {\r\n                    setstatus(0);\r\n                    setid('');\r\n                    console.log(' disconnected :');\r\n                });\r\n            }\r\n        }\r\n        return () => Disconnect();\r\n    }, [token, setup]);\r\n    return [status, id];\r\n};\r\n\r\nconst useSubToProductViewers = (token, pid): [any[], boolean, any] => {\r\n    const [members, setmembers] = useState<any[]>([]);\r\n    const [loading, setloading] = useState(false);\r\n    const [err, seterr] = useState('');\r\n\r\n    const tryRemove = (obj) => {\r\n        const i = members.findIndex((m: any) => m.address == obj.address);\r\n        if (i > -1) {\r\n            members.splice(i, 1);\r\n            setmembers([...members]);\r\n        }\r\n    };\r\n    const tryAdd = (obj: any) => {\r\n        const i = members.findIndex((m: any) => m.address == obj.address);\r\n        if (i < 0) {\r\n            members.push(obj);\r\n            setmembers([...members]);\r\n        }\r\n    };\r\n    useMemo(() => {\r\n        if (!token) {\r\n            return;\r\n        }\r\n        setloading(true);\r\n\r\n        GetProductLobby(token, pid)\r\n            .then((result) => {\r\n                if (result.data.success) {\r\n                    setloading(false);\r\n                    setmembers(result.data.data);\r\n                } else {\r\n                    console.log('result.data', result.data);\r\n                    setloading(false);\r\n                    seterr('UNKNOW ERROR');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setloading(false);\r\n                setmembers([]);\r\n                seterr(err);\r\n                console.log('err', err);\r\n            });\r\n\r\n        if (mainSocket) {\r\n            mainSocket.on('ON_ENTER', (res) => {\r\n                tryAdd(res.data);\r\n            });\r\n\r\n            mainSocket.on('ON_EXIT', (res) => {\r\n                tryRemove(res.data);\r\n            });\r\n        }\r\n        return () => {\r\n            if (mainSocket) {\r\n                mainSocket.off('ON_ENTER');\r\n                mainSocket.off('ON_EXIT');\r\n            }\r\n        };\r\n    }, [token]);\r\n\r\n    return [members, loading, err];\r\n};\r\nexport {useGetSocket, useSubToProductViewers};\r\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport SignIn from '../components/SignIn.component';\nimport StatusBarComponent from '../components/StatusBar.component';\nimport Navbar from '../components/Navbar.component';\nimport {GitcoinContext} from '../store';\nimport {RouterWrapper, AuthRouter} from './router';\nimport {useGetSocket} from '../network/socket';\n\nconst Pages = () => {\n    const {state} = React.useContext(GitcoinContext);\n    const socket = useGetSocket(state.token);\n    return (\n        <Container maxWidth=\"xl\">\n            <Box className=\"background\">\n                <Router>\n                    <CssBaseline />\n\n                    <StatusBarComponent />\n                    <Navbar />\n                    <Box component=\"main\">\n                        <Container maxWidth=\"lg\" style={{marginTop: '1rem'}}>\n                            {state.isAuth === 'NEED_AUTH' ? (\n                                <AuthRouter />\n                            ) : (\n                                <RouterWrapper />\n                            )}\n                        </Container>\n                    </Box>\n                </Router>\n            </Box>\n        </Container>\n    );\n};\n\nexport {Pages};\n","import React from 'react';\nimport './App.scss';\nimport {GitcoinProvider} from './store';\nimport {Pages} from './pages';\nfunction App() {\n    return (\n        <GitcoinProvider>\n            <Pages />\n        </GitcoinProvider>\n    );\n}\n\nexport default App;\ndeclare global {\n    interface Window {\n        ethereum?: any;\n        web3?: any;\n        __CIPHER__?: any;\n    }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}